
PB_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003a4c  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08003bd4  08003bd4  00013bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003bf4  08003bf4  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  08003bf4  08003bf4  00013bf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003bfc  08003bfc  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003bfc  08003bfc  00013bfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003c00  08003c00  00013c00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08003c04  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000005fc  2000000c  08003c10  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000608  08003c10  00020608  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000da2f  00000000  00000000  0002003c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001d33  00000000  00000000  0002da6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000c48  00000000  00000000  0002f7a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000b70  00000000  00000000  000303e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002112e  00000000  00000000  00030f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00009290  00000000  00000000  00052086  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000c9fc0  00000000  00000000  0005b316  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  001252d6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003358  00000000  00000000  00125354  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	2000000c 	.word	0x2000000c
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08003bbc 	.word	0x08003bbc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000010 	.word	0x20000010
 80001c4:	08003bbc 	.word	0x08003bbc

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295
 80001dc:	f000 b972 	b.w	80004c4 <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	9e08      	ldr	r6, [sp, #32]
 80001fe:	4604      	mov	r4, r0
 8000200:	4688      	mov	r8, r1
 8000202:	2b00      	cmp	r3, #0
 8000204:	d14b      	bne.n	800029e <__udivmoddi4+0xa6>
 8000206:	428a      	cmp	r2, r1
 8000208:	4615      	mov	r5, r2
 800020a:	d967      	bls.n	80002dc <__udivmoddi4+0xe4>
 800020c:	fab2 f282 	clz	r2, r2
 8000210:	b14a      	cbz	r2, 8000226 <__udivmoddi4+0x2e>
 8000212:	f1c2 0720 	rsb	r7, r2, #32
 8000216:	fa01 f302 	lsl.w	r3, r1, r2
 800021a:	fa20 f707 	lsr.w	r7, r0, r7
 800021e:	4095      	lsls	r5, r2
 8000220:	ea47 0803 	orr.w	r8, r7, r3
 8000224:	4094      	lsls	r4, r2
 8000226:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800022a:	0c23      	lsrs	r3, r4, #16
 800022c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000230:	fa1f fc85 	uxth.w	ip, r5
 8000234:	fb0e 8817 	mls	r8, lr, r7, r8
 8000238:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800023c:	fb07 f10c 	mul.w	r1, r7, ip
 8000240:	4299      	cmp	r1, r3
 8000242:	d909      	bls.n	8000258 <__udivmoddi4+0x60>
 8000244:	18eb      	adds	r3, r5, r3
 8000246:	f107 30ff 	add.w	r0, r7, #4294967295
 800024a:	f080 811b 	bcs.w	8000484 <__udivmoddi4+0x28c>
 800024e:	4299      	cmp	r1, r3
 8000250:	f240 8118 	bls.w	8000484 <__udivmoddi4+0x28c>
 8000254:	3f02      	subs	r7, #2
 8000256:	442b      	add	r3, r5
 8000258:	1a5b      	subs	r3, r3, r1
 800025a:	b2a4      	uxth	r4, r4
 800025c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000260:	fb0e 3310 	mls	r3, lr, r0, r3
 8000264:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000268:	fb00 fc0c 	mul.w	ip, r0, ip
 800026c:	45a4      	cmp	ip, r4
 800026e:	d909      	bls.n	8000284 <__udivmoddi4+0x8c>
 8000270:	192c      	adds	r4, r5, r4
 8000272:	f100 33ff 	add.w	r3, r0, #4294967295
 8000276:	f080 8107 	bcs.w	8000488 <__udivmoddi4+0x290>
 800027a:	45a4      	cmp	ip, r4
 800027c:	f240 8104 	bls.w	8000488 <__udivmoddi4+0x290>
 8000280:	3802      	subs	r0, #2
 8000282:	442c      	add	r4, r5
 8000284:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000288:	eba4 040c 	sub.w	r4, r4, ip
 800028c:	2700      	movs	r7, #0
 800028e:	b11e      	cbz	r6, 8000298 <__udivmoddi4+0xa0>
 8000290:	40d4      	lsrs	r4, r2
 8000292:	2300      	movs	r3, #0
 8000294:	e9c6 4300 	strd	r4, r3, [r6]
 8000298:	4639      	mov	r1, r7
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	428b      	cmp	r3, r1
 80002a0:	d909      	bls.n	80002b6 <__udivmoddi4+0xbe>
 80002a2:	2e00      	cmp	r6, #0
 80002a4:	f000 80eb 	beq.w	800047e <__udivmoddi4+0x286>
 80002a8:	2700      	movs	r7, #0
 80002aa:	e9c6 0100 	strd	r0, r1, [r6]
 80002ae:	4638      	mov	r0, r7
 80002b0:	4639      	mov	r1, r7
 80002b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002b6:	fab3 f783 	clz	r7, r3
 80002ba:	2f00      	cmp	r7, #0
 80002bc:	d147      	bne.n	800034e <__udivmoddi4+0x156>
 80002be:	428b      	cmp	r3, r1
 80002c0:	d302      	bcc.n	80002c8 <__udivmoddi4+0xd0>
 80002c2:	4282      	cmp	r2, r0
 80002c4:	f200 80fa 	bhi.w	80004bc <__udivmoddi4+0x2c4>
 80002c8:	1a84      	subs	r4, r0, r2
 80002ca:	eb61 0303 	sbc.w	r3, r1, r3
 80002ce:	2001      	movs	r0, #1
 80002d0:	4698      	mov	r8, r3
 80002d2:	2e00      	cmp	r6, #0
 80002d4:	d0e0      	beq.n	8000298 <__udivmoddi4+0xa0>
 80002d6:	e9c6 4800 	strd	r4, r8, [r6]
 80002da:	e7dd      	b.n	8000298 <__udivmoddi4+0xa0>
 80002dc:	b902      	cbnz	r2, 80002e0 <__udivmoddi4+0xe8>
 80002de:	deff      	udf	#255	; 0xff
 80002e0:	fab2 f282 	clz	r2, r2
 80002e4:	2a00      	cmp	r2, #0
 80002e6:	f040 808f 	bne.w	8000408 <__udivmoddi4+0x210>
 80002ea:	1b49      	subs	r1, r1, r5
 80002ec:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f0:	fa1f f885 	uxth.w	r8, r5
 80002f4:	2701      	movs	r7, #1
 80002f6:	fbb1 fcfe 	udiv	ip, r1, lr
 80002fa:	0c23      	lsrs	r3, r4, #16
 80002fc:	fb0e 111c 	mls	r1, lr, ip, r1
 8000300:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000304:	fb08 f10c 	mul.w	r1, r8, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d907      	bls.n	800031c <__udivmoddi4+0x124>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000312:	d202      	bcs.n	800031a <__udivmoddi4+0x122>
 8000314:	4299      	cmp	r1, r3
 8000316:	f200 80cd 	bhi.w	80004b4 <__udivmoddi4+0x2bc>
 800031a:	4684      	mov	ip, r0
 800031c:	1a59      	subs	r1, r3, r1
 800031e:	b2a3      	uxth	r3, r4
 8000320:	fbb1 f0fe 	udiv	r0, r1, lr
 8000324:	fb0e 1410 	mls	r4, lr, r0, r1
 8000328:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800032c:	fb08 f800 	mul.w	r8, r8, r0
 8000330:	45a0      	cmp	r8, r4
 8000332:	d907      	bls.n	8000344 <__udivmoddi4+0x14c>
 8000334:	192c      	adds	r4, r5, r4
 8000336:	f100 33ff 	add.w	r3, r0, #4294967295
 800033a:	d202      	bcs.n	8000342 <__udivmoddi4+0x14a>
 800033c:	45a0      	cmp	r8, r4
 800033e:	f200 80b6 	bhi.w	80004ae <__udivmoddi4+0x2b6>
 8000342:	4618      	mov	r0, r3
 8000344:	eba4 0408 	sub.w	r4, r4, r8
 8000348:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800034c:	e79f      	b.n	800028e <__udivmoddi4+0x96>
 800034e:	f1c7 0c20 	rsb	ip, r7, #32
 8000352:	40bb      	lsls	r3, r7
 8000354:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000358:	ea4e 0e03 	orr.w	lr, lr, r3
 800035c:	fa01 f407 	lsl.w	r4, r1, r7
 8000360:	fa20 f50c 	lsr.w	r5, r0, ip
 8000364:	fa21 f30c 	lsr.w	r3, r1, ip
 8000368:	ea4f 481e 	mov.w	r8, lr, lsr #16
 800036c:	4325      	orrs	r5, r4
 800036e:	fbb3 f9f8 	udiv	r9, r3, r8
 8000372:	0c2c      	lsrs	r4, r5, #16
 8000374:	fb08 3319 	mls	r3, r8, r9, r3
 8000378:	fa1f fa8e 	uxth.w	sl, lr
 800037c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000380:	fb09 f40a 	mul.w	r4, r9, sl
 8000384:	429c      	cmp	r4, r3
 8000386:	fa02 f207 	lsl.w	r2, r2, r7
 800038a:	fa00 f107 	lsl.w	r1, r0, r7
 800038e:	d90b      	bls.n	80003a8 <__udivmoddi4+0x1b0>
 8000390:	eb1e 0303 	adds.w	r3, lr, r3
 8000394:	f109 30ff 	add.w	r0, r9, #4294967295
 8000398:	f080 8087 	bcs.w	80004aa <__udivmoddi4+0x2b2>
 800039c:	429c      	cmp	r4, r3
 800039e:	f240 8084 	bls.w	80004aa <__udivmoddi4+0x2b2>
 80003a2:	f1a9 0902 	sub.w	r9, r9, #2
 80003a6:	4473      	add	r3, lr
 80003a8:	1b1b      	subs	r3, r3, r4
 80003aa:	b2ad      	uxth	r5, r5
 80003ac:	fbb3 f0f8 	udiv	r0, r3, r8
 80003b0:	fb08 3310 	mls	r3, r8, r0, r3
 80003b4:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80003b8:	fb00 fa0a 	mul.w	sl, r0, sl
 80003bc:	45a2      	cmp	sl, r4
 80003be:	d908      	bls.n	80003d2 <__udivmoddi4+0x1da>
 80003c0:	eb1e 0404 	adds.w	r4, lr, r4
 80003c4:	f100 33ff 	add.w	r3, r0, #4294967295
 80003c8:	d26b      	bcs.n	80004a2 <__udivmoddi4+0x2aa>
 80003ca:	45a2      	cmp	sl, r4
 80003cc:	d969      	bls.n	80004a2 <__udivmoddi4+0x2aa>
 80003ce:	3802      	subs	r0, #2
 80003d0:	4474      	add	r4, lr
 80003d2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80003d6:	fba0 8902 	umull	r8, r9, r0, r2
 80003da:	eba4 040a 	sub.w	r4, r4, sl
 80003de:	454c      	cmp	r4, r9
 80003e0:	46c2      	mov	sl, r8
 80003e2:	464b      	mov	r3, r9
 80003e4:	d354      	bcc.n	8000490 <__udivmoddi4+0x298>
 80003e6:	d051      	beq.n	800048c <__udivmoddi4+0x294>
 80003e8:	2e00      	cmp	r6, #0
 80003ea:	d069      	beq.n	80004c0 <__udivmoddi4+0x2c8>
 80003ec:	ebb1 050a 	subs.w	r5, r1, sl
 80003f0:	eb64 0403 	sbc.w	r4, r4, r3
 80003f4:	fa04 fc0c 	lsl.w	ip, r4, ip
 80003f8:	40fd      	lsrs	r5, r7
 80003fa:	40fc      	lsrs	r4, r7
 80003fc:	ea4c 0505 	orr.w	r5, ip, r5
 8000400:	e9c6 5400 	strd	r5, r4, [r6]
 8000404:	2700      	movs	r7, #0
 8000406:	e747      	b.n	8000298 <__udivmoddi4+0xa0>
 8000408:	f1c2 0320 	rsb	r3, r2, #32
 800040c:	fa20 f703 	lsr.w	r7, r0, r3
 8000410:	4095      	lsls	r5, r2
 8000412:	fa01 f002 	lsl.w	r0, r1, r2
 8000416:	fa21 f303 	lsr.w	r3, r1, r3
 800041a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800041e:	4338      	orrs	r0, r7
 8000420:	0c01      	lsrs	r1, r0, #16
 8000422:	fbb3 f7fe 	udiv	r7, r3, lr
 8000426:	fa1f f885 	uxth.w	r8, r5
 800042a:	fb0e 3317 	mls	r3, lr, r7, r3
 800042e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000432:	fb07 f308 	mul.w	r3, r7, r8
 8000436:	428b      	cmp	r3, r1
 8000438:	fa04 f402 	lsl.w	r4, r4, r2
 800043c:	d907      	bls.n	800044e <__udivmoddi4+0x256>
 800043e:	1869      	adds	r1, r5, r1
 8000440:	f107 3cff 	add.w	ip, r7, #4294967295
 8000444:	d22f      	bcs.n	80004a6 <__udivmoddi4+0x2ae>
 8000446:	428b      	cmp	r3, r1
 8000448:	d92d      	bls.n	80004a6 <__udivmoddi4+0x2ae>
 800044a:	3f02      	subs	r7, #2
 800044c:	4429      	add	r1, r5
 800044e:	1acb      	subs	r3, r1, r3
 8000450:	b281      	uxth	r1, r0
 8000452:	fbb3 f0fe 	udiv	r0, r3, lr
 8000456:	fb0e 3310 	mls	r3, lr, r0, r3
 800045a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800045e:	fb00 f308 	mul.w	r3, r0, r8
 8000462:	428b      	cmp	r3, r1
 8000464:	d907      	bls.n	8000476 <__udivmoddi4+0x27e>
 8000466:	1869      	adds	r1, r5, r1
 8000468:	f100 3cff 	add.w	ip, r0, #4294967295
 800046c:	d217      	bcs.n	800049e <__udivmoddi4+0x2a6>
 800046e:	428b      	cmp	r3, r1
 8000470:	d915      	bls.n	800049e <__udivmoddi4+0x2a6>
 8000472:	3802      	subs	r0, #2
 8000474:	4429      	add	r1, r5
 8000476:	1ac9      	subs	r1, r1, r3
 8000478:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 800047c:	e73b      	b.n	80002f6 <__udivmoddi4+0xfe>
 800047e:	4637      	mov	r7, r6
 8000480:	4630      	mov	r0, r6
 8000482:	e709      	b.n	8000298 <__udivmoddi4+0xa0>
 8000484:	4607      	mov	r7, r0
 8000486:	e6e7      	b.n	8000258 <__udivmoddi4+0x60>
 8000488:	4618      	mov	r0, r3
 800048a:	e6fb      	b.n	8000284 <__udivmoddi4+0x8c>
 800048c:	4541      	cmp	r1, r8
 800048e:	d2ab      	bcs.n	80003e8 <__udivmoddi4+0x1f0>
 8000490:	ebb8 0a02 	subs.w	sl, r8, r2
 8000494:	eb69 020e 	sbc.w	r2, r9, lr
 8000498:	3801      	subs	r0, #1
 800049a:	4613      	mov	r3, r2
 800049c:	e7a4      	b.n	80003e8 <__udivmoddi4+0x1f0>
 800049e:	4660      	mov	r0, ip
 80004a0:	e7e9      	b.n	8000476 <__udivmoddi4+0x27e>
 80004a2:	4618      	mov	r0, r3
 80004a4:	e795      	b.n	80003d2 <__udivmoddi4+0x1da>
 80004a6:	4667      	mov	r7, ip
 80004a8:	e7d1      	b.n	800044e <__udivmoddi4+0x256>
 80004aa:	4681      	mov	r9, r0
 80004ac:	e77c      	b.n	80003a8 <__udivmoddi4+0x1b0>
 80004ae:	3802      	subs	r0, #2
 80004b0:	442c      	add	r4, r5
 80004b2:	e747      	b.n	8000344 <__udivmoddi4+0x14c>
 80004b4:	f1ac 0c02 	sub.w	ip, ip, #2
 80004b8:	442b      	add	r3, r5
 80004ba:	e72f      	b.n	800031c <__udivmoddi4+0x124>
 80004bc:	4638      	mov	r0, r7
 80004be:	e708      	b.n	80002d2 <__udivmoddi4+0xda>
 80004c0:	4637      	mov	r7, r6
 80004c2:	e6e9      	b.n	8000298 <__udivmoddi4+0xa0>

080004c4 <__aeabi_idiv0>:
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop

080004c8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80004cc:	f001 fa14 	bl	80018f8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80004d0:	f000 f834 	bl	800053c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80004d4:	f000 f994 	bl	8000800 <MX_GPIO_Init>
  MX_DMA_Init();
 80004d8:	f000 f96a 	bl	80007b0 <MX_DMA_Init>
  MX_USART1_UART_Init();
 80004dc:	f000 f93c 	bl	8000758 <MX_USART1_UART_Init>
  MX_TIM2_Init();
 80004e0:	f000 f896 	bl	8000610 <MX_TIM2_Init>
  MX_TIM5_Init();
 80004e4:	f000 f8e0 	bl	80006a8 <MX_TIM5_Init>
  /* USER CODE BEGIN 2 */

  dev_config.dir = OUT;
 80004e8:	4b10      	ldr	r3, [pc, #64]	; (800052c <main+0x64>)
 80004ea:	2220      	movs	r2, #32
 80004ec:	701a      	strb	r2, [r3, #0]
  dev_config.size = BYTE;
 80004ee:	4b0f      	ldr	r3, [pc, #60]	; (800052c <main+0x64>)
 80004f0:	2200      	movs	r2, #0
 80004f2:	705a      	strb	r2, [r3, #1]
  dev_config.len = 8;
 80004f4:	4b0d      	ldr	r3, [pc, #52]	; (800052c <main+0x64>)
 80004f6:	2208      	movs	r2, #8
 80004f8:	709a      	strb	r2, [r3, #2]

  slave_cfg.addr = 0x03;
 80004fa:	4b0d      	ldr	r3, [pc, #52]	; (8000530 <main+0x68>)
 80004fc:	2203      	movs	r2, #3
 80004fe:	701a      	strb	r2, [r3, #0]
  slave_cfg.speed = speed_1500K;
 8000500:	4b0b      	ldr	r3, [pc, #44]	; (8000530 <main+0x68>)
 8000502:	2205      	movs	r2, #5
 8000504:	705a      	strb	r2, [r3, #1]
  slave_cfg.ident = 0x1133;
 8000506:	4b0a      	ldr	r3, [pc, #40]	; (8000530 <main+0x68>)
 8000508:	f241 1233 	movw	r2, #4403	; 0x1133
 800050c:	805a      	strh	r2, [r3, #2]
  slave_cfg.dev_cfg = dev_config;
 800050e:	4b08      	ldr	r3, [pc, #32]	; (8000530 <main+0x68>)
 8000510:	4a06      	ldr	r2, [pc, #24]	; (800052c <main+0x64>)
 8000512:	3304      	adds	r3, #4
 8000514:	8811      	ldrh	r1, [r2, #0]
 8000516:	7892      	ldrb	r2, [r2, #2]
 8000518:	8019      	strh	r1, [r3, #0]
 800051a:	709a      	strb	r2, [r3, #2]

  pb_dp0_pcb_init(&slave_cfg, my_input_buf, my_output_buf);
 800051c:	4a05      	ldr	r2, [pc, #20]	; (8000534 <main+0x6c>)
 800051e:	4906      	ldr	r1, [pc, #24]	; (8000538 <main+0x70>)
 8000520:	4803      	ldr	r0, [pc, #12]	; (8000530 <main+0x68>)
 8000522:	f000 fde5 	bl	80010f0 <pb_dp0_pcb_init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  pb_dp0_pcb();
 8000526:	f000 fad9 	bl	8000adc <pb_dp0_pcb>
 800052a:	e7fc      	b.n	8000526 <main+0x5e>
 800052c:	200004bc 	.word	0x200004bc
 8000530:	2000022c 	.word	0x2000022c
 8000534:	20000128 	.word	0x20000128
 8000538:	20000028 	.word	0x20000028

0800053c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800053c:	b580      	push	{r7, lr}
 800053e:	b094      	sub	sp, #80	; 0x50
 8000540:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000542:	f107 0320 	add.w	r3, r7, #32
 8000546:	2230      	movs	r2, #48	; 0x30
 8000548:	2100      	movs	r1, #0
 800054a:	4618      	mov	r0, r3
 800054c:	f003 fb2d 	bl	8003baa <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000550:	f107 030c 	add.w	r3, r7, #12
 8000554:	2200      	movs	r2, #0
 8000556:	601a      	str	r2, [r3, #0]
 8000558:	605a      	str	r2, [r3, #4]
 800055a:	609a      	str	r2, [r3, #8]
 800055c:	60da      	str	r2, [r3, #12]
 800055e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000560:	2300      	movs	r3, #0
 8000562:	60bb      	str	r3, [r7, #8]
 8000564:	4b28      	ldr	r3, [pc, #160]	; (8000608 <SystemClock_Config+0xcc>)
 8000566:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000568:	4a27      	ldr	r2, [pc, #156]	; (8000608 <SystemClock_Config+0xcc>)
 800056a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800056e:	6413      	str	r3, [r2, #64]	; 0x40
 8000570:	4b25      	ldr	r3, [pc, #148]	; (8000608 <SystemClock_Config+0xcc>)
 8000572:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000574:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000578:	60bb      	str	r3, [r7, #8]
 800057a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800057c:	2300      	movs	r3, #0
 800057e:	607b      	str	r3, [r7, #4]
 8000580:	4b22      	ldr	r3, [pc, #136]	; (800060c <SystemClock_Config+0xd0>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4a21      	ldr	r2, [pc, #132]	; (800060c <SystemClock_Config+0xd0>)
 8000586:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800058a:	6013      	str	r3, [r2, #0]
 800058c:	4b1f      	ldr	r3, [pc, #124]	; (800060c <SystemClock_Config+0xd0>)
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000594:	607b      	str	r3, [r7, #4]
 8000596:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000598:	2301      	movs	r3, #1
 800059a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800059c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80005a0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80005a2:	2302      	movs	r3, #2
 80005a4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80005a6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80005aa:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80005ac:	2304      	movs	r3, #4
 80005ae:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 80005b0:	23a8      	movs	r3, #168	; 0xa8
 80005b2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80005b4:	2302      	movs	r3, #2
 80005b6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80005b8:	2304      	movs	r3, #4
 80005ba:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005bc:	f107 0320 	add.w	r3, r7, #32
 80005c0:	4618      	mov	r0, r3
 80005c2:	f001 ffb9 	bl	8002538 <HAL_RCC_OscConfig>
 80005c6:	4603      	mov	r3, r0
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	d001      	beq.n	80005d0 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80005cc:	f000 f962 	bl	8000894 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80005d0:	230f      	movs	r3, #15
 80005d2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80005d4:	2302      	movs	r3, #2
 80005d6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80005d8:	2300      	movs	r3, #0
 80005da:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80005dc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80005e0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80005e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80005e6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80005e8:	f107 030c 	add.w	r3, r7, #12
 80005ec:	2105      	movs	r1, #5
 80005ee:	4618      	mov	r0, r3
 80005f0:	f002 fa12 	bl	8002a18 <HAL_RCC_ClockConfig>
 80005f4:	4603      	mov	r3, r0
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	d001      	beq.n	80005fe <SystemClock_Config+0xc2>
  {
    Error_Handler();
 80005fa:	f000 f94b 	bl	8000894 <Error_Handler>
  }
}
 80005fe:	bf00      	nop
 8000600:	3750      	adds	r7, #80	; 0x50
 8000602:	46bd      	mov	sp, r7
 8000604:	bd80      	pop	{r7, pc}
 8000606:	bf00      	nop
 8000608:	40023800 	.word	0x40023800
 800060c:	40007000 	.word	0x40007000

08000610 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000610:	b580      	push	{r7, lr}
 8000612:	b086      	sub	sp, #24
 8000614:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000616:	f107 0308 	add.w	r3, r7, #8
 800061a:	2200      	movs	r2, #0
 800061c:	601a      	str	r2, [r3, #0]
 800061e:	605a      	str	r2, [r3, #4]
 8000620:	609a      	str	r2, [r3, #8]
 8000622:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000624:	463b      	mov	r3, r7
 8000626:	2200      	movs	r2, #0
 8000628:	601a      	str	r2, [r3, #0]
 800062a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800062c:	4b1d      	ldr	r3, [pc, #116]	; (80006a4 <MX_TIM2_Init+0x94>)
 800062e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000632:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 84 - 1;
 8000634:	4b1b      	ldr	r3, [pc, #108]	; (80006a4 <MX_TIM2_Init+0x94>)
 8000636:	2253      	movs	r2, #83	; 0x53
 8000638:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800063a:	4b1a      	ldr	r3, [pc, #104]	; (80006a4 <MX_TIM2_Init+0x94>)
 800063c:	2200      	movs	r2, #0
 800063e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8000640:	4b18      	ldr	r3, [pc, #96]	; (80006a4 <MX_TIM2_Init+0x94>)
 8000642:	f04f 32ff 	mov.w	r2, #4294967295
 8000646:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000648:	4b16      	ldr	r3, [pc, #88]	; (80006a4 <MX_TIM2_Init+0x94>)
 800064a:	2200      	movs	r2, #0
 800064c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800064e:	4b15      	ldr	r3, [pc, #84]	; (80006a4 <MX_TIM2_Init+0x94>)
 8000650:	2200      	movs	r2, #0
 8000652:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000654:	4813      	ldr	r0, [pc, #76]	; (80006a4 <MX_TIM2_Init+0x94>)
 8000656:	f002 fbd1 	bl	8002dfc <HAL_TIM_Base_Init>
 800065a:	4603      	mov	r3, r0
 800065c:	2b00      	cmp	r3, #0
 800065e:	d001      	beq.n	8000664 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000660:	f000 f918 	bl	8000894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000664:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000668:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800066a:	f107 0308 	add.w	r3, r7, #8
 800066e:	4619      	mov	r1, r3
 8000670:	480c      	ldr	r0, [pc, #48]	; (80006a4 <MX_TIM2_Init+0x94>)
 8000672:	f002 fc34 	bl	8002ede <HAL_TIM_ConfigClockSource>
 8000676:	4603      	mov	r3, r0
 8000678:	2b00      	cmp	r3, #0
 800067a:	d001      	beq.n	8000680 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800067c:	f000 f90a 	bl	8000894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000680:	2300      	movs	r3, #0
 8000682:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000684:	2300      	movs	r3, #0
 8000686:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000688:	463b      	mov	r3, r7
 800068a:	4619      	mov	r1, r3
 800068c:	4805      	ldr	r0, [pc, #20]	; (80006a4 <MX_TIM2_Init+0x94>)
 800068e:	f002 fe17 	bl	80032c0 <HAL_TIMEx_MasterConfigSynchronization>
 8000692:	4603      	mov	r3, r0
 8000694:	2b00      	cmp	r3, #0
 8000696:	d001      	beq.n	800069c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000698:	f000 f8fc 	bl	8000894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800069c:	bf00      	nop
 800069e:	3718      	adds	r7, #24
 80006a0:	46bd      	mov	sp, r7
 80006a2:	bd80      	pop	{r7, pc}
 80006a4:	200004c0 	.word	0x200004c0

080006a8 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80006a8:	b580      	push	{r7, lr}
 80006aa:	b086      	sub	sp, #24
 80006ac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80006ae:	f107 0308 	add.w	r3, r7, #8
 80006b2:	2200      	movs	r2, #0
 80006b4:	601a      	str	r2, [r3, #0]
 80006b6:	605a      	str	r2, [r3, #4]
 80006b8:	609a      	str	r2, [r3, #8]
 80006ba:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80006bc:	463b      	mov	r3, r7
 80006be:	2200      	movs	r2, #0
 80006c0:	601a      	str	r2, [r3, #0]
 80006c2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80006c4:	4b22      	ldr	r3, [pc, #136]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006c6:	4a23      	ldr	r2, [pc, #140]	; (8000754 <MX_TIM5_Init+0xac>)
 80006c8:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 16800;
 80006ca:	4b21      	ldr	r3, [pc, #132]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006cc:	f244 12a0 	movw	r2, #16800	; 0x41a0
 80006d0:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80006d2:	4b1f      	ldr	r3, [pc, #124]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006d4:	2200      	movs	r2, #0
 80006d6:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 80006d8:	4b1d      	ldr	r3, [pc, #116]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006da:	f04f 32ff 	mov.w	r2, #4294967295
 80006de:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80006e0:	4b1b      	ldr	r3, [pc, #108]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006e2:	2200      	movs	r2, #0
 80006e4:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80006e6:	4b1a      	ldr	r3, [pc, #104]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006e8:	2200      	movs	r2, #0
 80006ea:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80006ec:	4818      	ldr	r0, [pc, #96]	; (8000750 <MX_TIM5_Init+0xa8>)
 80006ee:	f002 fb85 	bl	8002dfc <HAL_TIM_Base_Init>
 80006f2:	4603      	mov	r3, r0
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d001      	beq.n	80006fc <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80006f8:	f000 f8cc 	bl	8000894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80006fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000700:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8000702:	f107 0308 	add.w	r3, r7, #8
 8000706:	4619      	mov	r1, r3
 8000708:	4811      	ldr	r0, [pc, #68]	; (8000750 <MX_TIM5_Init+0xa8>)
 800070a:	f002 fbe8 	bl	8002ede <HAL_TIM_ConfigClockSource>
 800070e:	4603      	mov	r3, r0
 8000710:	2b00      	cmp	r3, #0
 8000712:	d001      	beq.n	8000718 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 8000714:	f000 f8be 	bl	8000894 <Error_Handler>
  }
  if (HAL_TIM_OnePulse_Init(&htim5, TIM_OPMODE_SINGLE) != HAL_OK)
 8000718:	2108      	movs	r1, #8
 800071a:	480d      	ldr	r0, [pc, #52]	; (8000750 <MX_TIM5_Init+0xa8>)
 800071c:	f002 fb99 	bl	8002e52 <HAL_TIM_OnePulse_Init>
 8000720:	4603      	mov	r3, r0
 8000722:	2b00      	cmp	r3, #0
 8000724:	d001      	beq.n	800072a <MX_TIM5_Init+0x82>
  {
    Error_Handler();
 8000726:	f000 f8b5 	bl	8000894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800072a:	2300      	movs	r3, #0
 800072c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800072e:	2300      	movs	r3, #0
 8000730:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8000732:	463b      	mov	r3, r7
 8000734:	4619      	mov	r1, r3
 8000736:	4806      	ldr	r0, [pc, #24]	; (8000750 <MX_TIM5_Init+0xa8>)
 8000738:	f002 fdc2 	bl	80032c0 <HAL_TIMEx_MasterConfigSynchronization>
 800073c:	4603      	mov	r3, r0
 800073e:	2b00      	cmp	r3, #0
 8000740:	d001      	beq.n	8000746 <MX_TIM5_Init+0x9e>
  {
    Error_Handler();
 8000742:	f000 f8a7 	bl	8000894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8000746:	bf00      	nop
 8000748:	3718      	adds	r7, #24
 800074a:	46bd      	mov	sp, r7
 800074c:	bd80      	pop	{r7, pc}
 800074e:	bf00      	nop
 8000750:	2000023c 	.word	0x2000023c
 8000754:	40000c00 	.word	0x40000c00

08000758 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800075c:	4b12      	ldr	r3, [pc, #72]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 800075e:	4a13      	ldr	r2, [pc, #76]	; (80007ac <MX_USART1_UART_Init+0x54>)
 8000760:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8000762:	4b11      	ldr	r3, [pc, #68]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 8000764:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000768:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_9B;
 800076a:	4b0f      	ldr	r3, [pc, #60]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 800076c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000770:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000772:	4b0d      	ldr	r3, [pc, #52]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 8000774:	2200      	movs	r2, #0
 8000776:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_EVEN;
 8000778:	4b0b      	ldr	r3, [pc, #44]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 800077a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800077e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000780:	4b09      	ldr	r3, [pc, #36]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 8000782:	220c      	movs	r2, #12
 8000784:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000786:	4b08      	ldr	r3, [pc, #32]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 8000788:	2200      	movs	r2, #0
 800078a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800078c:	4b06      	ldr	r3, [pc, #24]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 800078e:	2200      	movs	r2, #0
 8000790:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000792:	4805      	ldr	r0, [pc, #20]	; (80007a8 <MX_USART1_UART_Init+0x50>)
 8000794:	f002 fe10 	bl	80033b8 <HAL_UART_Init>
 8000798:	4603      	mov	r3, r0
 800079a:	2b00      	cmp	r3, #0
 800079c:	d001      	beq.n	80007a2 <MX_USART1_UART_Init+0x4a>
  {
    Error_Handler();
 800079e:	f000 f879 	bl	8000894 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80007a2:	bf00      	nop
 80007a4:	bd80      	pop	{r7, pc}
 80007a6:	bf00      	nop
 80007a8:	2000033c 	.word	0x2000033c
 80007ac:	40011000 	.word	0x40011000

080007b0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80007b0:	b580      	push	{r7, lr}
 80007b2:	b082      	sub	sp, #8
 80007b4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80007b6:	2300      	movs	r3, #0
 80007b8:	607b      	str	r3, [r7, #4]
 80007ba:	4b10      	ldr	r3, [pc, #64]	; (80007fc <MX_DMA_Init+0x4c>)
 80007bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007be:	4a0f      	ldr	r2, [pc, #60]	; (80007fc <MX_DMA_Init+0x4c>)
 80007c0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80007c4:	6313      	str	r3, [r2, #48]	; 0x30
 80007c6:	4b0d      	ldr	r3, [pc, #52]	; (80007fc <MX_DMA_Init+0x4c>)
 80007c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007ca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80007ce:	607b      	str	r3, [r7, #4]
 80007d0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 80007d2:	2200      	movs	r2, #0
 80007d4:	2100      	movs	r1, #0
 80007d6:	203a      	movs	r0, #58	; 0x3a
 80007d8:	f001 f9db 	bl	8001b92 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 80007dc:	203a      	movs	r0, #58	; 0x3a
 80007de:	f001 f9f4 	bl	8001bca <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
 80007e2:	2200      	movs	r2, #0
 80007e4:	2100      	movs	r1, #0
 80007e6:	2046      	movs	r0, #70	; 0x46
 80007e8:	f001 f9d3 	bl	8001b92 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 80007ec:	2046      	movs	r0, #70	; 0x46
 80007ee:	f001 f9ec 	bl	8001bca <HAL_NVIC_EnableIRQ>

}
 80007f2:	bf00      	nop
 80007f4:	3708      	adds	r7, #8
 80007f6:	46bd      	mov	sp, r7
 80007f8:	bd80      	pop	{r7, pc}
 80007fa:	bf00      	nop
 80007fc:	40023800 	.word	0x40023800

08000800 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000800:	b580      	push	{r7, lr}
 8000802:	b088      	sub	sp, #32
 8000804:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000806:	f107 030c 	add.w	r3, r7, #12
 800080a:	2200      	movs	r2, #0
 800080c:	601a      	str	r2, [r3, #0]
 800080e:	605a      	str	r2, [r3, #4]
 8000810:	609a      	str	r2, [r3, #8]
 8000812:	60da      	str	r2, [r3, #12]
 8000814:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000816:	2300      	movs	r3, #0
 8000818:	60bb      	str	r3, [r7, #8]
 800081a:	4b1c      	ldr	r3, [pc, #112]	; (800088c <MX_GPIO_Init+0x8c>)
 800081c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800081e:	4a1b      	ldr	r2, [pc, #108]	; (800088c <MX_GPIO_Init+0x8c>)
 8000820:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000824:	6313      	str	r3, [r2, #48]	; 0x30
 8000826:	4b19      	ldr	r3, [pc, #100]	; (800088c <MX_GPIO_Init+0x8c>)
 8000828:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800082a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800082e:	60bb      	str	r3, [r7, #8]
 8000830:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000832:	2300      	movs	r3, #0
 8000834:	607b      	str	r3, [r7, #4]
 8000836:	4b15      	ldr	r3, [pc, #84]	; (800088c <MX_GPIO_Init+0x8c>)
 8000838:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800083a:	4a14      	ldr	r2, [pc, #80]	; (800088c <MX_GPIO_Init+0x8c>)
 800083c:	f043 0301 	orr.w	r3, r3, #1
 8000840:	6313      	str	r3, [r2, #48]	; 0x30
 8000842:	4b12      	ldr	r3, [pc, #72]	; (800088c <MX_GPIO_Init+0x8c>)
 8000844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000846:	f003 0301 	and.w	r3, r3, #1
 800084a:	607b      	str	r3, [r7, #4]
 800084c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 800084e:	2201      	movs	r2, #1
 8000850:	2102      	movs	r1, #2
 8000852:	480f      	ldr	r0, [pc, #60]	; (8000890 <MX_GPIO_Init+0x90>)
 8000854:	f001 fe56 	bl	8002504 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000858:	2201      	movs	r2, #1
 800085a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800085e:	480c      	ldr	r0, [pc, #48]	; (8000890 <MX_GPIO_Init+0x90>)
 8000860:	f001 fe50 	bl	8002504 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA1 PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_8;
 8000864:	f44f 7381 	mov.w	r3, #258	; 0x102
 8000868:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800086a:	2301      	movs	r3, #1
 800086c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800086e:	2300      	movs	r3, #0
 8000870:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000872:	2300      	movs	r3, #0
 8000874:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000876:	f107 030c 	add.w	r3, r7, #12
 800087a:	4619      	mov	r1, r3
 800087c:	4804      	ldr	r0, [pc, #16]	; (8000890 <MX_GPIO_Init+0x90>)
 800087e:	f001 fca7 	bl	80021d0 <HAL_GPIO_Init>

}
 8000882:	bf00      	nop
 8000884:	3720      	adds	r7, #32
 8000886:	46bd      	mov	sp, r7
 8000888:	bd80      	pop	{r7, pc}
 800088a:	bf00      	nop
 800088c:	40023800 	.word	0x40023800
 8000890:	40020000 	.word	0x40020000

08000894 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000894:	b480      	push	{r7}
 8000896:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000898:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800089a:	e7fe      	b.n	800089a <Error_Handler+0x6>

0800089c <minTSDR_stop>:
/*
 * 	This function (minTSDR_stop) must be modify for other MCUs with next rules:
 * 	Block function for a while HW timer time elapsed.
 *
 */
static __inline void minTSDR_stop() {
 800089c:	b480      	push	{r7}
 800089e:	af00      	add	r7, sp, #0

	while(TIM2->CNT <= pb_pcb.delay_factor_minTSDR) {;;}
 80008a0:	bf00      	nop
 80008a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80008a6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80008a8:	4b0b      	ldr	r3, [pc, #44]	; (80008d8 <minTSDR_stop+0x3c>)
 80008aa:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 80008ae:	429a      	cmp	r2, r3
 80008b0:	d9f7      	bls.n	80008a2 <minTSDR_stop+0x6>

	TIM2->CR1 &= 0xFFFE;
 80008b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80008b6:	681a      	ldr	r2, [r3, #0]
 80008b8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80008bc:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 80008c0:	4013      	ands	r3, r2
 80008c2:	600b      	str	r3, [r1, #0]
	TIM2->CNT = 0;
 80008c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80008c8:	2200      	movs	r2, #0
 80008ca:	625a      	str	r2, [r3, #36]	; 0x24

}
 80008cc:	bf00      	nop
 80008ce:	46bd      	mov	sp, r7
 80008d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	2000037c 	.word	0x2000037c

080008dc <WDOG_start>:
/*
 * 	This function (WDOG_start) must be modify for other MCUs with next rules:
 * 	Start WDOG HW timer in one pulse mode.
 *
 */
static __inline void WDOG_start(uint32_t wdog_period) {
 80008dc:	b480      	push	{r7}
 80008de:	b083      	sub	sp, #12
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	6078      	str	r0, [r7, #4]

	TIM5->CR1 &= 0xFFFE;
 80008e4:	4b12      	ldr	r3, [pc, #72]	; (8000930 <WDOG_start+0x54>)
 80008e6:	681a      	ldr	r2, [r3, #0]
 80008e8:	4911      	ldr	r1, [pc, #68]	; (8000930 <WDOG_start+0x54>)
 80008ea:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 80008ee:	4013      	ands	r3, r2
 80008f0:	600b      	str	r3, [r1, #0]
	TIM5->CNT = 0;
 80008f2:	4b0f      	ldr	r3, [pc, #60]	; (8000930 <WDOG_start+0x54>)
 80008f4:	2200      	movs	r2, #0
 80008f6:	625a      	str	r2, [r3, #36]	; 0x24
	TIM5->DIER = 0;
 80008f8:	4b0d      	ldr	r3, [pc, #52]	; (8000930 <WDOG_start+0x54>)
 80008fa:	2200      	movs	r2, #0
 80008fc:	60da      	str	r2, [r3, #12]
	TIM5->DIER = 0x0001;
 80008fe:	4b0c      	ldr	r3, [pc, #48]	; (8000930 <WDOG_start+0x54>)
 8000900:	2201      	movs	r2, #1
 8000902:	60da      	str	r2, [r3, #12]
	TIM5->SR = 0;
 8000904:	4b0a      	ldr	r3, [pc, #40]	; (8000930 <WDOG_start+0x54>)
 8000906:	2200      	movs	r2, #0
 8000908:	611a      	str	r2, [r3, #16]
	TIM5->ARR = wdog_period * 10;
 800090a:	4909      	ldr	r1, [pc, #36]	; (8000930 <WDOG_start+0x54>)
 800090c:	687a      	ldr	r2, [r7, #4]
 800090e:	4613      	mov	r3, r2
 8000910:	009b      	lsls	r3, r3, #2
 8000912:	4413      	add	r3, r2
 8000914:	005b      	lsls	r3, r3, #1
 8000916:	62cb      	str	r3, [r1, #44]	; 0x2c
	TIM5->CR1 |= 0x0001;
 8000918:	4b05      	ldr	r3, [pc, #20]	; (8000930 <WDOG_start+0x54>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	4a04      	ldr	r2, [pc, #16]	; (8000930 <WDOG_start+0x54>)
 800091e:	f043 0301 	orr.w	r3, r3, #1
 8000922:	6013      	str	r3, [r2, #0]

}
 8000924:	bf00      	nop
 8000926:	370c      	adds	r7, #12
 8000928:	46bd      	mov	sp, r7
 800092a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800092e:	4770      	bx	lr
 8000930:	40000c00 	.word	0x40000c00

08000934 <WDOG_update>:
/*
 * 	This function (WDOG_update) must be modify for other MCUs with next rules:
 * 	You must clear WDOG HW timer counter register
 *
 */
static __inline void WDOG_update() {
 8000934:	b480      	push	{r7}
 8000936:	af00      	add	r7, sp, #0

	TIM5->CNT = 0;
 8000938:	4b03      	ldr	r3, [pc, #12]	; (8000948 <WDOG_update+0x14>)
 800093a:	2200      	movs	r2, #0
 800093c:	625a      	str	r2, [r3, #36]	; 0x24

}
 800093e:	bf00      	nop
 8000940:	46bd      	mov	sp, r7
 8000942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000946:	4770      	bx	lr
 8000948:	40000c00 	.word	0x40000c00

0800094c <checksum_calc>:

#include "pb_dp0_pcb.h"

uint8_t tmp = 0;

uint8_t checksum_calc(uint8_t* ptr_buf, uint8_t size) {
 800094c:	b480      	push	{r7}
 800094e:	b085      	sub	sp, #20
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]
 8000954:	460b      	mov	r3, r1
 8000956:	70fb      	strb	r3, [r7, #3]

	uint8_t checksum = 0x00;
 8000958:	2300      	movs	r3, #0
 800095a:	73fb      	strb	r3, [r7, #15]

	for(int i = 0; i < size; i++) {
 800095c:	2300      	movs	r3, #0
 800095e:	60bb      	str	r3, [r7, #8]
 8000960:	e009      	b.n	8000976 <checksum_calc+0x2a>

		checksum += ptr_buf[i];
 8000962:	68bb      	ldr	r3, [r7, #8]
 8000964:	687a      	ldr	r2, [r7, #4]
 8000966:	4413      	add	r3, r2
 8000968:	781a      	ldrb	r2, [r3, #0]
 800096a:	7bfb      	ldrb	r3, [r7, #15]
 800096c:	4413      	add	r3, r2
 800096e:	73fb      	strb	r3, [r7, #15]
	for(int i = 0; i < size; i++) {
 8000970:	68bb      	ldr	r3, [r7, #8]
 8000972:	3301      	adds	r3, #1
 8000974:	60bb      	str	r3, [r7, #8]
 8000976:	78fb      	ldrb	r3, [r7, #3]
 8000978:	68ba      	ldr	r2, [r7, #8]
 800097a:	429a      	cmp	r2, r3
 800097c:	dbf1      	blt.n	8000962 <checksum_calc+0x16>

	}

	return checksum;
 800097e:	7bfb      	ldrb	r3, [r7, #15]

}
 8000980:	4618      	mov	r0, r3
 8000982:	3714      	adds	r7, #20
 8000984:	46bd      	mov	sp, r7
 8000986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800098a:	4770      	bx	lr

0800098c <checksum_check>:

uint8_t checksum_check(pb_telegram_t type) {
 800098c:	b580      	push	{r7, lr}
 800098e:	b082      	sub	sp, #8
 8000990:	af00      	add	r7, sp, #0
 8000992:	4603      	mov	r3, r0
 8000994:	71fb      	strb	r3, [r7, #7]

	pb_pcb.req_checksum = pb_pcb.req_buf[pb_pcb.req_size - 2]; /* - sum(ED, 1) */
 8000996:	4b1a      	ldr	r3, [pc, #104]	; (8000a00 <checksum_check+0x74>)
 8000998:	7d9b      	ldrb	r3, [r3, #22]
 800099a:	3b02      	subs	r3, #2
 800099c:	4a18      	ldr	r2, [pc, #96]	; (8000a00 <checksum_check+0x74>)
 800099e:	4413      	add	r3, r2
 80009a0:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 80009a4:	4b16      	ldr	r3, [pc, #88]	; (8000a00 <checksum_check+0x74>)
 80009a6:	75da      	strb	r2, [r3, #23]

	if(type == SD2) {
 80009a8:	79fb      	ldrb	r3, [r7, #7]
 80009aa:	2b68      	cmp	r3, #104	; 0x68
 80009ac:	d10c      	bne.n	80009c8 <checksum_check+0x3c>

		pb_pcb.req_checksum_calc = checksum_calc((uint8_t*)&pb_pcb.req_buf[4], pb_pcb.req_size - 6 /* - sum(SD, LE, LEr, SDr, FCS, ED) */);
 80009ae:	4b14      	ldr	r3, [pc, #80]	; (8000a00 <checksum_check+0x74>)
 80009b0:	7d9b      	ldrb	r3, [r3, #22]
 80009b2:	3b06      	subs	r3, #6
 80009b4:	b2db      	uxtb	r3, r3
 80009b6:	4619      	mov	r1, r3
 80009b8:	4812      	ldr	r0, [pc, #72]	; (8000a04 <checksum_check+0x78>)
 80009ba:	f7ff ffc7 	bl	800094c <checksum_calc>
 80009be:	4603      	mov	r3, r0
 80009c0:	461a      	mov	r2, r3
 80009c2:	4b0f      	ldr	r3, [pc, #60]	; (8000a00 <checksum_check+0x74>)
 80009c4:	761a      	strb	r2, [r3, #24]
 80009c6:	e00e      	b.n	80009e6 <checksum_check+0x5a>

	} else if(type == SD1) {
 80009c8:	79fb      	ldrb	r3, [r7, #7]
 80009ca:	2b10      	cmp	r3, #16
 80009cc:	d10b      	bne.n	80009e6 <checksum_check+0x5a>

		pb_pcb.req_checksum_calc = checksum_calc((uint8_t*)&pb_pcb.req_buf[1], pb_pcb.req_size - 3 /* - sum(SD, FCS, ED) */);
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <checksum_check+0x74>)
 80009d0:	7d9b      	ldrb	r3, [r3, #22]
 80009d2:	3b03      	subs	r3, #3
 80009d4:	b2db      	uxtb	r3, r3
 80009d6:	4619      	mov	r1, r3
 80009d8:	480b      	ldr	r0, [pc, #44]	; (8000a08 <checksum_check+0x7c>)
 80009da:	f7ff ffb7 	bl	800094c <checksum_calc>
 80009de:	4603      	mov	r3, r0
 80009e0:	461a      	mov	r2, r3
 80009e2:	4b07      	ldr	r3, [pc, #28]	; (8000a00 <checksum_check+0x74>)
 80009e4:	761a      	strb	r2, [r3, #24]

	}

	if(pb_pcb.req_checksum_calc == pb_pcb.req_checksum) {
 80009e6:	4b06      	ldr	r3, [pc, #24]	; (8000a00 <checksum_check+0x74>)
 80009e8:	7e1a      	ldrb	r2, [r3, #24]
 80009ea:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <checksum_check+0x74>)
 80009ec:	7ddb      	ldrb	r3, [r3, #23]
 80009ee:	429a      	cmp	r2, r3
 80009f0:	d101      	bne.n	80009f6 <checksum_check+0x6a>

		return CHECKSUM_OK;
 80009f2:	2301      	movs	r3, #1
 80009f4:	e000      	b.n	80009f8 <checksum_check+0x6c>

	} else return CHECKSUM_ERR;
 80009f6:	2300      	movs	r3, #0

}
 80009f8:	4618      	mov	r0, r3
 80009fa:	3708      	adds	r7, #8
 80009fc:	46bd      	mov	sp, r7
 80009fe:	bd80      	pop	{r7, pc}
 8000a00:	2000037c 	.word	0x2000037c
 8000a04:	200003a4 	.word	0x200003a4
 8000a08:	200003a1 	.word	0x200003a1

08000a0c <pb_tx_config>:

void pb_tx_config(uint8_t * ptr_buf, uint8_t size) {
 8000a0c:	b480      	push	{r7}
 8000a0e:	b083      	sub	sp, #12
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	6078      	str	r0, [r7, #4]
 8000a14:	460b      	mov	r3, r1
 8000a16:	70fb      	strb	r3, [r7, #3]

	// dma tx config
	DMA2_Stream7->CR &= 0xFFFFFFFE;
 8000a18:	4b13      	ldr	r3, [pc, #76]	; (8000a68 <pb_tx_config+0x5c>)
 8000a1a:	681b      	ldr	r3, [r3, #0]
 8000a1c:	4a12      	ldr	r2, [pc, #72]	; (8000a68 <pb_tx_config+0x5c>)
 8000a1e:	f023 0301 	bic.w	r3, r3, #1
 8000a22:	6013      	str	r3, [r2, #0]
	DMA2_Stream7->PAR = (uint32_t)&USART1->DR;
 8000a24:	4b10      	ldr	r3, [pc, #64]	; (8000a68 <pb_tx_config+0x5c>)
 8000a26:	4a11      	ldr	r2, [pc, #68]	; (8000a6c <pb_tx_config+0x60>)
 8000a28:	609a      	str	r2, [r3, #8]
	DMA2_Stream7->M0AR = (uint32_t)ptr_buf;
 8000a2a:	4a0f      	ldr	r2, [pc, #60]	; (8000a68 <pb_tx_config+0x5c>)
 8000a2c:	687b      	ldr	r3, [r7, #4]
 8000a2e:	60d3      	str	r3, [r2, #12]
	DMA2_Stream7->NDTR = size;
 8000a30:	4a0d      	ldr	r2, [pc, #52]	; (8000a68 <pb_tx_config+0x5c>)
 8000a32:	78fb      	ldrb	r3, [r7, #3]
 8000a34:	6053      	str	r3, [r2, #4]

	DMA2->HIFCR |= 0xFFFFFFFF;
 8000a36:	4b0e      	ldr	r3, [pc, #56]	; (8000a70 <pb_tx_config+0x64>)
 8000a38:	68db      	ldr	r3, [r3, #12]
 8000a3a:	4b0d      	ldr	r3, [pc, #52]	; (8000a70 <pb_tx_config+0x64>)
 8000a3c:	f04f 32ff 	mov.w	r2, #4294967295
 8000a40:	60da      	str	r2, [r3, #12]
	DMA2->LIFCR |= 0xFFFFFFFF;
 8000a42:	4b0b      	ldr	r3, [pc, #44]	; (8000a70 <pb_tx_config+0x64>)
 8000a44:	689b      	ldr	r3, [r3, #8]
 8000a46:	4b0a      	ldr	r3, [pc, #40]	; (8000a70 <pb_tx_config+0x64>)
 8000a48:	f04f 32ff 	mov.w	r2, #4294967295
 8000a4c:	609a      	str	r2, [r3, #8]

	DMA2_Stream7->CR |= 0x00000001; // TX EN
 8000a4e:	4b06      	ldr	r3, [pc, #24]	; (8000a68 <pb_tx_config+0x5c>)
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	4a05      	ldr	r2, [pc, #20]	; (8000a68 <pb_tx_config+0x5c>)
 8000a54:	f043 0301 	orr.w	r3, r3, #1
 8000a58:	6013      	str	r3, [r2, #0]

}
 8000a5a:	bf00      	nop
 8000a5c:	370c      	adds	r7, #12
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a64:	4770      	bx	lr
 8000a66:	bf00      	nop
 8000a68:	400264b8 	.word	0x400264b8
 8000a6c:	40011004 	.word	0x40011004
 8000a70:	40026400 	.word	0x40026400

08000a74 <pb_rx_config>:

void pb_rx_config() {
 8000a74:	b580      	push	{r7, lr}
 8000a76:	af00      	add	r7, sp, #0

	DMA2_Stream2->CR &= 0xFFFFFFFE;
 8000a78:	4b14      	ldr	r3, [pc, #80]	; (8000acc <pb_rx_config+0x58>)
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	4a13      	ldr	r2, [pc, #76]	; (8000acc <pb_rx_config+0x58>)
 8000a7e:	f023 0301 	bic.w	r3, r3, #1
 8000a82:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->PAR = (uint32_t)&USART1->DR;
 8000a84:	4b11      	ldr	r3, [pc, #68]	; (8000acc <pb_rx_config+0x58>)
 8000a86:	4a12      	ldr	r2, [pc, #72]	; (8000ad0 <pb_rx_config+0x5c>)
 8000a88:	609a      	str	r2, [r3, #8]
	DMA2_Stream2->M0AR = (uint32_t)&pb_pcb.req_buf;
 8000a8a:	4b10      	ldr	r3, [pc, #64]	; (8000acc <pb_rx_config+0x58>)
 8000a8c:	4a11      	ldr	r2, [pc, #68]	; (8000ad4 <pb_rx_config+0x60>)
 8000a8e:	60da      	str	r2, [r3, #12]
	DMA2_Stream2->NDTR = sizeof(pb_pcb.req_buf);
 8000a90:	4b0e      	ldr	r3, [pc, #56]	; (8000acc <pb_rx_config+0x58>)
 8000a92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000a96:	605a      	str	r2, [r3, #4]

	DMA2->HIFCR |= 0xFFFFFFFF;
 8000a98:	4b0f      	ldr	r3, [pc, #60]	; (8000ad8 <pb_rx_config+0x64>)
 8000a9a:	68db      	ldr	r3, [r3, #12]
 8000a9c:	4b0e      	ldr	r3, [pc, #56]	; (8000ad8 <pb_rx_config+0x64>)
 8000a9e:	f04f 32ff 	mov.w	r2, #4294967295
 8000aa2:	60da      	str	r2, [r3, #12]
	DMA2->LIFCR |= 0xFFFFFFFF;
 8000aa4:	4b0c      	ldr	r3, [pc, #48]	; (8000ad8 <pb_rx_config+0x64>)
 8000aa6:	689b      	ldr	r3, [r3, #8]
 8000aa8:	4b0b      	ldr	r3, [pc, #44]	; (8000ad8 <pb_rx_config+0x64>)
 8000aaa:	f04f 32ff 	mov.w	r2, #4294967295
 8000aae:	609a      	str	r2, [r3, #8]

	memset(pb_pcb.req_buf, 0, sizeof(pb_pcb.req_buf));
 8000ab0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000ab4:	2100      	movs	r1, #0
 8000ab6:	4807      	ldr	r0, [pc, #28]	; (8000ad4 <pb_rx_config+0x60>)
 8000ab8:	f003 f877 	bl	8003baa <memset>

	DMA2_Stream2->CR |= 0x00000001; // RX EN
 8000abc:	4b03      	ldr	r3, [pc, #12]	; (8000acc <pb_rx_config+0x58>)
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	4a02      	ldr	r2, [pc, #8]	; (8000acc <pb_rx_config+0x58>)
 8000ac2:	f043 0301 	orr.w	r3, r3, #1
 8000ac6:	6013      	str	r3, [r2, #0]

}
 8000ac8:	bf00      	nop
 8000aca:	bd80      	pop	{r7, pc}
 8000acc:	40026440 	.word	0x40026440
 8000ad0:	40011004 	.word	0x40011004
 8000ad4:	200003a0 	.word	0x200003a0
 8000ad8:	40026400 	.word	0x40026400

08000adc <pb_dp0_pcb>:


void pb_dp0_pcb() {
 8000adc:	b580      	push	{r7, lr}
 8000ade:	af00      	add	r7, sp, #0

	if(pb_pcb.frame_available == true) {
 8000ae0:	4b94      	ldr	r3, [pc, #592]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000ae2:	7b1b      	ldrb	r3, [r3, #12]
 8000ae4:	2b01      	cmp	r3, #1
 8000ae6:	f040 82a7 	bne.w	8001038 <pb_dp0_pcb+0x55c>

		WDOG_update();
 8000aea:	f7ff ff23 	bl	8000934 <WDOG_update>

		switch(pb_pcb.telegram_type) {
 8000aee:	4b91      	ldr	r3, [pc, #580]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000af0:	7cdb      	ldrb	r3, [r3, #19]
 8000af2:	2b10      	cmp	r3, #16
 8000af4:	f000 821e 	beq.w	8000f34 <pb_dp0_pcb+0x458>
 8000af8:	2b68      	cmp	r3, #104	; 0x68
 8000afa:	d000      	beq.n	8000afe <pb_dp0_pcb+0x22>
				}


			} break;

			default : {} break;
 8000afc:	e299      	b.n	8001032 <pb_dp0_pcb+0x556>
				pb_pcb.req_size = 256 - DMA2_Stream2->NDTR;
 8000afe:	4b8e      	ldr	r3, [pc, #568]	; (8000d38 <pb_dp0_pcb+0x25c>)
 8000b00:	685b      	ldr	r3, [r3, #4]
 8000b02:	b2db      	uxtb	r3, r3
 8000b04:	425b      	negs	r3, r3
 8000b06:	b2da      	uxtb	r2, r3
 8000b08:	4b8a      	ldr	r3, [pc, #552]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b0a:	759a      	strb	r2, [r3, #22]
				if(checksum_check(SD2) == CHECKSUM_OK) {
 8000b0c:	2068      	movs	r0, #104	; 0x68
 8000b0e:	f7ff ff3d 	bl	800098c <checksum_check>
 8000b12:	4603      	mov	r3, r0
 8000b14:	2b01      	cmp	r3, #1
 8000b16:	f040 827b 	bne.w	8001010 <pb_dp0_pcb+0x534>
					if((pb_pcb.access_type == CDXCH) && ((pb_pcb.req_buf[6] & SRD_HIGH) == SRD_HIGH) && ((pb_pcb.req_buf[6] & FCV) == FCV) ) {
 8000b1a:	4b86      	ldr	r3, [pc, #536]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b1c:	7d1b      	ldrb	r3, [r3, #20]
 8000b1e:	2b01      	cmp	r3, #1
 8000b20:	f040 8095 	bne.w	8000c4e <pb_dp0_pcb+0x172>
 8000b24:	4b83      	ldr	r3, [pc, #524]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b26:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8000b2a:	f003 030d 	and.w	r3, r3, #13
 8000b2e:	2b0d      	cmp	r3, #13
 8000b30:	f040 808d 	bne.w	8000c4e <pb_dp0_pcb+0x172>
 8000b34:	4b7f      	ldr	r3, [pc, #508]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b36:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8000b3a:	f003 0310 	and.w	r3, r3, #16
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	f000 8085 	beq.w	8000c4e <pb_dp0_pcb+0x172>
						if( (pb_pcb.dev_cfg & INOUT) == INOUT ) {
 8000b44:	4b7b      	ldr	r3, [pc, #492]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b46:	781b      	ldrb	r3, [r3, #0]
 8000b48:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000b4c:	2b30      	cmp	r3, #48	; 0x30
 8000b4e:	d151      	bne.n	8000bf4 <pb_dp0_pcb+0x118>
							memcpy(pb_pcb.output_pData, &pb_pcb.req_buf[7], pb_pcb.data_len); // get data
 8000b50:	4b78      	ldr	r3, [pc, #480]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b52:	f8d3 0128 	ldr.w	r0, [r3, #296]	; 0x128
 8000b56:	4b77      	ldr	r3, [pc, #476]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b58:	785b      	ldrb	r3, [r3, #1]
 8000b5a:	461a      	mov	r2, r3
 8000b5c:	4977      	ldr	r1, [pc, #476]	; (8000d3c <pb_dp0_pcb+0x260>)
 8000b5e:	f003 f819 	bl	8003b94 <memcpy>
							memcpy(pb_sd2_resp.PDU, pb_pcb.input_pData, pb_pcb.data_len); // send data
 8000b62:	4b74      	ldr	r3, [pc, #464]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b64:	f8d3 1124 	ldr.w	r1, [r3, #292]	; 0x124
 8000b68:	4b72      	ldr	r3, [pc, #456]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b6a:	785b      	ldrb	r3, [r3, #1]
 8000b6c:	461a      	mov	r2, r3
 8000b6e:	4874      	ldr	r0, [pc, #464]	; (8000d40 <pb_dp0_pcb+0x264>)
 8000b70:	f003 f810 	bl	8003b94 <memcpy>
							pb_sd2_resp.LE = 3 + pb_pcb.data_len;
 8000b74:	4b6f      	ldr	r3, [pc, #444]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b76:	785b      	ldrb	r3, [r3, #1]
 8000b78:	3303      	adds	r3, #3
 8000b7a:	b2da      	uxtb	r2, r3
 8000b7c:	4b71      	ldr	r3, [pc, #452]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000b7e:	705a      	strb	r2, [r3, #1]
							pb_sd2_resp.LEr = 3 + pb_pcb.data_len;
 8000b80:	4b6c      	ldr	r3, [pc, #432]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b82:	785b      	ldrb	r3, [r3, #1]
 8000b84:	3303      	adds	r3, #3
 8000b86:	b2da      	uxtb	r2, r3
 8000b88:	4b6e      	ldr	r3, [pc, #440]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000b8a:	709a      	strb	r2, [r3, #2]
							pb_sd2_resp.DA = pb_pcb.last_master_addr;
 8000b8c:	4b69      	ldr	r3, [pc, #420]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b8e:	7f1a      	ldrb	r2, [r3, #28]
 8000b90:	4b6c      	ldr	r3, [pc, #432]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000b92:	711a      	strb	r2, [r3, #4]
							pb_sd2_resp.SA = pb_pcb.addr;
 8000b94:	4b67      	ldr	r3, [pc, #412]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b96:	789a      	ldrb	r2, [r3, #2]
 8000b98:	4b6a      	ldr	r3, [pc, #424]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000b9a:	715a      	strb	r2, [r3, #5]
							pb_pcb.checksum_resp = checksum_calc((uint8_t*)&pb_sd2_resp.DA, 3 + pb_pcb.data_len);
 8000b9c:	4b65      	ldr	r3, [pc, #404]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000b9e:	785b      	ldrb	r3, [r3, #1]
 8000ba0:	3303      	adds	r3, #3
 8000ba2:	b2db      	uxtb	r3, r3
 8000ba4:	4619      	mov	r1, r3
 8000ba6:	4868      	ldr	r0, [pc, #416]	; (8000d48 <pb_dp0_pcb+0x26c>)
 8000ba8:	f7ff fed0 	bl	800094c <checksum_calc>
 8000bac:	4603      	mov	r3, r0
 8000bae:	461a      	mov	r2, r3
 8000bb0:	4b60      	ldr	r3, [pc, #384]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bb2:	76da      	strb	r2, [r3, #27]
							pb_sd2_resp.PDU[pb_pcb.data_len] = pb_pcb.checksum_resp;
 8000bb4:	4b5f      	ldr	r3, [pc, #380]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bb6:	785b      	ldrb	r3, [r3, #1]
 8000bb8:	4619      	mov	r1, r3
 8000bba:	4b5e      	ldr	r3, [pc, #376]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bbc:	7eda      	ldrb	r2, [r3, #27]
 8000bbe:	4b61      	ldr	r3, [pc, #388]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000bc0:	440b      	add	r3, r1
 8000bc2:	71da      	strb	r2, [r3, #7]
							pb_sd2_resp.PDU[pb_pcb.data_len + 1] = ED;
 8000bc4:	4b5b      	ldr	r3, [pc, #364]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bc6:	785b      	ldrb	r3, [r3, #1]
 8000bc8:	3301      	adds	r3, #1
 8000bca:	4a5e      	ldr	r2, [pc, #376]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000bcc:	4413      	add	r3, r2
 8000bce:	2216      	movs	r2, #22
 8000bd0:	71da      	strb	r2, [r3, #7]
							minTSDR_stop();
 8000bd2:	f7ff fe63 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000bd6:	f7ff ff4d 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_sd2_resp, 9 + pb_pcb.data_len);
 8000bda:	4b56      	ldr	r3, [pc, #344]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bdc:	785b      	ldrb	r3, [r3, #1]
 8000bde:	3309      	adds	r3, #9
 8000be0:	b2db      	uxtb	r3, r3
 8000be2:	4619      	mov	r1, r3
 8000be4:	4857      	ldr	r0, [pc, #348]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000be6:	f7ff ff11 	bl	8000a0c <pb_tx_config>
							pb_pcb.data_ready_RW_callback();
 8000bea:	4b52      	ldr	r3, [pc, #328]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bec:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8000bf0:	4798      	blx	r3
						if( (pb_pcb.dev_cfg & INOUT) == INOUT ) {
 8000bf2:	e19d      	b.n	8000f30 <pb_dp0_pcb+0x454>
						} else if( (pb_pcb.dev_cfg & OUT) == OUT ) {
 8000bf4:	4b4f      	ldr	r3, [pc, #316]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000bf6:	781b      	ldrb	r3, [r3, #0]
 8000bf8:	f003 0320 	and.w	r3, r3, #32
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	f000 8197 	beq.w	8000f30 <pb_dp0_pcb+0x454>
							memcpy(pb_pcb.output_pData, &pb_pcb.req_buf[7], pb_pcb.data_len); // get data
 8000c02:	4b4c      	ldr	r3, [pc, #304]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c04:	f8d3 0128 	ldr.w	r0, [r3, #296]	; 0x128
 8000c08:	4b4a      	ldr	r3, [pc, #296]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c0a:	785b      	ldrb	r3, [r3, #1]
 8000c0c:	461a      	mov	r2, r3
 8000c0e:	494b      	ldr	r1, [pc, #300]	; (8000d3c <pb_dp0_pcb+0x260>)
 8000c10:	f002 ffc0 	bl	8003b94 <memcpy>
							pb_sd1_resp.DA = pb_pcb.last_master_addr;
 8000c14:	4b47      	ldr	r3, [pc, #284]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c16:	7f1a      	ldrb	r2, [r3, #28]
 8000c18:	4b4c      	ldr	r3, [pc, #304]	; (8000d4c <pb_dp0_pcb+0x270>)
 8000c1a:	705a      	strb	r2, [r3, #1]
							pb_sd1_resp.SA = pb_pcb.addr;
 8000c1c:	4b45      	ldr	r3, [pc, #276]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c1e:	789a      	ldrb	r2, [r3, #2]
 8000c20:	4b4a      	ldr	r3, [pc, #296]	; (8000d4c <pb_dp0_pcb+0x270>)
 8000c22:	709a      	strb	r2, [r3, #2]
							pb_sd1_resp.FCS = checksum_calc((uint8_t*)&pb_sd1_resp.DA, 3);
 8000c24:	2103      	movs	r1, #3
 8000c26:	484a      	ldr	r0, [pc, #296]	; (8000d50 <pb_dp0_pcb+0x274>)
 8000c28:	f7ff fe90 	bl	800094c <checksum_calc>
 8000c2c:	4603      	mov	r3, r0
 8000c2e:	461a      	mov	r2, r3
 8000c30:	4b46      	ldr	r3, [pc, #280]	; (8000d4c <pb_dp0_pcb+0x270>)
 8000c32:	711a      	strb	r2, [r3, #4]
							minTSDR_stop();
 8000c34:	f7ff fe32 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000c38:	f7ff ff1c 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_sd1_resp, 6);
 8000c3c:	2106      	movs	r1, #6
 8000c3e:	4843      	ldr	r0, [pc, #268]	; (8000d4c <pb_dp0_pcb+0x270>)
 8000c40:	f7ff fee4 	bl	8000a0c <pb_tx_config>
							pb_pcb.data_ready_RW_callback();
 8000c44:	4b3b      	ldr	r3, [pc, #236]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c46:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8000c4a:	4798      	blx	r3
						if( (pb_pcb.dev_cfg & INOUT) == INOUT ) {
 8000c4c:	e170      	b.n	8000f30 <pb_dp0_pcb+0x454>
					} else if( (pb_pcb.access_type == SAP) && ((pb_pcb.req_buf[6] & SRD_HIGH) == SRD_HIGH) /*&& ((pb_pcb.req_buf[6] & FCV) == 0x00) */) {
 8000c4e:	4b39      	ldr	r3, [pc, #228]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c50:	7d1b      	ldrb	r3, [r3, #20]
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	f040 81dc 	bne.w	8001010 <pb_dp0_pcb+0x534>
 8000c58:	4b36      	ldr	r3, [pc, #216]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c5a:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8000c5e:	f003 030d 	and.w	r3, r3, #13
 8000c62:	2b0d      	cmp	r3, #13
 8000c64:	f040 81d4 	bne.w	8001010 <pb_dp0_pcb+0x534>
						if( (pb_pcb.req_buf[7] == Slave_Diagnosis /* DSAP parse */) && (pb_pcb.req_buf[8] == Chk_Cfg /* SSAP parse */) ) { // get diagnostic request
 8000c68:	4b32      	ldr	r3, [pc, #200]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c6a:	f893 302b 	ldrb.w	r3, [r3, #43]	; 0x2b
 8000c6e:	2b3c      	cmp	r3, #60	; 0x3c
 8000c70:	f040 80ac 	bne.w	8000dcc <pb_dp0_pcb+0x2f0>
 8000c74:	4b2f      	ldr	r3, [pc, #188]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c76:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8000c7a:	2b3e      	cmp	r3, #62	; 0x3e
 8000c7c:	f040 80a6 	bne.w	8000dcc <pb_dp0_pcb+0x2f0>
							pb_sd2_resp.LE = 11;
 8000c80:	4b30      	ldr	r3, [pc, #192]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000c82:	220b      	movs	r2, #11
 8000c84:	705a      	strb	r2, [r3, #1]
							pb_sd2_resp.LEr = 11;
 8000c86:	4b2f      	ldr	r3, [pc, #188]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000c88:	220b      	movs	r2, #11
 8000c8a:	709a      	strb	r2, [r3, #2]
							pb_sd2_resp.DA = pb_pcb.req_buf[5];
 8000c8c:	4b29      	ldr	r3, [pc, #164]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c8e:	f893 2029 	ldrb.w	r2, [r3, #41]	; 0x29
 8000c92:	4b2c      	ldr	r3, [pc, #176]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000c94:	711a      	strb	r2, [r3, #4]
							pb_sd2_resp.SA = pb_pcb.addr + init_addr_mask;
 8000c96:	4b27      	ldr	r3, [pc, #156]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000c98:	789b      	ldrb	r3, [r3, #2]
 8000c9a:	3b80      	subs	r3, #128	; 0x80
 8000c9c:	b2da      	uxtb	r2, r3
 8000c9e:	4b29      	ldr	r3, [pc, #164]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000ca0:	715a      	strb	r2, [r3, #5]
							pb_sd2_resp.PDU[0] = Chk_Cfg; // DSAP
 8000ca2:	4b28      	ldr	r3, [pc, #160]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000ca4:	223e      	movs	r2, #62	; 0x3e
 8000ca6:	71da      	strb	r2, [r3, #7]
							pb_sd2_resp.PDU[1] = Slave_Diagnosis; // SSAP
 8000ca8:	4b26      	ldr	r3, [pc, #152]	; (8000d44 <pb_dp0_pcb+0x268>)
 8000caa:	223c      	movs	r2, #60	; 0x3c
 8000cac:	721a      	strb	r2, [r3, #8]
							pb_pcb.status1 = status1_base;
 8000cae:	4b21      	ldr	r3, [pc, #132]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cb0:	2200      	movs	r2, #0
 8000cb2:	765a      	strb	r2, [r3, #25]
							pb_pcb.status2 = status2_base;
 8000cb4:	4b1f      	ldr	r3, [pc, #124]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cb6:	2204      	movs	r2, #4
 8000cb8:	769a      	strb	r2, [r3, #26]
							if( (pb_pcb.sta_par == true) && (pb_pcb.sta_cfg == true) ) { // STA ready
 8000cba:	4b1e      	ldr	r3, [pc, #120]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cbc:	7bdb      	ldrb	r3, [r3, #15]
 8000cbe:	2b01      	cmp	r3, #1
 8000cc0:	d11a      	bne.n	8000cf8 <pb_dp0_pcb+0x21c>
 8000cc2:	4b1c      	ldr	r3, [pc, #112]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cc4:	7c1b      	ldrb	r3, [r3, #16]
 8000cc6:	2b01      	cmp	r3, #1
 8000cc8:	d116      	bne.n	8000cf8 <pb_dp0_pcb+0x21c>
								if(pb_pcb.wdog_on == true) {
 8000cca:	4b1a      	ldr	r3, [pc, #104]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000ccc:	7c5b      	ldrb	r3, [r3, #17]
 8000cce:	2b01      	cmp	r3, #1
 8000cd0:	d10a      	bne.n	8000ce8 <pb_dp0_pcb+0x20c>
									pb_pcb.status2 += wdog_on;
 8000cd2:	4b18      	ldr	r3, [pc, #96]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cd4:	7e9b      	ldrb	r3, [r3, #26]
 8000cd6:	3308      	adds	r3, #8
 8000cd8:	b2da      	uxtb	r2, r3
 8000cda:	4b16      	ldr	r3, [pc, #88]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cdc:	769a      	strb	r2, [r3, #26]
									WDOG_start(pb_pcb.WDOG);
 8000cde:	4b15      	ldr	r3, [pc, #84]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000ce0:	6a1b      	ldr	r3, [r3, #32]
 8000ce2:	4618      	mov	r0, r3
 8000ce4:	f7ff fdfa 	bl	80008dc <WDOG_start>
								pb_pcb.sta_ready = true;
 8000ce8:	4b12      	ldr	r3, [pc, #72]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cea:	2201      	movs	r2, #1
 8000cec:	739a      	strb	r2, [r3, #14]
								pb_pcb.dev_CDXCH_callback();
 8000cee:	4b11      	ldr	r3, [pc, #68]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cf0:	f8d3 3138 	ldr.w	r3, [r3, #312]	; 0x138
 8000cf4:	4798      	blx	r3
 8000cf6:	e03a      	b.n	8000d6e <pb_dp0_pcb+0x292>
								switch(pb_pcb.reason) {
 8000cf8:	4b0e      	ldr	r3, [pc, #56]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000cfa:	7d5b      	ldrb	r3, [r3, #21]
 8000cfc:	2b10      	cmp	r3, #16
 8000cfe:	d012      	beq.n	8000d26 <pb_dp0_pcb+0x24a>
 8000d00:	2b40      	cmp	r3, #64	; 0x40
 8000d02:	d002      	beq.n	8000d0a <pb_dp0_pcb+0x22e>
 8000d04:	2b04      	cmp	r3, #4
 8000d06:	d007      	beq.n	8000d18 <pb_dp0_pcb+0x23c>
 8000d08:	e024      	b.n	8000d54 <pb_dp0_pcb+0x278>
									case prm_fault : { pb_pcb.status1 += prm_fault; } break;
 8000d0a:	4b0a      	ldr	r3, [pc, #40]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d0c:	7e5b      	ldrb	r3, [r3, #25]
 8000d0e:	3340      	adds	r3, #64	; 0x40
 8000d10:	b2da      	uxtb	r2, r3
 8000d12:	4b08      	ldr	r3, [pc, #32]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d14:	765a      	strb	r2, [r3, #25]
 8000d16:	e024      	b.n	8000d62 <pb_dp0_pcb+0x286>
									case cfg_fault : { pb_pcb.status1 += cfg_fault; } break;
 8000d18:	4b06      	ldr	r3, [pc, #24]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d1a:	7e5b      	ldrb	r3, [r3, #25]
 8000d1c:	3304      	adds	r3, #4
 8000d1e:	b2da      	uxtb	r2, r3
 8000d20:	4b04      	ldr	r3, [pc, #16]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d22:	765a      	strb	r2, [r3, #25]
 8000d24:	e01d      	b.n	8000d62 <pb_dp0_pcb+0x286>
									case not_sprtd : { pb_pcb.status1 += not_sprtd; } break;
 8000d26:	4b03      	ldr	r3, [pc, #12]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d28:	7e5b      	ldrb	r3, [r3, #25]
 8000d2a:	3310      	adds	r3, #16
 8000d2c:	b2da      	uxtb	r2, r3
 8000d2e:	4b01      	ldr	r3, [pc, #4]	; (8000d34 <pb_dp0_pcb+0x258>)
 8000d30:	765a      	strb	r2, [r3, #25]
 8000d32:	e016      	b.n	8000d62 <pb_dp0_pcb+0x286>
 8000d34:	2000037c 	.word	0x2000037c
 8000d38:	40026440 	.word	0x40026440
 8000d3c:	200003a7 	.word	0x200003a7
 8000d40:	2000050b 	.word	0x2000050b
 8000d44:	20000504 	.word	0x20000504
 8000d48:	20000508 	.word	0x20000508
 8000d4c:	20000234 	.word	0x20000234
 8000d50:	20000235 	.word	0x20000235
									default : { pb_pcb.status1 += sta_nrdy; } break;
 8000d54:	4baf      	ldr	r3, [pc, #700]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d56:	7e5b      	ldrb	r3, [r3, #25]
 8000d58:	3302      	adds	r3, #2
 8000d5a:	b2da      	uxtb	r2, r3
 8000d5c:	4bad      	ldr	r3, [pc, #692]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d5e:	765a      	strb	r2, [r3, #25]
 8000d60:	bf00      	nop
								pb_pcb.status2 += prm_req;
 8000d62:	4bac      	ldr	r3, [pc, #688]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d64:	7e9b      	ldrb	r3, [r3, #26]
 8000d66:	3301      	adds	r3, #1
 8000d68:	b2da      	uxtb	r2, r3
 8000d6a:	4baa      	ldr	r3, [pc, #680]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d6c:	769a      	strb	r2, [r3, #26]
							pb_sd2_resp.PDU[2] = pb_pcb.status1;
 8000d6e:	4ba9      	ldr	r3, [pc, #676]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d70:	7e5a      	ldrb	r2, [r3, #25]
 8000d72:	4ba9      	ldr	r3, [pc, #676]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d74:	725a      	strb	r2, [r3, #9]
							pb_sd2_resp.PDU[3] = pb_pcb.status2;
 8000d76:	4ba7      	ldr	r3, [pc, #668]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d78:	7e9a      	ldrb	r2, [r3, #26]
 8000d7a:	4ba7      	ldr	r3, [pc, #668]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d7c:	729a      	strb	r2, [r3, #10]
							pb_sd2_resp.PDU[4] = 0x00; // status3
 8000d7e:	4ba6      	ldr	r3, [pc, #664]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d80:	2200      	movs	r2, #0
 8000d82:	72da      	strb	r2, [r3, #11]
							pb_sd2_resp.PDU[5] = pb_pcb.last_master_addr;
 8000d84:	4ba3      	ldr	r3, [pc, #652]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d86:	7f1a      	ldrb	r2, [r3, #28]
 8000d88:	4ba3      	ldr	r3, [pc, #652]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d8a:	731a      	strb	r2, [r3, #12]
							pb_sd2_resp.PDU[6] = pb_pcb.ident_h;
 8000d8c:	4ba1      	ldr	r3, [pc, #644]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d8e:	791a      	ldrb	r2, [r3, #4]
 8000d90:	4ba1      	ldr	r3, [pc, #644]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d92:	735a      	strb	r2, [r3, #13]
							pb_sd2_resp.PDU[7] = pb_pcb.ident_l;
 8000d94:	4b9f      	ldr	r3, [pc, #636]	; (8001014 <pb_dp0_pcb+0x538>)
 8000d96:	795a      	ldrb	r2, [r3, #5]
 8000d98:	4b9f      	ldr	r3, [pc, #636]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000d9a:	739a      	strb	r2, [r3, #14]
							pb_pcb.checksum_resp = checksum_calc((uint8_t*)&pb_sd2_resp.DA, 11);
 8000d9c:	210b      	movs	r1, #11
 8000d9e:	489f      	ldr	r0, [pc, #636]	; (800101c <pb_dp0_pcb+0x540>)
 8000da0:	f7ff fdd4 	bl	800094c <checksum_calc>
 8000da4:	4603      	mov	r3, r0
 8000da6:	461a      	mov	r2, r3
 8000da8:	4b9a      	ldr	r3, [pc, #616]	; (8001014 <pb_dp0_pcb+0x538>)
 8000daa:	76da      	strb	r2, [r3, #27]
							pb_sd2_resp.PDU[8] = pb_pcb.checksum_resp;
 8000dac:	4b99      	ldr	r3, [pc, #612]	; (8001014 <pb_dp0_pcb+0x538>)
 8000dae:	7eda      	ldrb	r2, [r3, #27]
 8000db0:	4b99      	ldr	r3, [pc, #612]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000db2:	73da      	strb	r2, [r3, #15]
							pb_sd2_resp.PDU[9] = ED;
 8000db4:	4b98      	ldr	r3, [pc, #608]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000db6:	2216      	movs	r2, #22
 8000db8:	741a      	strb	r2, [r3, #16]
							minTSDR_stop();
 8000dba:	f7ff fd6f 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000dbe:	f7ff fe59 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_sd2_resp, 17);
 8000dc2:	2111      	movs	r1, #17
 8000dc4:	4894      	ldr	r0, [pc, #592]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000dc6:	f7ff fe21 	bl	8000a0c <pb_tx_config>
 8000dca:	e0b2      	b.n	8000f32 <pb_dp0_pcb+0x456>
						} else if( (pb_pcb.req_buf[7] == Set_Prm /* DSAP parse */) && (pb_pcb.req_buf[8] == Chk_Cfg /* SSAP parse */) ) { // Set Parameters Request
 8000dcc:	4b91      	ldr	r3, [pc, #580]	; (8001014 <pb_dp0_pcb+0x538>)
 8000dce:	f893 302b 	ldrb.w	r3, [r3, #43]	; 0x2b
 8000dd2:	2b3d      	cmp	r3, #61	; 0x3d
 8000dd4:	f040 8084 	bne.w	8000ee0 <pb_dp0_pcb+0x404>
 8000dd8:	4b8e      	ldr	r3, [pc, #568]	; (8001014 <pb_dp0_pcb+0x538>)
 8000dda:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8000dde:	2b3e      	cmp	r3, #62	; 0x3e
 8000de0:	d17e      	bne.n	8000ee0 <pb_dp0_pcb+0x404>
							pb_pcb.sta_par = true;
 8000de2:	4b8c      	ldr	r3, [pc, #560]	; (8001014 <pb_dp0_pcb+0x538>)
 8000de4:	2201      	movs	r2, #1
 8000de6:	73da      	strb	r2, [r3, #15]
							pb_pcb.reason = status1_base;
 8000de8:	4b8a      	ldr	r3, [pc, #552]	; (8001014 <pb_dp0_pcb+0x538>)
 8000dea:	2200      	movs	r2, #0
 8000dec:	755a      	strb	r2, [r3, #21]
							if( (pb_pcb.req_buf[9] & wdog_is_on) == wdog_is_on) pb_pcb.wdog_on = true;
 8000dee:	4b89      	ldr	r3, [pc, #548]	; (8001014 <pb_dp0_pcb+0x538>)
 8000df0:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000df4:	f003 0308 	and.w	r3, r3, #8
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d002      	beq.n	8000e02 <pb_dp0_pcb+0x326>
 8000dfc:	4b85      	ldr	r3, [pc, #532]	; (8001014 <pb_dp0_pcb+0x538>)
 8000dfe:	2201      	movs	r2, #1
 8000e00:	745a      	strb	r2, [r3, #17]
							if( (pb_pcb.req_buf[9] & unlock_req) == unlock_req) pb_pcb.mstr_lock = false;
 8000e02:	4b84      	ldr	r3, [pc, #528]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e04:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000e08:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	d003      	beq.n	8000e18 <pb_dp0_pcb+0x33c>
 8000e10:	4b80      	ldr	r3, [pc, #512]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e12:	2200      	movs	r2, #0
 8000e14:	749a      	strb	r2, [r3, #18]
 8000e16:	e00f      	b.n	8000e38 <pb_dp0_pcb+0x35c>
							else if( (pb_pcb.req_buf[9] & lock_req) == lock_req) pb_pcb.mstr_lock = true;
 8000e18:	4b7e      	ldr	r3, [pc, #504]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e1a:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000e1e:	b25b      	sxtb	r3, r3
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	da03      	bge.n	8000e2c <pb_dp0_pcb+0x350>
 8000e24:	4b7b      	ldr	r3, [pc, #492]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e26:	2201      	movs	r2, #1
 8000e28:	749a      	strb	r2, [r3, #18]
 8000e2a:	e005      	b.n	8000e38 <pb_dp0_pcb+0x35c>
								pb_pcb.sta_par = false;
 8000e2c:	4b79      	ldr	r3, [pc, #484]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	73da      	strb	r2, [r3, #15]
								pb_pcb.reason = not_sprtd;
 8000e32:	4b78      	ldr	r3, [pc, #480]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e34:	2210      	movs	r2, #16
 8000e36:	755a      	strb	r2, [r3, #21]
							pb_pcb.WDOG_factor1 = pb_pcb.req_buf[10];
 8000e38:	4b76      	ldr	r3, [pc, #472]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e3a:	f893 202e 	ldrb.w	r2, [r3, #46]	; 0x2e
 8000e3e:	4b75      	ldr	r3, [pc, #468]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e40:	779a      	strb	r2, [r3, #30]
							pb_pcb.WDOG_factor2 = pb_pcb.req_buf[11];
 8000e42:	4b74      	ldr	r3, [pc, #464]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e44:	f893 202f 	ldrb.w	r2, [r3, #47]	; 0x2f
 8000e48:	4b72      	ldr	r3, [pc, #456]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e4a:	77da      	strb	r2, [r3, #31]
							pb_pcb.WDOG = pb_pcb.WDOG_factor1 * pb_pcb.WDOG_factor2 * 10;
 8000e4c:	4b71      	ldr	r3, [pc, #452]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e4e:	7f9b      	ldrb	r3, [r3, #30]
 8000e50:	461a      	mov	r2, r3
 8000e52:	4b70      	ldr	r3, [pc, #448]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e54:	7fdb      	ldrb	r3, [r3, #31]
 8000e56:	fb03 f202 	mul.w	r2, r3, r2
 8000e5a:	4613      	mov	r3, r2
 8000e5c:	009b      	lsls	r3, r3, #2
 8000e5e:	4413      	add	r3, r2
 8000e60:	005b      	lsls	r3, r3, #1
 8000e62:	461a      	mov	r2, r3
 8000e64:	4b6b      	ldr	r3, [pc, #428]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e66:	621a      	str	r2, [r3, #32]
							pb_pcb.minTSDR = pb_pcb.req_buf[12];
 8000e68:	4b6a      	ldr	r3, [pc, #424]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e6a:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
 8000e6e:	4b69      	ldr	r3, [pc, #420]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e70:	775a      	strb	r2, [r3, #29]
							pb_pcb.delay_factor_minTSDR = (pb_pcb.minTSDR * pb_pcb.tBit) / 1000;
 8000e72:	4b68      	ldr	r3, [pc, #416]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e74:	7f5b      	ldrb	r3, [r3, #29]
 8000e76:	461a      	mov	r2, r3
 8000e78:	4b66      	ldr	r3, [pc, #408]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e7a:	689b      	ldr	r3, [r3, #8]
 8000e7c:	fb03 f302 	mul.w	r3, r3, r2
 8000e80:	4a67      	ldr	r2, [pc, #412]	; (8001020 <pb_dp0_pcb+0x544>)
 8000e82:	fba2 2303 	umull	r2, r3, r2, r3
 8000e86:	099b      	lsrs	r3, r3, #6
 8000e88:	4a62      	ldr	r2, [pc, #392]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e8a:	f8c2 3130 	str.w	r3, [r2, #304]	; 0x130
							if( (pb_pcb.req_buf[13] != pb_pcb.ident_h) || (pb_pcb.req_buf[14] != pb_pcb.ident_l) ) {
 8000e8e:	4b61      	ldr	r3, [pc, #388]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e90:	f893 2031 	ldrb.w	r2, [r3, #49]	; 0x31
 8000e94:	4b5f      	ldr	r3, [pc, #380]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e96:	791b      	ldrb	r3, [r3, #4]
 8000e98:	429a      	cmp	r2, r3
 8000e9a:	d106      	bne.n	8000eaa <pb_dp0_pcb+0x3ce>
 8000e9c:	4b5d      	ldr	r3, [pc, #372]	; (8001014 <pb_dp0_pcb+0x538>)
 8000e9e:	f893 2032 	ldrb.w	r2, [r3, #50]	; 0x32
 8000ea2:	4b5c      	ldr	r3, [pc, #368]	; (8001014 <pb_dp0_pcb+0x538>)
 8000ea4:	795b      	ldrb	r3, [r3, #5]
 8000ea6:	429a      	cmp	r2, r3
 8000ea8:	d005      	beq.n	8000eb6 <pb_dp0_pcb+0x3da>
								pb_pcb.sta_par = false;
 8000eaa:	4b5a      	ldr	r3, [pc, #360]	; (8001014 <pb_dp0_pcb+0x538>)
 8000eac:	2200      	movs	r2, #0
 8000eae:	73da      	strb	r2, [r3, #15]
								pb_pcb.reason = prm_fault;
 8000eb0:	4b58      	ldr	r3, [pc, #352]	; (8001014 <pb_dp0_pcb+0x538>)
 8000eb2:	2240      	movs	r2, #64	; 0x40
 8000eb4:	755a      	strb	r2, [r3, #21]
							if(pb_pcb.sta_par == true) pb_pcb.last_master_addr = pb_pcb.req_buf[5] & 0x7F;
 8000eb6:	4b57      	ldr	r3, [pc, #348]	; (8001014 <pb_dp0_pcb+0x538>)
 8000eb8:	7bdb      	ldrb	r3, [r3, #15]
 8000eba:	2b01      	cmp	r3, #1
 8000ebc:	d107      	bne.n	8000ece <pb_dp0_pcb+0x3f2>
 8000ebe:	4b55      	ldr	r3, [pc, #340]	; (8001014 <pb_dp0_pcb+0x538>)
 8000ec0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8000ec4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000ec8:	b2da      	uxtb	r2, r3
 8000eca:	4b52      	ldr	r3, [pc, #328]	; (8001014 <pb_dp0_pcb+0x538>)
 8000ecc:	771a      	strb	r2, [r3, #28]
							minTSDR_stop();
 8000ece:	f7ff fce5 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000ed2:	f7ff fdcf 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_short_resp, 1);
 8000ed6:	2101      	movs	r1, #1
 8000ed8:	4852      	ldr	r0, [pc, #328]	; (8001024 <pb_dp0_pcb+0x548>)
 8000eda:	f7ff fd97 	bl	8000a0c <pb_tx_config>
 8000ede:	e028      	b.n	8000f32 <pb_dp0_pcb+0x456>
						} else if( (pb_pcb.req_buf[7] == Chk_Cfg /* DSAP parse */) && (pb_pcb.req_buf[8] == Chk_Cfg /* SSAP parse */) ) { // Configuration Request
 8000ee0:	4b4c      	ldr	r3, [pc, #304]	; (8001014 <pb_dp0_pcb+0x538>)
 8000ee2:	f893 302b 	ldrb.w	r3, [r3, #43]	; 0x2b
 8000ee6:	2b3e      	cmp	r3, #62	; 0x3e
 8000ee8:	f040 8092 	bne.w	8001010 <pb_dp0_pcb+0x534>
 8000eec:	4b49      	ldr	r3, [pc, #292]	; (8001014 <pb_dp0_pcb+0x538>)
 8000eee:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8000ef2:	2b3e      	cmp	r3, #62	; 0x3e
 8000ef4:	f040 808c 	bne.w	8001010 <pb_dp0_pcb+0x534>
							pb_pcb.sta_cfg = true;
 8000ef8:	4b46      	ldr	r3, [pc, #280]	; (8001014 <pb_dp0_pcb+0x538>)
 8000efa:	2201      	movs	r2, #1
 8000efc:	741a      	strb	r2, [r3, #16]
							pb_pcb.reason = status1_base;
 8000efe:	4b45      	ldr	r3, [pc, #276]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f00:	2200      	movs	r2, #0
 8000f02:	755a      	strb	r2, [r3, #21]
							if(pb_pcb.req_buf[9] != pb_pcb.dev_cfg) {
 8000f04:	4b43      	ldr	r3, [pc, #268]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f06:	f893 202d 	ldrb.w	r2, [r3, #45]	; 0x2d
 8000f0a:	4b42      	ldr	r3, [pc, #264]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f0c:	781b      	ldrb	r3, [r3, #0]
 8000f0e:	429a      	cmp	r2, r3
 8000f10:	d005      	beq.n	8000f1e <pb_dp0_pcb+0x442>
								pb_pcb.sta_cfg = false;
 8000f12:	4b40      	ldr	r3, [pc, #256]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f14:	2200      	movs	r2, #0
 8000f16:	741a      	strb	r2, [r3, #16]
								pb_pcb.reason = cfg_fault;
 8000f18:	4b3e      	ldr	r3, [pc, #248]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f1a:	2204      	movs	r2, #4
 8000f1c:	755a      	strb	r2, [r3, #21]
							minTSDR_stop();
 8000f1e:	f7ff fcbd 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000f22:	f7ff fda7 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_short_resp, 1);
 8000f26:	2101      	movs	r1, #1
 8000f28:	483e      	ldr	r0, [pc, #248]	; (8001024 <pb_dp0_pcb+0x548>)
 8000f2a:	f7ff fd6f 	bl	8000a0c <pb_tx_config>
			} break;
 8000f2e:	e06f      	b.n	8001010 <pb_dp0_pcb+0x534>
						if( (pb_pcb.dev_cfg & INOUT) == INOUT ) {
 8000f30:	bf00      	nop
			} break;
 8000f32:	e06d      	b.n	8001010 <pb_dp0_pcb+0x534>
				pb_pcb.req_size = 256 - DMA2_Stream2->NDTR;
 8000f34:	4b3c      	ldr	r3, [pc, #240]	; (8001028 <pb_dp0_pcb+0x54c>)
 8000f36:	685b      	ldr	r3, [r3, #4]
 8000f38:	b2db      	uxtb	r3, r3
 8000f3a:	425b      	negs	r3, r3
 8000f3c:	b2da      	uxtb	r2, r3
 8000f3e:	4b35      	ldr	r3, [pc, #212]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f40:	759a      	strb	r2, [r3, #22]
				if(checksum_check(SD1) == CHECKSUM_OK) {
 8000f42:	2010      	movs	r0, #16
 8000f44:	f7ff fd22 	bl	800098c <checksum_check>
 8000f48:	4603      	mov	r3, r0
 8000f4a:	2b01      	cmp	r3, #1
 8000f4c:	d170      	bne.n	8001030 <pb_dp0_pcb+0x554>
					if( (pb_pcb.access_type == CDXCH) && ((pb_pcb.req_buf[3] & SRD_HIGH) == SRD_HIGH) && ((pb_pcb.req_buf[3] & FCV) == FCV) ) {
 8000f4e:	4b31      	ldr	r3, [pc, #196]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f50:	7d1b      	ldrb	r3, [r3, #20]
 8000f52:	2b01      	cmp	r3, #1
 8000f54:	d16c      	bne.n	8001030 <pb_dp0_pcb+0x554>
 8000f56:	4b2f      	ldr	r3, [pc, #188]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f58:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 8000f5c:	f003 030d 	and.w	r3, r3, #13
 8000f60:	2b0d      	cmp	r3, #13
 8000f62:	d165      	bne.n	8001030 <pb_dp0_pcb+0x554>
 8000f64:	4b2b      	ldr	r3, [pc, #172]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f66:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 8000f6a:	f003 0310 	and.w	r3, r3, #16
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d05e      	beq.n	8001030 <pb_dp0_pcb+0x554>
						if( (pb_pcb.dev_cfg & IN) == IN) {
 8000f72:	4b28      	ldr	r3, [pc, #160]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f74:	781b      	ldrb	r3, [r3, #0]
 8000f76:	f003 0310 	and.w	r3, r3, #16
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d058      	beq.n	8001030 <pb_dp0_pcb+0x554>
							pb_sd2_resp.LE = 3 + pb_pcb.data_len;
 8000f7e:	4b25      	ldr	r3, [pc, #148]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f80:	785b      	ldrb	r3, [r3, #1]
 8000f82:	3303      	adds	r3, #3
 8000f84:	b2da      	uxtb	r2, r3
 8000f86:	4b24      	ldr	r3, [pc, #144]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000f88:	705a      	strb	r2, [r3, #1]
							pb_sd2_resp.LEr = 3 + pb_pcb.data_len;
 8000f8a:	4b22      	ldr	r3, [pc, #136]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f8c:	785b      	ldrb	r3, [r3, #1]
 8000f8e:	3303      	adds	r3, #3
 8000f90:	b2da      	uxtb	r2, r3
 8000f92:	4b21      	ldr	r3, [pc, #132]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000f94:	709a      	strb	r2, [r3, #2]
							pb_sd2_resp.DA = pb_pcb.last_master_addr;
 8000f96:	4b1f      	ldr	r3, [pc, #124]	; (8001014 <pb_dp0_pcb+0x538>)
 8000f98:	7f1a      	ldrb	r2, [r3, #28]
 8000f9a:	4b1f      	ldr	r3, [pc, #124]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000f9c:	711a      	strb	r2, [r3, #4]
							pb_sd2_resp.SA = pb_pcb.addr;
 8000f9e:	4b1d      	ldr	r3, [pc, #116]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fa0:	789a      	ldrb	r2, [r3, #2]
 8000fa2:	4b1d      	ldr	r3, [pc, #116]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000fa4:	715a      	strb	r2, [r3, #5]
							memcpy(pb_sd2_resp.PDU, pb_pcb.input_pData, pb_pcb.data_len); // send data
 8000fa6:	4b1b      	ldr	r3, [pc, #108]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fa8:	f8d3 1124 	ldr.w	r1, [r3, #292]	; 0x124
 8000fac:	4b19      	ldr	r3, [pc, #100]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fae:	785b      	ldrb	r3, [r3, #1]
 8000fb0:	461a      	mov	r2, r3
 8000fb2:	481e      	ldr	r0, [pc, #120]	; (800102c <pb_dp0_pcb+0x550>)
 8000fb4:	f002 fdee 	bl	8003b94 <memcpy>
							pb_pcb.checksum_resp = checksum_calc((uint8_t*)&pb_sd2_resp.DA, 3 + pb_pcb.data_len);
 8000fb8:	4b16      	ldr	r3, [pc, #88]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fba:	785b      	ldrb	r3, [r3, #1]
 8000fbc:	3303      	adds	r3, #3
 8000fbe:	b2db      	uxtb	r3, r3
 8000fc0:	4619      	mov	r1, r3
 8000fc2:	4816      	ldr	r0, [pc, #88]	; (800101c <pb_dp0_pcb+0x540>)
 8000fc4:	f7ff fcc2 	bl	800094c <checksum_calc>
 8000fc8:	4603      	mov	r3, r0
 8000fca:	461a      	mov	r2, r3
 8000fcc:	4b11      	ldr	r3, [pc, #68]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fce:	76da      	strb	r2, [r3, #27]
							pb_sd2_resp.PDU[pb_pcb.data_len] = pb_pcb.checksum_resp;
 8000fd0:	4b10      	ldr	r3, [pc, #64]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fd2:	785b      	ldrb	r3, [r3, #1]
 8000fd4:	4619      	mov	r1, r3
 8000fd6:	4b0f      	ldr	r3, [pc, #60]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fd8:	7eda      	ldrb	r2, [r3, #27]
 8000fda:	4b0f      	ldr	r3, [pc, #60]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000fdc:	440b      	add	r3, r1
 8000fde:	71da      	strb	r2, [r3, #7]
							pb_sd2_resp.PDU[pb_pcb.data_len + 1] = ED;
 8000fe0:	4b0c      	ldr	r3, [pc, #48]	; (8001014 <pb_dp0_pcb+0x538>)
 8000fe2:	785b      	ldrb	r3, [r3, #1]
 8000fe4:	3301      	adds	r3, #1
 8000fe6:	4a0c      	ldr	r2, [pc, #48]	; (8001018 <pb_dp0_pcb+0x53c>)
 8000fe8:	4413      	add	r3, r2
 8000fea:	2216      	movs	r2, #22
 8000fec:	71da      	strb	r2, [r3, #7]
							minTSDR_stop();
 8000fee:	f7ff fc55 	bl	800089c <minTSDR_stop>
							pb_rx_config();
 8000ff2:	f7ff fd3f 	bl	8000a74 <pb_rx_config>
							pb_tx_config((uint8_t*)&pb_sd2_resp, 9 + pb_pcb.data_len);
 8000ff6:	4b07      	ldr	r3, [pc, #28]	; (8001014 <pb_dp0_pcb+0x538>)
 8000ff8:	785b      	ldrb	r3, [r3, #1]
 8000ffa:	3309      	adds	r3, #9
 8000ffc:	b2db      	uxtb	r3, r3
 8000ffe:	4619      	mov	r1, r3
 8001000:	4805      	ldr	r0, [pc, #20]	; (8001018 <pb_dp0_pcb+0x53c>)
 8001002:	f7ff fd03 	bl	8000a0c <pb_tx_config>
							pb_pcb.data_ready_RW_callback();
 8001006:	4b03      	ldr	r3, [pc, #12]	; (8001014 <pb_dp0_pcb+0x538>)
 8001008:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800100c:	4798      	blx	r3
			} break;
 800100e:	e00f      	b.n	8001030 <pb_dp0_pcb+0x554>
			} break;
 8001010:	bf00      	nop
 8001012:	e00e      	b.n	8001032 <pb_dp0_pcb+0x556>
 8001014:	2000037c 	.word	0x2000037c
 8001018:	20000504 	.word	0x20000504
 800101c:	20000508 	.word	0x20000508
 8001020:	10624dd3 	.word	0x10624dd3
 8001024:	20000500 	.word	0x20000500
 8001028:	40026440 	.word	0x40026440
 800102c:	2000050b 	.word	0x2000050b
			} break;
 8001030:	bf00      	nop

		}

		pb_pcb.frame_available = false;
 8001032:	4b0c      	ldr	r3, [pc, #48]	; (8001064 <pb_dp0_pcb+0x588>)
 8001034:	2200      	movs	r2, #0
 8001036:	731a      	strb	r2, [r3, #12]

	}

	if(pb_pcb.req_rx == true) {
 8001038:	4b0a      	ldr	r3, [pc, #40]	; (8001064 <pb_dp0_pcb+0x588>)
 800103a:	7b5b      	ldrb	r3, [r3, #13]
 800103c:	2b01      	cmp	r3, #1
 800103e:	d10e      	bne.n	800105e <pb_dp0_pcb+0x582>

		pb_pcb.req_rx = false;
 8001040:	4b08      	ldr	r3, [pc, #32]	; (8001064 <pb_dp0_pcb+0x588>)
 8001042:	2200      	movs	r2, #0
 8001044:	735a      	strb	r2, [r3, #13]
		delay_us(pb_pcb.delay_factor_TXC);
 8001046:	4b07      	ldr	r3, [pc, #28]	; (8001064 <pb_dp0_pcb+0x588>)
 8001048:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
 800104c:	4618      	mov	r0, r3
 800104e:	f000 f999 	bl	8001384 <delay_us>
		max485_rx;
 8001052:	4b05      	ldr	r3, [pc, #20]	; (8001068 <pb_dp0_pcb+0x58c>)
 8001054:	699b      	ldr	r3, [r3, #24]
 8001056:	4a04      	ldr	r2, [pc, #16]	; (8001068 <pb_dp0_pcb+0x58c>)
 8001058:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800105c:	6193      	str	r3, [r2, #24]

	}

}
 800105e:	bf00      	nop
 8001060:	bd80      	pop	{r7, pc}
 8001062:	bf00      	nop
 8001064:	2000037c 	.word	0x2000037c
 8001068:	40020000 	.word	0x40020000

0800106c <transceiver_init>:

void transceiver_init() {
 800106c:	b480      	push	{r7}
 800106e:	af00      	add	r7, sp, #0

	USART1->CR1 |= (1<<4); // IDLE EN
 8001070:	4b11      	ldr	r3, [pc, #68]	; (80010b8 <transceiver_init+0x4c>)
 8001072:	68db      	ldr	r3, [r3, #12]
 8001074:	4a10      	ldr	r2, [pc, #64]	; (80010b8 <transceiver_init+0x4c>)
 8001076:	f043 0310 	orr.w	r3, r3, #16
 800107a:	60d3      	str	r3, [r2, #12]
	USART1->CR3 |= (1<<7)  // DMAT EN
 800107c:	4b0e      	ldr	r3, [pc, #56]	; (80010b8 <transceiver_init+0x4c>)
 800107e:	695b      	ldr	r3, [r3, #20]
 8001080:	4a0d      	ldr	r2, [pc, #52]	; (80010b8 <transceiver_init+0x4c>)
 8001082:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001086:	6153      	str	r3, [r2, #20]
		  	  	|  (1<<6); // DMAR EN

	DMA2->HIFCR |= 0xFFFFFFFF;
 8001088:	4b0c      	ldr	r3, [pc, #48]	; (80010bc <transceiver_init+0x50>)
 800108a:	68db      	ldr	r3, [r3, #12]
 800108c:	4b0b      	ldr	r3, [pc, #44]	; (80010bc <transceiver_init+0x50>)
 800108e:	f04f 32ff 	mov.w	r2, #4294967295
 8001092:	60da      	str	r2, [r3, #12]
	DMA2->LIFCR |= 0xFFFFFFFF;
 8001094:	4b09      	ldr	r3, [pc, #36]	; (80010bc <transceiver_init+0x50>)
 8001096:	689b      	ldr	r3, [r3, #8]
 8001098:	4b08      	ldr	r3, [pc, #32]	; (80010bc <transceiver_init+0x50>)
 800109a:	f04f 32ff 	mov.w	r2, #4294967295
 800109e:	609a      	str	r2, [r3, #8]

	DMA2_Stream7->CR |= (1<<4); // TCIE
 80010a0:	4b07      	ldr	r3, [pc, #28]	; (80010c0 <transceiver_init+0x54>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	4a06      	ldr	r2, [pc, #24]	; (80010c0 <transceiver_init+0x54>)
 80010a6:	f043 0310 	orr.w	r3, r3, #16
 80010aa:	6013      	str	r3, [r2, #0]

}
 80010ac:	bf00      	nop
 80010ae:	46bd      	mov	sp, r7
 80010b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop
 80010b8:	40011000 	.word	0x40011000
 80010bc:	40026400 	.word	0x40026400
 80010c0:	400264b8 	.word	0x400264b8

080010c4 <wdog_trig_cb>:
 * 	This function notify that master lost
 * 	You can use this function in your user code
 * 	STRONGLY RECOMENDED FAST REALISATION BECAUSE THIS FUCTION IS CALLED IN ISR!
 */

__weak void wdog_trig_cb() {
 80010c4:	b480      	push	{r7}
 80010c6:	af00      	add	r7, sp, #0



}
 80010c8:	bf00      	nop
 80010ca:	46bd      	mov	sp, r7
 80010cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d0:	4770      	bx	lr

080010d2 <dev_CDXCH_cb>:
 *	This function (dev_CDXCH_cb) notify that device ready for cycle data exchange
 * 	You can use this function in your user code
 * 	STRONGLY RECOMENDED FAST REALISATION BECAUSE THIS FUCTION IS CALLED IN RESPONSE FRAME PROCESSING!
 */

__weak void dev_CDXCH_cb() {
 80010d2:	b480      	push	{r7}
 80010d4:	af00      	add	r7, sp, #0



}
 80010d6:	bf00      	nop
 80010d8:	46bd      	mov	sp, r7
 80010da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010de:	4770      	bx	lr

080010e0 <data_ready_RW_cb>:
 * 	You can push input data to user array any time, except interrupt.
 * 	If you want use interrupt you should check frame_available == false for push.
 * 	STRONGLY RECOMENDED FAST REALISATION BECAUSE THIS FUCTION IS CALLED IN RESPONSE FRAME PROCESSING!
 */

__weak void data_ready_RW_cb() {
 80010e0:	b480      	push	{r7}
 80010e2:	af00      	add	r7, sp, #0



}
 80010e4:	bf00      	nop
 80010e6:	46bd      	mov	sp, r7
 80010e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ec:	4770      	bx	lr
	...

080010f0 <pb_dp0_pcb_init>:

uint8_t pb_dp0_pcb_init(struct slave_cfg* cfg, uint8_t* input_pData, uint8_t* output_pData) {
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b086      	sub	sp, #24
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	60f8      	str	r0, [r7, #12]
 80010f8:	60b9      	str	r1, [r7, #8]
 80010fa:	607a      	str	r2, [r7, #4]

	if( (cfg->dev_cfg.len > 0) && (cfg->dev_cfg.len <= 16) ) {
 80010fc:	68fb      	ldr	r3, [r7, #12]
 80010fe:	799b      	ldrb	r3, [r3, #6]
 8001100:	2b00      	cmp	r3, #0
 8001102:	f000 8125 	beq.w	8001350 <pb_dp0_pcb_init+0x260>
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	799b      	ldrb	r3, [r3, #6]
 800110a:	2b10      	cmp	r3, #16
 800110c:	f200 8120 	bhi.w	8001350 <pb_dp0_pcb_init+0x260>

		pb_pcb.minTSDR = DEFAULT_minTSDR;
 8001110:	4b92      	ldr	r3, [pc, #584]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001112:	220b      	movs	r2, #11
 8001114:	775a      	strb	r2, [r3, #29]

		switch(cfg->speed) {
 8001116:	68fb      	ldr	r3, [r7, #12]
 8001118:	785b      	ldrb	r3, [r3, #1]
 800111a:	2b08      	cmp	r3, #8
 800111c:	f200 80a4 	bhi.w	8001268 <pb_dp0_pcb_init+0x178>
 8001120:	a201      	add	r2, pc, #4	; (adr r2, 8001128 <pb_dp0_pcb_init+0x38>)
 8001122:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001126:	bf00      	nop
 8001128:	0800114d 	.word	0x0800114d
 800112c:	08001171 	.word	0x08001171
 8001130:	0800118f 	.word	0x0800118f
 8001134:	080011b3 	.word	0x080011b3
 8001138:	080011d5 	.word	0x080011d5
 800113c:	080011f5 	.word	0x080011f5
 8001140:	08001215 	.word	0x08001215
 8001144:	0800122d 	.word	0x0800122d
 8001148:	0800124b 	.word	0x0800124b

			/*
			 * 	For other MCUs or other MCU's speed you must calculate new division values for correctly UART work at any supported speeds
			 */

			case speed_9600 : {	USART1->BRR = 0x222E;
 800114c:	4b84      	ldr	r3, [pc, #528]	; (8001360 <pb_dp0_pcb_init+0x270>)
 800114e:	f242 222e 	movw	r2, #8750	; 0x222e
 8001152:	609a      	str	r2, [r3, #8]
								pb_pcb.delay_factor_TXC = 2000;
 8001154:	4b81      	ldr	r3, [pc, #516]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001156:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 800115a:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
								pb_pcb.tBit = tBit_9600;
 800115e:	4b7f      	ldr	r3, [pc, #508]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001160:	4a80      	ldr	r2, [pc, #512]	; (8001364 <pb_dp0_pcb_init+0x274>)
 8001162:	609a      	str	r2, [r3, #8]
								pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_9600) / 1000; } break;
 8001164:	4b7d      	ldr	r3, [pc, #500]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001166:	f240 4283 	movw	r2, #1155	; 0x483
 800116a:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 800116e:	e07b      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_19200 : { USART1->BRR = 0x1117;
 8001170:	4b7b      	ldr	r3, [pc, #492]	; (8001360 <pb_dp0_pcb_init+0x270>)
 8001172:	f241 1217 	movw	r2, #4375	; 0x1117
 8001176:	609a      	str	r2, [r3, #8]
								 pb_pcb.delay_factor_TXC = 1270;
 8001178:	4b78      	ldr	r3, [pc, #480]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800117a:	f240 42f6 	movw	r2, #1270	; 0x4f6
 800117e:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
								 pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_19200) / 1000; } break;
 8001182:	4b76      	ldr	r3, [pc, #472]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001184:	f240 2247 	movw	r2, #583	; 0x247
 8001188:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 800118c:	e06c      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_93750 : { USART1->BRR = 0x0380;
 800118e:	4b74      	ldr	r3, [pc, #464]	; (8001360 <pb_dp0_pcb_init+0x270>)
 8001190:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001194:	609a      	str	r2, [r3, #8]
			 	 	 	 	 	 pb_pcb.delay_factor_TXC = 280;
 8001196:	4b71      	ldr	r3, [pc, #452]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001198:	f44f 728c 	mov.w	r2, #280	; 0x118
 800119c:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
								 pb_pcb.tBit = tBit_19200;
 80011a0:	4b6e      	ldr	r3, [pc, #440]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011a2:	f64c 7208 	movw	r2, #53000	; 0xcf08
 80011a6:	609a      	str	r2, [r3, #8]
			 	 	 	 	 	 pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_93750) / 1000; } break;
 80011a8:	4b6c      	ldr	r3, [pc, #432]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011aa:	2279      	movs	r2, #121	; 0x79
 80011ac:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 80011b0:	e05a      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_187500 : { USART1->BRR = 0x01C0;
 80011b2:	4b6b      	ldr	r3, [pc, #428]	; (8001360 <pb_dp0_pcb_init+0x270>)
 80011b4:	f44f 72e0 	mov.w	r2, #448	; 0x1c0
 80011b8:	609a      	str	r2, [r3, #8]
				 	 	 	 	  pb_pcb.delay_factor_TXC = 145;
 80011ba:	4b68      	ldr	r3, [pc, #416]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011bc:	2291      	movs	r2, #145	; 0x91
 80011be:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
							 	  pb_pcb.tBit = tBit_187500;
 80011c2:	4b66      	ldr	r3, [pc, #408]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011c4:	f241 7270 	movw	r2, #6000	; 0x1770
 80011c8:	609a      	str	r2, [r3, #8]
				 	 	 	 	  pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_187500) / 1000; } break;
 80011ca:	4b64      	ldr	r3, [pc, #400]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011cc:	2242      	movs	r2, #66	; 0x42
 80011ce:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 80011d2:	e049      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_500K: { USART1->BRR = 0x00A8;
 80011d4:	4b62      	ldr	r3, [pc, #392]	; (8001360 <pb_dp0_pcb_init+0x270>)
 80011d6:	22a8      	movs	r2, #168	; 0xa8
 80011d8:	609a      	str	r2, [r3, #8]
			 	 	 	 	   pb_pcb.delay_factor_TXC = 65;
 80011da:	4b60      	ldr	r3, [pc, #384]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011dc:	2241      	movs	r2, #65	; 0x41
 80011de:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
							   pb_pcb.tBit = tBit_500K;
 80011e2:	4b5e      	ldr	r3, [pc, #376]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011e4:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 80011e8:	609a      	str	r2, [r3, #8]
			 	 	 	 	   pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_500K) / 1000; } break;
 80011ea:	4b5c      	ldr	r3, [pc, #368]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011ec:	2216      	movs	r2, #22
 80011ee:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 80011f2:	e039      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_1500K: { USART1->BRR = 0x0038;
 80011f4:	4b5a      	ldr	r3, [pc, #360]	; (8001360 <pb_dp0_pcb_init+0x270>)
 80011f6:	2238      	movs	r2, #56	; 0x38
 80011f8:	609a      	str	r2, [r3, #8]
								pb_pcb.delay_factor_TXC = 15;
 80011fa:	4b58      	ldr	r3, [pc, #352]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80011fc:	220f      	movs	r2, #15
 80011fe:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
								pb_pcb.tBit = tBit_1500K;
 8001202:	4b56      	ldr	r3, [pc, #344]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001204:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8001208:	609a      	str	r2, [r3, #8]
								pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_1500K) / 1000; } break;
 800120a:	4b54      	ldr	r3, [pc, #336]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800120c:	2207      	movs	r2, #7
 800120e:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8001212:	e029      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_3M: { USART1->BRR = 0x001C;
 8001214:	4b52      	ldr	r3, [pc, #328]	; (8001360 <pb_dp0_pcb_init+0x270>)
 8001216:	221c      	movs	r2, #28
 8001218:	609a      	str	r2, [r3, #8]
							 pb_pcb.delay_factor_TXC = 10;
 800121a:	4b50      	ldr	r3, [pc, #320]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800121c:	220a      	movs	r2, #10
 800121e:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
							 pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_3M) / 1000; } break;
 8001222:	4b4e      	ldr	r3, [pc, #312]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001224:	2203      	movs	r2, #3
 8001226:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 800122a:	e01d      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_6M: { USART1->BRR = 0x000E;
 800122c:	4b4c      	ldr	r3, [pc, #304]	; (8001360 <pb_dp0_pcb_init+0x270>)
 800122e:	220e      	movs	r2, #14
 8001230:	609a      	str	r2, [r3, #8]
			 	 	 	 	 pb_pcb.delay_factor_TXC = 5;
 8001232:	4b4a      	ldr	r3, [pc, #296]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001234:	2205      	movs	r2, #5
 8001236:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
							 pb_pcb.tBit = tBit_6M;
 800123a:	4b48      	ldr	r3, [pc, #288]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800123c:	22aa      	movs	r2, #170	; 0xaa
 800123e:	609a      	str	r2, [r3, #8]
			 	 	 	 	 pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_6M) / 1000; } break;
 8001240:	4b46      	ldr	r3, [pc, #280]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001242:	2201      	movs	r2, #1
 8001244:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8001248:	e00e      	b.n	8001268 <pb_dp0_pcb_init+0x178>

			case speed_12M: { USART1->BRR = 0x0007;
 800124a:	4b45      	ldr	r3, [pc, #276]	; (8001360 <pb_dp0_pcb_init+0x270>)
 800124c:	2207      	movs	r2, #7
 800124e:	609a      	str	r2, [r3, #8]
			 	 	 	 	  pb_pcb.delay_factor_TXC = 2;
 8001250:	4b42      	ldr	r3, [pc, #264]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001252:	2202      	movs	r2, #2
 8001254:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
			 	 	 	 	  pb_pcb.tBit = tBit_12M;
 8001258:	4b40      	ldr	r3, [pc, #256]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800125a:	2264      	movs	r2, #100	; 0x64
 800125c:	609a      	str	r2, [r3, #8]
			 	 	 	 	  pb_pcb.delay_factor_minTSDR = (DEFAULT_minTSDR * tBit_12M) / 1000; } break;
 800125e:	4b3f      	ldr	r3, [pc, #252]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001260:	2201      	movs	r2, #1
 8001262:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8001266:	bf00      	nop

		}

		transceiver_init();
 8001268:	f7ff ff00 	bl	800106c <transceiver_init>

		pb_pcb.wdog_trig_callback = &wdog_trig_cb;
 800126c:	4b3b      	ldr	r3, [pc, #236]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800126e:	4a3e      	ldr	r2, [pc, #248]	; (8001368 <pb_dp0_pcb_init+0x278>)
 8001270:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
		pb_pcb.dev_CDXCH_callback = &dev_CDXCH_cb;
 8001274:	4b39      	ldr	r3, [pc, #228]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001276:	4a3d      	ldr	r2, [pc, #244]	; (800136c <pb_dp0_pcb_init+0x27c>)
 8001278:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
		pb_pcb.data_ready_RW_callback = &data_ready_RW_cb;
 800127c:	4b37      	ldr	r3, [pc, #220]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800127e:	4a3c      	ldr	r2, [pc, #240]	; (8001370 <pb_dp0_pcb_init+0x280>)
 8001280:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c

		pb_pcb.input_pData = input_pData;
 8001284:	4a35      	ldr	r2, [pc, #212]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001286:	68bb      	ldr	r3, [r7, #8]
 8001288:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
		pb_pcb.output_pData = output_pData;
 800128c:	4a33      	ldr	r2, [pc, #204]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800128e:	687b      	ldr	r3, [r7, #4]
 8001290:	f8c2 3128 	str.w	r3, [r2, #296]	; 0x128

		uint8_t dev_cfg = DEV_BASE;
 8001294:	2380      	movs	r3, #128	; 0x80
 8001296:	75fb      	strb	r3, [r7, #23]

		dev_cfg |= cfg->dev_cfg.dir;
 8001298:	68fb      	ldr	r3, [r7, #12]
 800129a:	791a      	ldrb	r2, [r3, #4]
 800129c:	7dfb      	ldrb	r3, [r7, #23]
 800129e:	4313      	orrs	r3, r2
 80012a0:	75fb      	strb	r3, [r7, #23]
		dev_cfg |= cfg->dev_cfg.size;
 80012a2:	68fb      	ldr	r3, [r7, #12]
 80012a4:	795a      	ldrb	r2, [r3, #5]
 80012a6:	7dfb      	ldrb	r3, [r7, #23]
 80012a8:	4313      	orrs	r3, r2
 80012aa:	75fb      	strb	r3, [r7, #23]
		dev_cfg |= (cfg->dev_cfg.len - 1);
 80012ac:	68fb      	ldr	r3, [r7, #12]
 80012ae:	799b      	ldrb	r3, [r3, #6]
 80012b0:	3b01      	subs	r3, #1
 80012b2:	b2db      	uxtb	r3, r3
 80012b4:	b25a      	sxtb	r2, r3
 80012b6:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80012ba:	4313      	orrs	r3, r2
 80012bc:	b25b      	sxtb	r3, r3
 80012be:	75fb      	strb	r3, [r7, #23]

		pb_pcb.dev_cfg = dev_cfg;
 80012c0:	4a26      	ldr	r2, [pc, #152]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012c2:	7dfb      	ldrb	r3, [r7, #23]
 80012c4:	7013      	strb	r3, [r2, #0]
		if(cfg->dev_cfg.size == BYTE) pb_pcb.data_len = cfg->dev_cfg.len;
 80012c6:	68fb      	ldr	r3, [r7, #12]
 80012c8:	795b      	ldrb	r3, [r3, #5]
 80012ca:	2b00      	cmp	r3, #0
 80012cc:	d104      	bne.n	80012d8 <pb_dp0_pcb_init+0x1e8>
 80012ce:	68fb      	ldr	r3, [r7, #12]
 80012d0:	799a      	ldrb	r2, [r3, #6]
 80012d2:	4b22      	ldr	r3, [pc, #136]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012d4:	705a      	strb	r2, [r3, #1]
 80012d6:	e005      	b.n	80012e4 <pb_dp0_pcb_init+0x1f4>
		else pb_pcb.data_len = cfg->dev_cfg.len * 2;
 80012d8:	68fb      	ldr	r3, [r7, #12]
 80012da:	799b      	ldrb	r3, [r3, #6]
 80012dc:	005b      	lsls	r3, r3, #1
 80012de:	b2da      	uxtb	r2, r3
 80012e0:	4b1e      	ldr	r3, [pc, #120]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012e2:	705a      	strb	r2, [r3, #1]

		pb_pcb.addr = cfg->addr;
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	781a      	ldrb	r2, [r3, #0]
 80012e8:	4b1c      	ldr	r3, [pc, #112]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012ea:	709a      	strb	r2, [r3, #2]
		pb_pcb.speed = cfg->speed;
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	785a      	ldrb	r2, [r3, #1]
 80012f0:	4b1a      	ldr	r3, [pc, #104]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012f2:	70da      	strb	r2, [r3, #3]
		pb_pcb.ident_l = cfg->ident;
 80012f4:	68fb      	ldr	r3, [r7, #12]
 80012f6:	885b      	ldrh	r3, [r3, #2]
 80012f8:	b2da      	uxtb	r2, r3
 80012fa:	4b18      	ldr	r3, [pc, #96]	; (800135c <pb_dp0_pcb_init+0x26c>)
 80012fc:	715a      	strb	r2, [r3, #5]
		pb_pcb.ident_h = cfg->ident >> 8;
 80012fe:	68fb      	ldr	r3, [r7, #12]
 8001300:	885b      	ldrh	r3, [r3, #2]
 8001302:	0a1b      	lsrs	r3, r3, #8
 8001304:	b29b      	uxth	r3, r3
 8001306:	b2da      	uxtb	r2, r3
 8001308:	4b14      	ldr	r3, [pc, #80]	; (800135c <pb_dp0_pcb_init+0x26c>)
 800130a:	711a      	strb	r2, [r3, #4]

		pb_sd2_resp.SD = SD2;
 800130c:	4b19      	ldr	r3, [pc, #100]	; (8001374 <pb_dp0_pcb_init+0x284>)
 800130e:	2268      	movs	r2, #104	; 0x68
 8001310:	701a      	strb	r2, [r3, #0]
		pb_sd2_resp.SDr = SD2;
 8001312:	4b18      	ldr	r3, [pc, #96]	; (8001374 <pb_dp0_pcb_init+0x284>)
 8001314:	2268      	movs	r2, #104	; 0x68
 8001316:	70da      	strb	r2, [r3, #3]
		pb_sd2_resp.FC = DL;
 8001318:	4b16      	ldr	r3, [pc, #88]	; (8001374 <pb_dp0_pcb_init+0x284>)
 800131a:	2208      	movs	r2, #8
 800131c:	719a      	strb	r2, [r3, #6]

		pb_sd1_resp.SD = SD1;
 800131e:	4b16      	ldr	r3, [pc, #88]	; (8001378 <pb_dp0_pcb_init+0x288>)
 8001320:	2210      	movs	r2, #16
 8001322:	701a      	strb	r2, [r3, #0]
		pb_sd1_resp.FC = DL;
 8001324:	4b14      	ldr	r3, [pc, #80]	; (8001378 <pb_dp0_pcb_init+0x288>)
 8001326:	2208      	movs	r2, #8
 8001328:	70da      	strb	r2, [r3, #3]
		pb_sd1_resp.ED = ED;
 800132a:	4b13      	ldr	r3, [pc, #76]	; (8001378 <pb_dp0_pcb_init+0x288>)
 800132c:	2216      	movs	r2, #22
 800132e:	715a      	strb	r2, [r3, #5]

		pb_short_resp.SC = SC;
 8001330:	4b12      	ldr	r3, [pc, #72]	; (800137c <pb_dp0_pcb_init+0x28c>)
 8001332:	22e5      	movs	r2, #229	; 0xe5
 8001334:	701a      	strb	r2, [r3, #0]

		pb_pcb.last_master_addr = DEFAULT_MASTER_ADDR;
 8001336:	4b09      	ldr	r3, [pc, #36]	; (800135c <pb_dp0_pcb_init+0x26c>)
 8001338:	22ff      	movs	r2, #255	; 0xff
 800133a:	771a      	strb	r2, [r3, #28]

		pb_rx_config();
 800133c:	f7ff fb9a 	bl	8000a74 <pb_rx_config>

		max485_rx;
 8001340:	4b0f      	ldr	r3, [pc, #60]	; (8001380 <pb_dp0_pcb_init+0x290>)
 8001342:	699b      	ldr	r3, [r3, #24]
 8001344:	4a0e      	ldr	r2, [pc, #56]	; (8001380 <pb_dp0_pcb_init+0x290>)
 8001346:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800134a:	6193      	str	r3, [r2, #24]

		return 0;
 800134c:	2300      	movs	r3, #0
 800134e:	e000      	b.n	8001352 <pb_dp0_pcb_init+0x262>

	} else {

		return 1;
 8001350:	2301      	movs	r3, #1

	}

}
 8001352:	4618      	mov	r0, r3
 8001354:	3718      	adds	r7, #24
 8001356:	46bd      	mov	sp, r7
 8001358:	bd80      	pop	{r7, pc}
 800135a:	bf00      	nop
 800135c:	2000037c 	.word	0x2000037c
 8001360:	40011000 	.word	0x40011000
 8001364:	00019a28 	.word	0x00019a28
 8001368:	080010c5 	.word	0x080010c5
 800136c:	080010d3 	.word	0x080010d3
 8001370:	080010e1 	.word	0x080010e1
 8001374:	20000504 	.word	0x20000504
 8001378:	20000234 	.word	0x20000234
 800137c:	20000500 	.word	0x20000500
 8001380:	40020000 	.word	0x40020000

08001384 <delay_us>:

void delay_us(uint32_t us) {
 8001384:	b480      	push	{r7}
 8001386:	b083      	sub	sp, #12
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]

	TIM2->CR1 &= 0xFFFE;
 800138c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001390:	681a      	ldr	r2, [r3, #0]
 8001392:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001396:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 800139a:	4013      	ands	r3, r2
 800139c:	600b      	str	r3, [r1, #0]
	TIM2->CNT = 0;
 800139e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013a2:	2200      	movs	r2, #0
 80013a4:	625a      	str	r2, [r3, #36]	; 0x24
	TIM2->CR1 |= 0x0001;
 80013a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80013b0:	f043 0301 	orr.w	r3, r3, #1
 80013b4:	6013      	str	r3, [r2, #0]

	while(TIM2->CNT <= us) {;;}
 80013b6:	bf00      	nop
 80013b8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013be:	687a      	ldr	r2, [r7, #4]
 80013c0:	429a      	cmp	r2, r3
 80013c2:	d2f9      	bcs.n	80013b8 <delay_us+0x34>

	TIM2->CR1 &= 0xFFFE;
 80013c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013c8:	681a      	ldr	r2, [r3, #0]
 80013ca:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80013ce:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 80013d2:	4013      	ands	r3, r2
 80013d4:	600b      	str	r3, [r1, #0]

}
 80013d6:	bf00      	nop
 80013d8:	370c      	adds	r7, #12
 80013da:	46bd      	mov	sp, r7
 80013dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e0:	4770      	bx	lr
	...

080013e4 <HAL_MspInit>:
 80013e4:	b480      	push	{r7}
 80013e6:	b083      	sub	sp, #12
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	2300      	movs	r3, #0
 80013ec:	607b      	str	r3, [r7, #4]
 80013ee:	4b10      	ldr	r3, [pc, #64]	; (8001430 <HAL_MspInit+0x4c>)
 80013f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013f2:	4a0f      	ldr	r2, [pc, #60]	; (8001430 <HAL_MspInit+0x4c>)
 80013f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80013f8:	6453      	str	r3, [r2, #68]	; 0x44
 80013fa:	4b0d      	ldr	r3, [pc, #52]	; (8001430 <HAL_MspInit+0x4c>)
 80013fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001402:	607b      	str	r3, [r7, #4]
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	2300      	movs	r3, #0
 8001408:	603b      	str	r3, [r7, #0]
 800140a:	4b09      	ldr	r3, [pc, #36]	; (8001430 <HAL_MspInit+0x4c>)
 800140c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800140e:	4a08      	ldr	r2, [pc, #32]	; (8001430 <HAL_MspInit+0x4c>)
 8001410:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001414:	6413      	str	r3, [r2, #64]	; 0x40
 8001416:	4b06      	ldr	r3, [pc, #24]	; (8001430 <HAL_MspInit+0x4c>)
 8001418:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800141a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800141e:	603b      	str	r3, [r7, #0]
 8001420:	683b      	ldr	r3, [r7, #0]
 8001422:	bf00      	nop
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142c:	4770      	bx	lr
 800142e:	bf00      	nop
 8001430:	40023800 	.word	0x40023800

08001434 <HAL_TIM_Base_MspInit>:
 8001434:	b580      	push	{r7, lr}
 8001436:	b084      	sub	sp, #16
 8001438:	af00      	add	r7, sp, #0
 800143a:	6078      	str	r0, [r7, #4]
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001444:	d10e      	bne.n	8001464 <HAL_TIM_Base_MspInit+0x30>
 8001446:	2300      	movs	r3, #0
 8001448:	60fb      	str	r3, [r7, #12]
 800144a:	4b16      	ldr	r3, [pc, #88]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 800144c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800144e:	4a15      	ldr	r2, [pc, #84]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 8001450:	f043 0301 	orr.w	r3, r3, #1
 8001454:	6413      	str	r3, [r2, #64]	; 0x40
 8001456:	4b13      	ldr	r3, [pc, #76]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 8001458:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145a:	f003 0301 	and.w	r3, r3, #1
 800145e:	60fb      	str	r3, [r7, #12]
 8001460:	68fb      	ldr	r3, [r7, #12]
 8001462:	e01a      	b.n	800149a <HAL_TIM_Base_MspInit+0x66>
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	4a0f      	ldr	r2, [pc, #60]	; (80014a8 <HAL_TIM_Base_MspInit+0x74>)
 800146a:	4293      	cmp	r3, r2
 800146c:	d115      	bne.n	800149a <HAL_TIM_Base_MspInit+0x66>
 800146e:	2300      	movs	r3, #0
 8001470:	60bb      	str	r3, [r7, #8]
 8001472:	4b0c      	ldr	r3, [pc, #48]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 8001474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001476:	4a0b      	ldr	r2, [pc, #44]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 8001478:	f043 0308 	orr.w	r3, r3, #8
 800147c:	6413      	str	r3, [r2, #64]	; 0x40
 800147e:	4b09      	ldr	r3, [pc, #36]	; (80014a4 <HAL_TIM_Base_MspInit+0x70>)
 8001480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001482:	f003 0308 	and.w	r3, r3, #8
 8001486:	60bb      	str	r3, [r7, #8]
 8001488:	68bb      	ldr	r3, [r7, #8]
 800148a:	2200      	movs	r2, #0
 800148c:	2100      	movs	r1, #0
 800148e:	2032      	movs	r0, #50	; 0x32
 8001490:	f000 fb7f 	bl	8001b92 <HAL_NVIC_SetPriority>
 8001494:	2032      	movs	r0, #50	; 0x32
 8001496:	f000 fb98 	bl	8001bca <HAL_NVIC_EnableIRQ>
 800149a:	bf00      	nop
 800149c:	3710      	adds	r7, #16
 800149e:	46bd      	mov	sp, r7
 80014a0:	bd80      	pop	{r7, pc}
 80014a2:	bf00      	nop
 80014a4:	40023800 	.word	0x40023800
 80014a8:	40000c00 	.word	0x40000c00

080014ac <HAL_UART_MspInit>:
 80014ac:	b580      	push	{r7, lr}
 80014ae:	b08a      	sub	sp, #40	; 0x28
 80014b0:	af00      	add	r7, sp, #0
 80014b2:	6078      	str	r0, [r7, #4]
 80014b4:	f107 0314 	add.w	r3, r7, #20
 80014b8:	2200      	movs	r2, #0
 80014ba:	601a      	str	r2, [r3, #0]
 80014bc:	605a      	str	r2, [r3, #4]
 80014be:	609a      	str	r2, [r3, #8]
 80014c0:	60da      	str	r2, [r3, #12]
 80014c2:	611a      	str	r2, [r3, #16]
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	4a4c      	ldr	r2, [pc, #304]	; (80015fc <HAL_UART_MspInit+0x150>)
 80014ca:	4293      	cmp	r3, r2
 80014cc:	f040 8091 	bne.w	80015f2 <HAL_UART_MspInit+0x146>
 80014d0:	2300      	movs	r3, #0
 80014d2:	613b      	str	r3, [r7, #16]
 80014d4:	4b4a      	ldr	r3, [pc, #296]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014d8:	4a49      	ldr	r2, [pc, #292]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014da:	f043 0310 	orr.w	r3, r3, #16
 80014de:	6453      	str	r3, [r2, #68]	; 0x44
 80014e0:	4b47      	ldr	r3, [pc, #284]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014e4:	f003 0310 	and.w	r3, r3, #16
 80014e8:	613b      	str	r3, [r7, #16]
 80014ea:	693b      	ldr	r3, [r7, #16]
 80014ec:	2300      	movs	r3, #0
 80014ee:	60fb      	str	r3, [r7, #12]
 80014f0:	4b43      	ldr	r3, [pc, #268]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014f4:	4a42      	ldr	r2, [pc, #264]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014f6:	f043 0301 	orr.w	r3, r3, #1
 80014fa:	6313      	str	r3, [r2, #48]	; 0x30
 80014fc:	4b40      	ldr	r3, [pc, #256]	; (8001600 <HAL_UART_MspInit+0x154>)
 80014fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001500:	f003 0301 	and.w	r3, r3, #1
 8001504:	60fb      	str	r3, [r7, #12]
 8001506:	68fb      	ldr	r3, [r7, #12]
 8001508:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800150c:	617b      	str	r3, [r7, #20]
 800150e:	2302      	movs	r3, #2
 8001510:	61bb      	str	r3, [r7, #24]
 8001512:	2300      	movs	r3, #0
 8001514:	61fb      	str	r3, [r7, #28]
 8001516:	2303      	movs	r3, #3
 8001518:	623b      	str	r3, [r7, #32]
 800151a:	2307      	movs	r3, #7
 800151c:	627b      	str	r3, [r7, #36]	; 0x24
 800151e:	f107 0314 	add.w	r3, r7, #20
 8001522:	4619      	mov	r1, r3
 8001524:	4837      	ldr	r0, [pc, #220]	; (8001604 <HAL_UART_MspInit+0x158>)
 8001526:	f000 fe53 	bl	80021d0 <HAL_GPIO_Init>
 800152a:	4b37      	ldr	r3, [pc, #220]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800152c:	4a37      	ldr	r2, [pc, #220]	; (800160c <HAL_UART_MspInit+0x160>)
 800152e:	601a      	str	r2, [r3, #0]
 8001530:	4b35      	ldr	r3, [pc, #212]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001532:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001536:	605a      	str	r2, [r3, #4]
 8001538:	4b33      	ldr	r3, [pc, #204]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800153a:	2240      	movs	r2, #64	; 0x40
 800153c:	609a      	str	r2, [r3, #8]
 800153e:	4b32      	ldr	r3, [pc, #200]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001540:	2200      	movs	r2, #0
 8001542:	60da      	str	r2, [r3, #12]
 8001544:	4b30      	ldr	r3, [pc, #192]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001546:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800154a:	611a      	str	r2, [r3, #16]
 800154c:	4b2e      	ldr	r3, [pc, #184]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800154e:	2200      	movs	r2, #0
 8001550:	615a      	str	r2, [r3, #20]
 8001552:	4b2d      	ldr	r3, [pc, #180]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001554:	2200      	movs	r2, #0
 8001556:	619a      	str	r2, [r3, #24]
 8001558:	4b2b      	ldr	r3, [pc, #172]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800155a:	2200      	movs	r2, #0
 800155c:	61da      	str	r2, [r3, #28]
 800155e:	4b2a      	ldr	r3, [pc, #168]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001560:	2200      	movs	r2, #0
 8001562:	621a      	str	r2, [r3, #32]
 8001564:	4b28      	ldr	r3, [pc, #160]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001566:	2200      	movs	r2, #0
 8001568:	625a      	str	r2, [r3, #36]	; 0x24
 800156a:	4827      	ldr	r0, [pc, #156]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800156c:	f000 fb48 	bl	8001c00 <HAL_DMA_Init>
 8001570:	4603      	mov	r3, r0
 8001572:	2b00      	cmp	r3, #0
 8001574:	d001      	beq.n	800157a <HAL_UART_MspInit+0xce>
 8001576:	f7ff f98d 	bl	8000894 <Error_Handler>
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	4a22      	ldr	r2, [pc, #136]	; (8001608 <HAL_UART_MspInit+0x15c>)
 800157e:	631a      	str	r2, [r3, #48]	; 0x30
 8001580:	4a21      	ldr	r2, [pc, #132]	; (8001608 <HAL_UART_MspInit+0x15c>)
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	6393      	str	r3, [r2, #56]	; 0x38
 8001586:	4b22      	ldr	r3, [pc, #136]	; (8001610 <HAL_UART_MspInit+0x164>)
 8001588:	4a22      	ldr	r2, [pc, #136]	; (8001614 <HAL_UART_MspInit+0x168>)
 800158a:	601a      	str	r2, [r3, #0]
 800158c:	4b20      	ldr	r3, [pc, #128]	; (8001610 <HAL_UART_MspInit+0x164>)
 800158e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001592:	605a      	str	r2, [r3, #4]
 8001594:	4b1e      	ldr	r3, [pc, #120]	; (8001610 <HAL_UART_MspInit+0x164>)
 8001596:	2200      	movs	r2, #0
 8001598:	609a      	str	r2, [r3, #8]
 800159a:	4b1d      	ldr	r3, [pc, #116]	; (8001610 <HAL_UART_MspInit+0x164>)
 800159c:	2200      	movs	r2, #0
 800159e:	60da      	str	r2, [r3, #12]
 80015a0:	4b1b      	ldr	r3, [pc, #108]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015a6:	611a      	str	r2, [r3, #16]
 80015a8:	4b19      	ldr	r3, [pc, #100]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	615a      	str	r2, [r3, #20]
 80015ae:	4b18      	ldr	r3, [pc, #96]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	619a      	str	r2, [r3, #24]
 80015b4:	4b16      	ldr	r3, [pc, #88]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	61da      	str	r2, [r3, #28]
 80015ba:	4b15      	ldr	r3, [pc, #84]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015bc:	2200      	movs	r2, #0
 80015be:	621a      	str	r2, [r3, #32]
 80015c0:	4b13      	ldr	r3, [pc, #76]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	625a      	str	r2, [r3, #36]	; 0x24
 80015c6:	4812      	ldr	r0, [pc, #72]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015c8:	f000 fb1a 	bl	8001c00 <HAL_DMA_Init>
 80015cc:	4603      	mov	r3, r0
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d001      	beq.n	80015d6 <HAL_UART_MspInit+0x12a>
 80015d2:	f7ff f95f 	bl	8000894 <Error_Handler>
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	4a0d      	ldr	r2, [pc, #52]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015da:	635a      	str	r2, [r3, #52]	; 0x34
 80015dc:	4a0c      	ldr	r2, [pc, #48]	; (8001610 <HAL_UART_MspInit+0x164>)
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	6393      	str	r3, [r2, #56]	; 0x38
 80015e2:	2200      	movs	r2, #0
 80015e4:	2100      	movs	r1, #0
 80015e6:	2025      	movs	r0, #37	; 0x25
 80015e8:	f000 fad3 	bl	8001b92 <HAL_NVIC_SetPriority>
 80015ec:	2025      	movs	r0, #37	; 0x25
 80015ee:	f000 faec 	bl	8001bca <HAL_NVIC_EnableIRQ>
 80015f2:	bf00      	nop
 80015f4:	3728      	adds	r7, #40	; 0x28
 80015f6:	46bd      	mov	sp, r7
 80015f8:	bd80      	pop	{r7, pc}
 80015fa:	bf00      	nop
 80015fc:	40011000 	.word	0x40011000
 8001600:	40023800 	.word	0x40023800
 8001604:	40020000 	.word	0x40020000
 8001608:	2000027c 	.word	0x2000027c
 800160c:	400264b8 	.word	0x400264b8
 8001610:	200002dc 	.word	0x200002dc
 8001614:	40026440 	.word	0x40026440

08001618 <minTSDR_start>:
static __inline void minTSDR_start() {
 8001618:	b480      	push	{r7}
 800161a:	af00      	add	r7, sp, #0
	TIM2->CR1 &= 0xFFFE;
 800161c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001620:	681a      	ldr	r2, [r3, #0]
 8001622:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001626:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 800162a:	4013      	ands	r3, r2
 800162c:	600b      	str	r3, [r1, #0]
	TIM2->CNT = 0;
 800162e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001632:	2200      	movs	r2, #0
 8001634:	625a      	str	r2, [r3, #36]	; 0x24
	TIM2->CR1 |= 0x0001;
 8001636:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001640:	f043 0301 	orr.w	r3, r3, #1
 8001644:	6013      	str	r3, [r2, #0]
}
 8001646:	bf00      	nop
 8001648:	46bd      	mov	sp, r7
 800164a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800164e:	4770      	bx	lr

08001650 <WDOG_stop>:
static __inline void WDOG_stop() {
 8001650:	b580      	push	{r7, lr}
 8001652:	af00      	add	r7, sp, #0
	pb_pcb.wdog_trig_callback();
 8001654:	4b02      	ldr	r3, [pc, #8]	; (8001660 <WDOG_stop+0x10>)
 8001656:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800165a:	4798      	blx	r3
}
 800165c:	bf00      	nop
 800165e:	bd80      	pop	{r7, pc}
 8001660:	2000037c 	.word	0x2000037c

08001664 <pb_dp0_pcb_unlock>:
/*
 * 	This function (pb_dp0_pcb_unlock) must be used for other MCUs with next rules:
 * 	You must use this function after complete frame receiving.
 *	You can use IDLE interrupt with frame error and brake detection.
 */
static __inline void pb_dp0_pcb_unlock() {
 8001664:	b580      	push	{r7, lr}
 8001666:	af00      	add	r7, sp, #0

	if( (pb_pcb.req_buf[0] == SD2) && (pb_pcb.req_buf[1] == pb_pcb.req_buf[2]) )  { // SD2 processing
 8001668:	4b3e      	ldr	r3, [pc, #248]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800166a:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800166e:	2b68      	cmp	r3, #104	; 0x68
 8001670:	d13e      	bne.n	80016f0 <pb_dp0_pcb_unlock+0x8c>
 8001672:	4b3c      	ldr	r3, [pc, #240]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001674:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 8001678:	4b3a      	ldr	r3, [pc, #232]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800167a:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 800167e:	429a      	cmp	r2, r3
 8001680:	d136      	bne.n	80016f0 <pb_dp0_pcb_unlock+0x8c>

		if(pb_pcb.req_buf[4] == pb_pcb.addr) { // cycle data exchange
 8001682:	4b38      	ldr	r3, [pc, #224]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001684:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 8001688:	4b36      	ldr	r3, [pc, #216]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800168a:	789b      	ldrb	r3, [r3, #2]
 800168c:	429a      	cmp	r2, r3
 800168e:	d111      	bne.n	80016b4 <pb_dp0_pcb_unlock+0x50>

			max485_tx;
 8001690:	4b35      	ldr	r3, [pc, #212]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 8001692:	699b      	ldr	r3, [r3, #24]
 8001694:	4a34      	ldr	r2, [pc, #208]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 8001696:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800169a:	6193      	str	r3, [r2, #24]

			minTSDR_start();
 800169c:	f7ff ffbc 	bl	8001618 <minTSDR_start>

			pb_pcb.telegram_type = SD2;
 80016a0:	4b30      	ldr	r3, [pc, #192]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016a2:	2268      	movs	r2, #104	; 0x68
 80016a4:	74da      	strb	r2, [r3, #19]
			pb_pcb.access_type = CDXCH;
 80016a6:	4b2f      	ldr	r3, [pc, #188]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016a8:	2201      	movs	r2, #1
 80016aa:	751a      	strb	r2, [r3, #20]
			pb_pcb.frame_available = true;
 80016ac:	4b2d      	ldr	r3, [pc, #180]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016ae:	2201      	movs	r2, #1
 80016b0:	731a      	strb	r2, [r3, #12]
		if(pb_pcb.req_buf[4] == pb_pcb.addr) { // cycle data exchange
 80016b2:	e054      	b.n	800175e <pb_dp0_pcb_unlock+0xfa>

		} else if(pb_pcb.req_buf[4] == pb_pcb.addr + init_addr_mask) { // SAP routing
 80016b4:	4b2b      	ldr	r3, [pc, #172]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016b6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80016ba:	461a      	mov	r2, r3
 80016bc:	4b29      	ldr	r3, [pc, #164]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016be:	789b      	ldrb	r3, [r3, #2]
 80016c0:	3380      	adds	r3, #128	; 0x80
 80016c2:	429a      	cmp	r2, r3
 80016c4:	d111      	bne.n	80016ea <pb_dp0_pcb_unlock+0x86>

			max485_tx;
 80016c6:	4b28      	ldr	r3, [pc, #160]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 80016c8:	699b      	ldr	r3, [r3, #24]
 80016ca:	4a27      	ldr	r2, [pc, #156]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 80016cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80016d0:	6193      	str	r3, [r2, #24]

			minTSDR_start();
 80016d2:	f7ff ffa1 	bl	8001618 <minTSDR_start>

			pb_pcb.telegram_type = SD2;
 80016d6:	4b23      	ldr	r3, [pc, #140]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016d8:	2268      	movs	r2, #104	; 0x68
 80016da:	74da      	strb	r2, [r3, #19]
			pb_pcb.access_type = SAP;
 80016dc:	4b21      	ldr	r3, [pc, #132]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016de:	2200      	movs	r2, #0
 80016e0:	751a      	strb	r2, [r3, #20]
			pb_pcb.frame_available = true;
 80016e2:	4b20      	ldr	r3, [pc, #128]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016e4:	2201      	movs	r2, #1
 80016e6:	731a      	strb	r2, [r3, #12]
		if(pb_pcb.req_buf[4] == pb_pcb.addr) { // cycle data exchange
 80016e8:	e039      	b.n	800175e <pb_dp0_pcb_unlock+0xfa>

		} else { // unknown address

			pb_rx_config();
 80016ea:	f7ff f9c3 	bl	8000a74 <pb_rx_config>
		if(pb_pcb.req_buf[4] == pb_pcb.addr) { // cycle data exchange
 80016ee:	e036      	b.n	800175e <pb_dp0_pcb_unlock+0xfa>

		}

	} else if( (pb_pcb.req_buf[0] == SD1) && (pb_pcb.req_buf[1] == pb_pcb.addr) ) { // SD1 processing
 80016f0:	4b1c      	ldr	r3, [pc, #112]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016f2:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80016f6:	2b10      	cmp	r3, #16
 80016f8:	d12d      	bne.n	8001756 <pb_dp0_pcb_unlock+0xf2>
 80016fa:	4b1a      	ldr	r3, [pc, #104]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 80016fc:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 8001700:	4b18      	ldr	r3, [pc, #96]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001702:	789b      	ldrb	r3, [r3, #2]
 8001704:	429a      	cmp	r2, r3
 8001706:	d126      	bne.n	8001756 <pb_dp0_pcb_unlock+0xf2>

		if( ((pb_pcb.req_buf[3] & FDL) == FDL) && ((pb_pcb.req_buf[3] & SRD_HIGH) != SRD_HIGH) ) { // token processing
 8001708:	4b16      	ldr	r3, [pc, #88]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800170a:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 800170e:	f003 0309 	and.w	r3, r3, #9
 8001712:	2b09      	cmp	r3, #9
 8001714:	d109      	bne.n	800172a <pb_dp0_pcb_unlock+0xc6>
 8001716:	4b13      	ldr	r3, [pc, #76]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001718:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 800171c:	f003 030d 	and.w	r3, r3, #13
 8001720:	2b0d      	cmp	r3, #13
 8001722:	d002      	beq.n	800172a <pb_dp0_pcb_unlock+0xc6>

//				pb_pcb.telegram_type = SD1;
//				pb_pcb.access_type = TOKEN;
//				pb_pcb.frame_available = true;

			pb_rx_config();
 8001724:	f7ff f9a6 	bl	8000a74 <pb_rx_config>
		if( ((pb_pcb.req_buf[3] & FDL) == FDL) && ((pb_pcb.req_buf[3] & SRD_HIGH) != SRD_HIGH) ) { // token processing
 8001728:	e018      	b.n	800175c <pb_dp0_pcb_unlock+0xf8>

		} else if(pb_pcb.sta_ready == true) { // cycle data exchange
 800172a:	4b0e      	ldr	r3, [pc, #56]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800172c:	7b9b      	ldrb	r3, [r3, #14]
 800172e:	2b01      	cmp	r3, #1
 8001730:	d114      	bne.n	800175c <pb_dp0_pcb_unlock+0xf8>

			max485_tx;
 8001732:	4b0d      	ldr	r3, [pc, #52]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 8001734:	699b      	ldr	r3, [r3, #24]
 8001736:	4a0c      	ldr	r2, [pc, #48]	; (8001768 <pb_dp0_pcb_unlock+0x104>)
 8001738:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800173c:	6193      	str	r3, [r2, #24]

			minTSDR_start();
 800173e:	f7ff ff6b 	bl	8001618 <minTSDR_start>

			pb_pcb.telegram_type = SD1;
 8001742:	4b08      	ldr	r3, [pc, #32]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001744:	2210      	movs	r2, #16
 8001746:	74da      	strb	r2, [r3, #19]
			pb_pcb.access_type = CDXCH;
 8001748:	4b06      	ldr	r3, [pc, #24]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 800174a:	2201      	movs	r2, #1
 800174c:	751a      	strb	r2, [r3, #20]
			pb_pcb.frame_available = true;
 800174e:	4b05      	ldr	r3, [pc, #20]	; (8001764 <pb_dp0_pcb_unlock+0x100>)
 8001750:	2201      	movs	r2, #1
 8001752:	731a      	strb	r2, [r3, #12]
		if( ((pb_pcb.req_buf[3] & FDL) == FDL) && ((pb_pcb.req_buf[3] & SRD_HIGH) != SRD_HIGH) ) { // token processing
 8001754:	e002      	b.n	800175c <pb_dp0_pcb_unlock+0xf8>

		}

	} else { // unknown telegram

		pb_rx_config();
 8001756:	f7ff f98d 	bl	8000a74 <pb_rx_config>

	}

}
 800175a:	e000      	b.n	800175e <pb_dp0_pcb_unlock+0xfa>
		if( ((pb_pcb.req_buf[3] & FDL) == FDL) && ((pb_pcb.req_buf[3] & SRD_HIGH) != SRD_HIGH) ) { // token processing
 800175c:	bf00      	nop
}
 800175e:	bf00      	nop
 8001760:	bd80      	pop	{r7, pc}
 8001762:	bf00      	nop
 8001764:	2000037c 	.word	0x2000037c
 8001768:	40020000 	.word	0x40020000

0800176c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800176c:	b480      	push	{r7}
 800176e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001770:	e7fe      	b.n	8001770 <NMI_Handler+0x4>

08001772 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001772:	b480      	push	{r7}
 8001774:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001776:	e7fe      	b.n	8001776 <HardFault_Handler+0x4>

08001778 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001778:	b480      	push	{r7}
 800177a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800177c:	e7fe      	b.n	800177c <MemManage_Handler+0x4>

0800177e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800177e:	b480      	push	{r7}
 8001780:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001782:	e7fe      	b.n	8001782 <BusFault_Handler+0x4>

08001784 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001784:	b480      	push	{r7}
 8001786:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001788:	e7fe      	b.n	8001788 <UsageFault_Handler+0x4>

0800178a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800178a:	b480      	push	{r7}
 800178c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800178e:	bf00      	nop
 8001790:	46bd      	mov	sp, r7
 8001792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001796:	4770      	bx	lr

08001798 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001798:	b480      	push	{r7}
 800179a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800179c:	bf00      	nop
 800179e:	46bd      	mov	sp, r7
 80017a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a4:	4770      	bx	lr

080017a6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80017a6:	b480      	push	{r7}
 80017a8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80017aa:	bf00      	nop
 80017ac:	46bd      	mov	sp, r7
 80017ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017b2:	4770      	bx	lr

080017b4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80017b4:	b580      	push	{r7, lr}
 80017b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80017b8:	f000 f8f0 	bl	800199c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80017bc:	bf00      	nop
 80017be:	bd80      	pop	{r7, pc}

080017c0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */
	if( ((USART1->SR & 0x00000010) == 0x00000010) /* if IDLE */ && ((USART1->SR & 0x00000002) != 0x00000002) /* if !FE */ ) {
 80017c4:	4b0b      	ldr	r3, [pc, #44]	; (80017f4 <USART1_IRQHandler+0x34>)
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	f003 0310 	and.w	r3, r3, #16
 80017cc:	2b10      	cmp	r3, #16
 80017ce:	d107      	bne.n	80017e0 <USART1_IRQHandler+0x20>
 80017d0:	4b08      	ldr	r3, [pc, #32]	; (80017f4 <USART1_IRQHandler+0x34>)
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	f003 0302 	and.w	r3, r3, #2
 80017d8:	2b02      	cmp	r3, #2
 80017da:	d001      	beq.n	80017e0 <USART1_IRQHandler+0x20>

		pb_dp0_pcb_unlock();
 80017dc:	f7ff ff42 	bl	8001664 <pb_dp0_pcb_unlock>

	}
  /* USER CODE END USART1_IRQn 0 */
  //HAL_UART_IRQHandler(&huart1);
  /* USER CODE BEGIN USART1_IRQn 1 */
	tmp = USART1->DR;
 80017e0:	4b04      	ldr	r3, [pc, #16]	; (80017f4 <USART1_IRQHandler+0x34>)
 80017e2:	685b      	ldr	r3, [r3, #4]
 80017e4:	b2da      	uxtb	r2, r3
 80017e6:	4b04      	ldr	r3, [pc, #16]	; (80017f8 <USART1_IRQHandler+0x38>)
 80017e8:	701a      	strb	r2, [r3, #0]
	USART1->SR = 0;
 80017ea:	4b02      	ldr	r3, [pc, #8]	; (80017f4 <USART1_IRQHandler+0x34>)
 80017ec:	2200      	movs	r2, #0
 80017ee:	601a      	str	r2, [r3, #0]
  /* USER CODE END USART1_IRQn 1 */
}
 80017f0:	bf00      	nop
 80017f2:	bd80      	pop	{r7, pc}
 80017f4:	40011000 	.word	0x40011000
 80017f8:	20000228 	.word	0x20000228

080017fc <TIM5_IRQHandler>:

/**
  * @brief This function handles TIM5 global interrupt.
  */
void TIM5_IRQHandler(void)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM5_IRQn 0 */
	if( (TIM5->SR & 0x0001) == 0x0001) {
 8001800:	4b06      	ldr	r3, [pc, #24]	; (800181c <TIM5_IRQHandler+0x20>)
 8001802:	691b      	ldr	r3, [r3, #16]
 8001804:	f003 0301 	and.w	r3, r3, #1
 8001808:	2b01      	cmp	r3, #1
 800180a:	d101      	bne.n	8001810 <TIM5_IRQHandler+0x14>

		WDOG_stop();
 800180c:	f7ff ff20 	bl	8001650 <WDOG_stop>

	}
  /* USER CODE END TIM5_IRQn 0 */
  //HAL_TIM_IRQHandler(&htim5);
  /* USER CODE BEGIN TIM5_IRQn 1 */
	TIM5->SR = 0;
 8001810:	4b02      	ldr	r3, [pc, #8]	; (800181c <TIM5_IRQHandler+0x20>)
 8001812:	2200      	movs	r2, #0
 8001814:	611a      	str	r2, [r3, #16]
  /* USER CODE END TIM5_IRQn 1 */
}
 8001816:	bf00      	nop
 8001818:	bd80      	pop	{r7, pc}
 800181a:	bf00      	nop
 800181c:	40000c00 	.word	0x40000c00

08001820 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001820:	b580      	push	{r7, lr}
 8001822:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8001824:	4802      	ldr	r0, [pc, #8]	; (8001830 <DMA2_Stream2_IRQHandler+0x10>)
 8001826:	f000 fa99 	bl	8001d5c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 800182a:	bf00      	nop
 800182c:	bd80      	pop	{r7, pc}
 800182e:	bf00      	nop
 8001830:	200002dc 	.word	0x200002dc

08001834 <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

	if( (DMA2->HISR & 0x08000000) == 0x08000000) { // if TCIF7
 8001838:	4b0d      	ldr	r3, [pc, #52]	; (8001870 <DMA2_Stream7_IRQHandler+0x3c>)
 800183a:	685b      	ldr	r3, [r3, #4]
 800183c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8001840:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8001844:	d102      	bne.n	800184c <DMA2_Stream7_IRQHandler+0x18>

		pb_pcb.req_rx = true;
 8001846:	4b0b      	ldr	r3, [pc, #44]	; (8001874 <DMA2_Stream7_IRQHandler+0x40>)
 8001848:	2201      	movs	r2, #1
 800184a:	735a      	strb	r2, [r3, #13]
	}

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  //HAL_DMA_IRQHandler(&hdma_usart1_tx);
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
	DMA2->HIFCR |= 0xFFFFFFFF;
 800184c:	4b08      	ldr	r3, [pc, #32]	; (8001870 <DMA2_Stream7_IRQHandler+0x3c>)
 800184e:	68db      	ldr	r3, [r3, #12]
 8001850:	4b07      	ldr	r3, [pc, #28]	; (8001870 <DMA2_Stream7_IRQHandler+0x3c>)
 8001852:	f04f 32ff 	mov.w	r2, #4294967295
 8001856:	60da      	str	r2, [r3, #12]
	DMA2->LIFCR |= 0xFFFFFFFF;
 8001858:	4b05      	ldr	r3, [pc, #20]	; (8001870 <DMA2_Stream7_IRQHandler+0x3c>)
 800185a:	689b      	ldr	r3, [r3, #8]
 800185c:	4b04      	ldr	r3, [pc, #16]	; (8001870 <DMA2_Stream7_IRQHandler+0x3c>)
 800185e:	f04f 32ff 	mov.w	r2, #4294967295
 8001862:	609a      	str	r2, [r3, #8]
  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 8001864:	bf00      	nop
 8001866:	46bd      	mov	sp, r7
 8001868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800186c:	4770      	bx	lr
 800186e:	bf00      	nop
 8001870:	40026400 	.word	0x40026400
 8001874:	2000037c 	.word	0x2000037c

08001878 <SystemInit>:
 8001878:	b480      	push	{r7}
 800187a:	af00      	add	r7, sp, #0
 800187c:	4b08      	ldr	r3, [pc, #32]	; (80018a0 <SystemInit+0x28>)
 800187e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001882:	4a07      	ldr	r2, [pc, #28]	; (80018a0 <SystemInit+0x28>)
 8001884:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001888:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800188c:	4b04      	ldr	r3, [pc, #16]	; (80018a0 <SystemInit+0x28>)
 800188e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001892:	609a      	str	r2, [r3, #8]
 8001894:	bf00      	nop
 8001896:	46bd      	mov	sp, r7
 8001898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop
 80018a0:	e000ed00 	.word	0xe000ed00

080018a4 <Reset_Handler>:
 80018a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80018dc <LoopFillZerobss+0x14>
 80018a8:	2100      	movs	r1, #0
 80018aa:	e003      	b.n	80018b4 <LoopCopyDataInit>

080018ac <CopyDataInit>:
 80018ac:	4b0c      	ldr	r3, [pc, #48]	; (80018e0 <LoopFillZerobss+0x18>)
 80018ae:	585b      	ldr	r3, [r3, r1]
 80018b0:	5043      	str	r3, [r0, r1]
 80018b2:	3104      	adds	r1, #4

080018b4 <LoopCopyDataInit>:
 80018b4:	480b      	ldr	r0, [pc, #44]	; (80018e4 <LoopFillZerobss+0x1c>)
 80018b6:	4b0c      	ldr	r3, [pc, #48]	; (80018e8 <LoopFillZerobss+0x20>)
 80018b8:	1842      	adds	r2, r0, r1
 80018ba:	429a      	cmp	r2, r3
 80018bc:	d3f6      	bcc.n	80018ac <CopyDataInit>
 80018be:	4a0b      	ldr	r2, [pc, #44]	; (80018ec <LoopFillZerobss+0x24>)
 80018c0:	e002      	b.n	80018c8 <LoopFillZerobss>

080018c2 <FillZerobss>:
 80018c2:	2300      	movs	r3, #0
 80018c4:	f842 3b04 	str.w	r3, [r2], #4

080018c8 <LoopFillZerobss>:
 80018c8:	4b09      	ldr	r3, [pc, #36]	; (80018f0 <LoopFillZerobss+0x28>)
 80018ca:	429a      	cmp	r2, r3
 80018cc:	d3f9      	bcc.n	80018c2 <FillZerobss>
 80018ce:	f7ff ffd3 	bl	8001878 <SystemInit>
 80018d2:	f002 f93b 	bl	8003b4c <__libc_init_array>
 80018d6:	f7fe fdf7 	bl	80004c8 <main>
 80018da:	4770      	bx	lr
 80018dc:	20020000 	.word	0x20020000
 80018e0:	08003c04 	.word	0x08003c04
 80018e4:	20000000 	.word	0x20000000
 80018e8:	2000000c 	.word	0x2000000c
 80018ec:	2000000c 	.word	0x2000000c
 80018f0:	20000608 	.word	0x20000608

080018f4 <ADC_IRQHandler>:
 80018f4:	e7fe      	b.n	80018f4 <ADC_IRQHandler>
	...

080018f8 <HAL_Init>:
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	4b0e      	ldr	r3, [pc, #56]	; (8001938 <HAL_Init+0x40>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4a0d      	ldr	r2, [pc, #52]	; (8001938 <HAL_Init+0x40>)
 8001902:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001906:	6013      	str	r3, [r2, #0]
 8001908:	4b0b      	ldr	r3, [pc, #44]	; (8001938 <HAL_Init+0x40>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4a0a      	ldr	r2, [pc, #40]	; (8001938 <HAL_Init+0x40>)
 800190e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001912:	6013      	str	r3, [r2, #0]
 8001914:	4b08      	ldr	r3, [pc, #32]	; (8001938 <HAL_Init+0x40>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	4a07      	ldr	r2, [pc, #28]	; (8001938 <HAL_Init+0x40>)
 800191a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800191e:	6013      	str	r3, [r2, #0]
 8001920:	2003      	movs	r0, #3
 8001922:	f000 f92b 	bl	8001b7c <HAL_NVIC_SetPriorityGrouping>
 8001926:	2000      	movs	r0, #0
 8001928:	f000 f808 	bl	800193c <HAL_InitTick>
 800192c:	f7ff fd5a 	bl	80013e4 <HAL_MspInit>
 8001930:	2300      	movs	r3, #0
 8001932:	4618      	mov	r0, r3
 8001934:	bd80      	pop	{r7, pc}
 8001936:	bf00      	nop
 8001938:	40023c00 	.word	0x40023c00

0800193c <HAL_InitTick>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b082      	sub	sp, #8
 8001940:	af00      	add	r7, sp, #0
 8001942:	6078      	str	r0, [r7, #4]
 8001944:	4b12      	ldr	r3, [pc, #72]	; (8001990 <HAL_InitTick+0x54>)
 8001946:	681a      	ldr	r2, [r3, #0]
 8001948:	4b12      	ldr	r3, [pc, #72]	; (8001994 <HAL_InitTick+0x58>)
 800194a:	781b      	ldrb	r3, [r3, #0]
 800194c:	4619      	mov	r1, r3
 800194e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001952:	fbb3 f3f1 	udiv	r3, r3, r1
 8001956:	fbb2 f3f3 	udiv	r3, r2, r3
 800195a:	4618      	mov	r0, r3
 800195c:	f000 f943 	bl	8001be6 <HAL_SYSTICK_Config>
 8001960:	4603      	mov	r3, r0
 8001962:	2b00      	cmp	r3, #0
 8001964:	d001      	beq.n	800196a <HAL_InitTick+0x2e>
 8001966:	2301      	movs	r3, #1
 8001968:	e00e      	b.n	8001988 <HAL_InitTick+0x4c>
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	2b0f      	cmp	r3, #15
 800196e:	d80a      	bhi.n	8001986 <HAL_InitTick+0x4a>
 8001970:	2200      	movs	r2, #0
 8001972:	6879      	ldr	r1, [r7, #4]
 8001974:	f04f 30ff 	mov.w	r0, #4294967295
 8001978:	f000 f90b 	bl	8001b92 <HAL_NVIC_SetPriority>
 800197c:	4a06      	ldr	r2, [pc, #24]	; (8001998 <HAL_InitTick+0x5c>)
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	6013      	str	r3, [r2, #0]
 8001982:	2300      	movs	r3, #0
 8001984:	e000      	b.n	8001988 <HAL_InitTick+0x4c>
 8001986:	2301      	movs	r3, #1
 8001988:	4618      	mov	r0, r3
 800198a:	3708      	adds	r7, #8
 800198c:	46bd      	mov	sp, r7
 800198e:	bd80      	pop	{r7, pc}
 8001990:	20000000 	.word	0x20000000
 8001994:	20000008 	.word	0x20000008
 8001998:	20000004 	.word	0x20000004

0800199c <HAL_IncTick>:
 800199c:	b480      	push	{r7}
 800199e:	af00      	add	r7, sp, #0
 80019a0:	4b06      	ldr	r3, [pc, #24]	; (80019bc <HAL_IncTick+0x20>)
 80019a2:	781b      	ldrb	r3, [r3, #0]
 80019a4:	461a      	mov	r2, r3
 80019a6:	4b06      	ldr	r3, [pc, #24]	; (80019c0 <HAL_IncTick+0x24>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	4413      	add	r3, r2
 80019ac:	4a04      	ldr	r2, [pc, #16]	; (80019c0 <HAL_IncTick+0x24>)
 80019ae:	6013      	str	r3, [r2, #0]
 80019b0:	bf00      	nop
 80019b2:	46bd      	mov	sp, r7
 80019b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b8:	4770      	bx	lr
 80019ba:	bf00      	nop
 80019bc:	20000008 	.word	0x20000008
 80019c0:	20000604 	.word	0x20000604

080019c4 <HAL_GetTick>:
 80019c4:	b480      	push	{r7}
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <HAL_GetTick+0x14>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	4618      	mov	r0, r3
 80019ce:	46bd      	mov	sp, r7
 80019d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	20000604 	.word	0x20000604

080019dc <__NVIC_SetPriorityGrouping>:
 80019dc:	b480      	push	{r7}
 80019de:	b085      	sub	sp, #20
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	f003 0307 	and.w	r3, r3, #7
 80019ea:	60fb      	str	r3, [r7, #12]
 80019ec:	4b0c      	ldr	r3, [pc, #48]	; (8001a20 <__NVIC_SetPriorityGrouping+0x44>)
 80019ee:	68db      	ldr	r3, [r3, #12]
 80019f0:	60bb      	str	r3, [r7, #8]
 80019f2:	68ba      	ldr	r2, [r7, #8]
 80019f4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80019f8:	4013      	ands	r3, r2
 80019fa:	60bb      	str	r3, [r7, #8]
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	021a      	lsls	r2, r3, #8
 8001a00:	68bb      	ldr	r3, [r7, #8]
 8001a02:	4313      	orrs	r3, r2
 8001a04:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001a08:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a0c:	60bb      	str	r3, [r7, #8]
 8001a0e:	4a04      	ldr	r2, [pc, #16]	; (8001a20 <__NVIC_SetPriorityGrouping+0x44>)
 8001a10:	68bb      	ldr	r3, [r7, #8]
 8001a12:	60d3      	str	r3, [r2, #12]
 8001a14:	bf00      	nop
 8001a16:	3714      	adds	r7, #20
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a1e:	4770      	bx	lr
 8001a20:	e000ed00 	.word	0xe000ed00

08001a24 <__NVIC_GetPriorityGrouping>:
 8001a24:	b480      	push	{r7}
 8001a26:	af00      	add	r7, sp, #0
 8001a28:	4b04      	ldr	r3, [pc, #16]	; (8001a3c <__NVIC_GetPriorityGrouping+0x18>)
 8001a2a:	68db      	ldr	r3, [r3, #12]
 8001a2c:	0a1b      	lsrs	r3, r3, #8
 8001a2e:	f003 0307 	and.w	r3, r3, #7
 8001a32:	4618      	mov	r0, r3
 8001a34:	46bd      	mov	sp, r7
 8001a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3a:	4770      	bx	lr
 8001a3c:	e000ed00 	.word	0xe000ed00

08001a40 <__NVIC_EnableIRQ>:
 8001a40:	b480      	push	{r7}
 8001a42:	b083      	sub	sp, #12
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	4603      	mov	r3, r0
 8001a48:	71fb      	strb	r3, [r7, #7]
 8001a4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	db0b      	blt.n	8001a6a <__NVIC_EnableIRQ+0x2a>
 8001a52:	79fb      	ldrb	r3, [r7, #7]
 8001a54:	f003 021f 	and.w	r2, r3, #31
 8001a58:	4907      	ldr	r1, [pc, #28]	; (8001a78 <__NVIC_EnableIRQ+0x38>)
 8001a5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a5e:	095b      	lsrs	r3, r3, #5
 8001a60:	2001      	movs	r0, #1
 8001a62:	fa00 f202 	lsl.w	r2, r0, r2
 8001a66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a6a:	bf00      	nop
 8001a6c:	370c      	adds	r7, #12
 8001a6e:	46bd      	mov	sp, r7
 8001a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a74:	4770      	bx	lr
 8001a76:	bf00      	nop
 8001a78:	e000e100 	.word	0xe000e100

08001a7c <__NVIC_SetPriority>:
 8001a7c:	b480      	push	{r7}
 8001a7e:	b083      	sub	sp, #12
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	4603      	mov	r3, r0
 8001a84:	6039      	str	r1, [r7, #0]
 8001a86:	71fb      	strb	r3, [r7, #7]
 8001a88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	db0a      	blt.n	8001aa6 <__NVIC_SetPriority+0x2a>
 8001a90:	683b      	ldr	r3, [r7, #0]
 8001a92:	b2da      	uxtb	r2, r3
 8001a94:	490c      	ldr	r1, [pc, #48]	; (8001ac8 <__NVIC_SetPriority+0x4c>)
 8001a96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a9a:	0112      	lsls	r2, r2, #4
 8001a9c:	b2d2      	uxtb	r2, r2
 8001a9e:	440b      	add	r3, r1
 8001aa0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001aa4:	e00a      	b.n	8001abc <__NVIC_SetPriority+0x40>
 8001aa6:	683b      	ldr	r3, [r7, #0]
 8001aa8:	b2da      	uxtb	r2, r3
 8001aaa:	4908      	ldr	r1, [pc, #32]	; (8001acc <__NVIC_SetPriority+0x50>)
 8001aac:	79fb      	ldrb	r3, [r7, #7]
 8001aae:	f003 030f 	and.w	r3, r3, #15
 8001ab2:	3b04      	subs	r3, #4
 8001ab4:	0112      	lsls	r2, r2, #4
 8001ab6:	b2d2      	uxtb	r2, r2
 8001ab8:	440b      	add	r3, r1
 8001aba:	761a      	strb	r2, [r3, #24]
 8001abc:	bf00      	nop
 8001abe:	370c      	adds	r7, #12
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac6:	4770      	bx	lr
 8001ac8:	e000e100 	.word	0xe000e100
 8001acc:	e000ed00 	.word	0xe000ed00

08001ad0 <NVIC_EncodePriority>:
 8001ad0:	b480      	push	{r7}
 8001ad2:	b089      	sub	sp, #36	; 0x24
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	60f8      	str	r0, [r7, #12]
 8001ad8:	60b9      	str	r1, [r7, #8]
 8001ada:	607a      	str	r2, [r7, #4]
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	f003 0307 	and.w	r3, r3, #7
 8001ae2:	61fb      	str	r3, [r7, #28]
 8001ae4:	69fb      	ldr	r3, [r7, #28]
 8001ae6:	f1c3 0307 	rsb	r3, r3, #7
 8001aea:	2b04      	cmp	r3, #4
 8001aec:	bf28      	it	cs
 8001aee:	2304      	movcs	r3, #4
 8001af0:	61bb      	str	r3, [r7, #24]
 8001af2:	69fb      	ldr	r3, [r7, #28]
 8001af4:	3304      	adds	r3, #4
 8001af6:	2b06      	cmp	r3, #6
 8001af8:	d902      	bls.n	8001b00 <NVIC_EncodePriority+0x30>
 8001afa:	69fb      	ldr	r3, [r7, #28]
 8001afc:	3b03      	subs	r3, #3
 8001afe:	e000      	b.n	8001b02 <NVIC_EncodePriority+0x32>
 8001b00:	2300      	movs	r3, #0
 8001b02:	617b      	str	r3, [r7, #20]
 8001b04:	f04f 32ff 	mov.w	r2, #4294967295
 8001b08:	69bb      	ldr	r3, [r7, #24]
 8001b0a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b0e:	43da      	mvns	r2, r3
 8001b10:	68bb      	ldr	r3, [r7, #8]
 8001b12:	401a      	ands	r2, r3
 8001b14:	697b      	ldr	r3, [r7, #20]
 8001b16:	409a      	lsls	r2, r3
 8001b18:	f04f 31ff 	mov.w	r1, #4294967295
 8001b1c:	697b      	ldr	r3, [r7, #20]
 8001b1e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b22:	43d9      	mvns	r1, r3
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	400b      	ands	r3, r1
 8001b28:	4313      	orrs	r3, r2
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	3724      	adds	r7, #36	; 0x24
 8001b2e:	46bd      	mov	sp, r7
 8001b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b34:	4770      	bx	lr
	...

08001b38 <SysTick_Config>:
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	b082      	sub	sp, #8
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	6078      	str	r0, [r7, #4]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	3b01      	subs	r3, #1
 8001b44:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001b48:	d301      	bcc.n	8001b4e <SysTick_Config+0x16>
 8001b4a:	2301      	movs	r3, #1
 8001b4c:	e00f      	b.n	8001b6e <SysTick_Config+0x36>
 8001b4e:	4a0a      	ldr	r2, [pc, #40]	; (8001b78 <SysTick_Config+0x40>)
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	3b01      	subs	r3, #1
 8001b54:	6053      	str	r3, [r2, #4]
 8001b56:	210f      	movs	r1, #15
 8001b58:	f04f 30ff 	mov.w	r0, #4294967295
 8001b5c:	f7ff ff8e 	bl	8001a7c <__NVIC_SetPriority>
 8001b60:	4b05      	ldr	r3, [pc, #20]	; (8001b78 <SysTick_Config+0x40>)
 8001b62:	2200      	movs	r2, #0
 8001b64:	609a      	str	r2, [r3, #8]
 8001b66:	4b04      	ldr	r3, [pc, #16]	; (8001b78 <SysTick_Config+0x40>)
 8001b68:	2207      	movs	r2, #7
 8001b6a:	601a      	str	r2, [r3, #0]
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	4618      	mov	r0, r3
 8001b70:	3708      	adds	r7, #8
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bd80      	pop	{r7, pc}
 8001b76:	bf00      	nop
 8001b78:	e000e010 	.word	0xe000e010

08001b7c <HAL_NVIC_SetPriorityGrouping>:
 8001b7c:	b580      	push	{r7, lr}
 8001b7e:	b082      	sub	sp, #8
 8001b80:	af00      	add	r7, sp, #0
 8001b82:	6078      	str	r0, [r7, #4]
 8001b84:	6878      	ldr	r0, [r7, #4]
 8001b86:	f7ff ff29 	bl	80019dc <__NVIC_SetPriorityGrouping>
 8001b8a:	bf00      	nop
 8001b8c:	3708      	adds	r7, #8
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}

08001b92 <HAL_NVIC_SetPriority>:
 8001b92:	b580      	push	{r7, lr}
 8001b94:	b086      	sub	sp, #24
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	4603      	mov	r3, r0
 8001b9a:	60b9      	str	r1, [r7, #8]
 8001b9c:	607a      	str	r2, [r7, #4]
 8001b9e:	73fb      	strb	r3, [r7, #15]
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	617b      	str	r3, [r7, #20]
 8001ba4:	f7ff ff3e 	bl	8001a24 <__NVIC_GetPriorityGrouping>
 8001ba8:	6178      	str	r0, [r7, #20]
 8001baa:	687a      	ldr	r2, [r7, #4]
 8001bac:	68b9      	ldr	r1, [r7, #8]
 8001bae:	6978      	ldr	r0, [r7, #20]
 8001bb0:	f7ff ff8e 	bl	8001ad0 <NVIC_EncodePriority>
 8001bb4:	4602      	mov	r2, r0
 8001bb6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bba:	4611      	mov	r1, r2
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	f7ff ff5d 	bl	8001a7c <__NVIC_SetPriority>
 8001bc2:	bf00      	nop
 8001bc4:	3718      	adds	r7, #24
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	bd80      	pop	{r7, pc}

08001bca <HAL_NVIC_EnableIRQ>:
 8001bca:	b580      	push	{r7, lr}
 8001bcc:	b082      	sub	sp, #8
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	4603      	mov	r3, r0
 8001bd2:	71fb      	strb	r3, [r7, #7]
 8001bd4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bd8:	4618      	mov	r0, r3
 8001bda:	f7ff ff31 	bl	8001a40 <__NVIC_EnableIRQ>
 8001bde:	bf00      	nop
 8001be0:	3708      	adds	r7, #8
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bd80      	pop	{r7, pc}

08001be6 <HAL_SYSTICK_Config>:
 8001be6:	b580      	push	{r7, lr}
 8001be8:	b082      	sub	sp, #8
 8001bea:	af00      	add	r7, sp, #0
 8001bec:	6078      	str	r0, [r7, #4]
 8001bee:	6878      	ldr	r0, [r7, #4]
 8001bf0:	f7ff ffa2 	bl	8001b38 <SysTick_Config>
 8001bf4:	4603      	mov	r3, r0
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	3708      	adds	r7, #8
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	bd80      	pop	{r7, pc}
	...

08001c00 <HAL_DMA_Init>:
 8001c00:	b580      	push	{r7, lr}
 8001c02:	b086      	sub	sp, #24
 8001c04:	af00      	add	r7, sp, #0
 8001c06:	6078      	str	r0, [r7, #4]
 8001c08:	2300      	movs	r3, #0
 8001c0a:	617b      	str	r3, [r7, #20]
 8001c0c:	f7ff feda 	bl	80019c4 <HAL_GetTick>
 8001c10:	6138      	str	r0, [r7, #16]
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d101      	bne.n	8001c1c <HAL_DMA_Init+0x1c>
 8001c18:	2301      	movs	r3, #1
 8001c1a:	e099      	b.n	8001d50 <HAL_DMA_Init+0x150>
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	2200      	movs	r2, #0
 8001c20:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	2202      	movs	r2, #2
 8001c28:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	681a      	ldr	r2, [r3, #0]
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	f022 0201 	bic.w	r2, r2, #1
 8001c3a:	601a      	str	r2, [r3, #0]
 8001c3c:	e00f      	b.n	8001c5e <HAL_DMA_Init+0x5e>
 8001c3e:	f7ff fec1 	bl	80019c4 <HAL_GetTick>
 8001c42:	4602      	mov	r2, r0
 8001c44:	693b      	ldr	r3, [r7, #16]
 8001c46:	1ad3      	subs	r3, r2, r3
 8001c48:	2b05      	cmp	r3, #5
 8001c4a:	d908      	bls.n	8001c5e <HAL_DMA_Init+0x5e>
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	2220      	movs	r2, #32
 8001c50:	655a      	str	r2, [r3, #84]	; 0x54
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	2203      	movs	r2, #3
 8001c56:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001c5a:	2303      	movs	r3, #3
 8001c5c:	e078      	b.n	8001d50 <HAL_DMA_Init+0x150>
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	f003 0301 	and.w	r3, r3, #1
 8001c68:	2b00      	cmp	r3, #0
 8001c6a:	d1e8      	bne.n	8001c3e <HAL_DMA_Init+0x3e>
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	617b      	str	r3, [r7, #20]
 8001c74:	697a      	ldr	r2, [r7, #20]
 8001c76:	4b38      	ldr	r3, [pc, #224]	; (8001d58 <HAL_DMA_Init+0x158>)
 8001c78:	4013      	ands	r3, r2
 8001c7a:	617b      	str	r3, [r7, #20]
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	685a      	ldr	r2, [r3, #4]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	689b      	ldr	r3, [r3, #8]
 8001c84:	431a      	orrs	r2, r3
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	68db      	ldr	r3, [r3, #12]
 8001c8a:	431a      	orrs	r2, r3
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	691b      	ldr	r3, [r3, #16]
 8001c90:	431a      	orrs	r2, r3
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	695b      	ldr	r3, [r3, #20]
 8001c96:	431a      	orrs	r2, r3
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	699b      	ldr	r3, [r3, #24]
 8001c9c:	431a      	orrs	r2, r3
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	69db      	ldr	r3, [r3, #28]
 8001ca2:	431a      	orrs	r2, r3
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	6a1b      	ldr	r3, [r3, #32]
 8001ca8:	4313      	orrs	r3, r2
 8001caa:	697a      	ldr	r2, [r7, #20]
 8001cac:	4313      	orrs	r3, r2
 8001cae:	617b      	str	r3, [r7, #20]
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cb4:	2b04      	cmp	r3, #4
 8001cb6:	d107      	bne.n	8001cc8 <HAL_DMA_Init+0xc8>
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cc0:	4313      	orrs	r3, r2
 8001cc2:	697a      	ldr	r2, [r7, #20]
 8001cc4:	4313      	orrs	r3, r2
 8001cc6:	617b      	str	r3, [r7, #20]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	697a      	ldr	r2, [r7, #20]
 8001cce:	601a      	str	r2, [r3, #0]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	695b      	ldr	r3, [r3, #20]
 8001cd6:	617b      	str	r3, [r7, #20]
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	f023 0307 	bic.w	r3, r3, #7
 8001cde:	617b      	str	r3, [r7, #20]
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ce4:	697a      	ldr	r2, [r7, #20]
 8001ce6:	4313      	orrs	r3, r2
 8001ce8:	617b      	str	r3, [r7, #20]
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cee:	2b04      	cmp	r3, #4
 8001cf0:	d117      	bne.n	8001d22 <HAL_DMA_Init+0x122>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001cf6:	697a      	ldr	r2, [r7, #20]
 8001cf8:	4313      	orrs	r3, r2
 8001cfa:	617b      	str	r3, [r7, #20]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d00e      	beq.n	8001d22 <HAL_DMA_Init+0x122>
 8001d04:	6878      	ldr	r0, [r7, #4]
 8001d06:	f000 f9e9 	bl	80020dc <DMA_CheckFifoParam>
 8001d0a:	4603      	mov	r3, r0
 8001d0c:	2b00      	cmp	r3, #0
 8001d0e:	d008      	beq.n	8001d22 <HAL_DMA_Init+0x122>
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	2240      	movs	r2, #64	; 0x40
 8001d14:	655a      	str	r2, [r3, #84]	; 0x54
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	2201      	movs	r2, #1
 8001d1a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001d1e:	2301      	movs	r3, #1
 8001d20:	e016      	b.n	8001d50 <HAL_DMA_Init+0x150>
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	697a      	ldr	r2, [r7, #20]
 8001d28:	615a      	str	r2, [r3, #20]
 8001d2a:	6878      	ldr	r0, [r7, #4]
 8001d2c:	f000 f9a0 	bl	8002070 <DMA_CalcBaseAndBitshift>
 8001d30:	4603      	mov	r3, r0
 8001d32:	60fb      	str	r3, [r7, #12]
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001d38:	223f      	movs	r2, #63	; 0x3f
 8001d3a:	409a      	lsls	r2, r3
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	609a      	str	r2, [r3, #8]
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	2200      	movs	r2, #0
 8001d44:	655a      	str	r2, [r3, #84]	; 0x54
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	2201      	movs	r2, #1
 8001d4a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001d4e:	2300      	movs	r3, #0
 8001d50:	4618      	mov	r0, r3
 8001d52:	3718      	adds	r7, #24
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	f010803f 	.word	0xf010803f

08001d5c <HAL_DMA_IRQHandler>:
 8001d5c:	b580      	push	{r7, lr}
 8001d5e:	b086      	sub	sp, #24
 8001d60:	af00      	add	r7, sp, #0
 8001d62:	6078      	str	r0, [r7, #4]
 8001d64:	2300      	movs	r3, #0
 8001d66:	60bb      	str	r3, [r7, #8]
 8001d68:	4b92      	ldr	r3, [pc, #584]	; (8001fb4 <HAL_DMA_IRQHandler+0x258>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	4a92      	ldr	r2, [pc, #584]	; (8001fb8 <HAL_DMA_IRQHandler+0x25c>)
 8001d6e:	fba2 2303 	umull	r2, r3, r2, r3
 8001d72:	0a9b      	lsrs	r3, r3, #10
 8001d74:	617b      	str	r3, [r7, #20]
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001d7a:	613b      	str	r3, [r7, #16]
 8001d7c:	693b      	ldr	r3, [r7, #16]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	60fb      	str	r3, [r7, #12]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001d86:	2208      	movs	r2, #8
 8001d88:	409a      	lsls	r2, r3
 8001d8a:	68fb      	ldr	r3, [r7, #12]
 8001d8c:	4013      	ands	r3, r2
 8001d8e:	2b00      	cmp	r3, #0
 8001d90:	d01a      	beq.n	8001dc8 <HAL_DMA_IRQHandler+0x6c>
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	f003 0304 	and.w	r3, r3, #4
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d013      	beq.n	8001dc8 <HAL_DMA_IRQHandler+0x6c>
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	681a      	ldr	r2, [r3, #0]
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	f022 0204 	bic.w	r2, r2, #4
 8001dae:	601a      	str	r2, [r3, #0]
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001db4:	2208      	movs	r2, #8
 8001db6:	409a      	lsls	r2, r3
 8001db8:	693b      	ldr	r3, [r7, #16]
 8001dba:	609a      	str	r2, [r3, #8]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001dc0:	f043 0201 	orr.w	r2, r3, #1
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	655a      	str	r2, [r3, #84]	; 0x54
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001dcc:	2201      	movs	r2, #1
 8001dce:	409a      	lsls	r2, r3
 8001dd0:	68fb      	ldr	r3, [r7, #12]
 8001dd2:	4013      	ands	r3, r2
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d012      	beq.n	8001dfe <HAL_DMA_IRQHandler+0xa2>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	695b      	ldr	r3, [r3, #20]
 8001dde:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d00b      	beq.n	8001dfe <HAL_DMA_IRQHandler+0xa2>
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001dea:	2201      	movs	r2, #1
 8001dec:	409a      	lsls	r2, r3
 8001dee:	693b      	ldr	r3, [r7, #16]
 8001df0:	609a      	str	r2, [r3, #8]
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001df6:	f043 0202 	orr.w	r2, r3, #2
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	655a      	str	r2, [r3, #84]	; 0x54
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001e02:	2204      	movs	r2, #4
 8001e04:	409a      	lsls	r2, r3
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	4013      	ands	r3, r2
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d012      	beq.n	8001e34 <HAL_DMA_IRQHandler+0xd8>
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	f003 0302 	and.w	r3, r3, #2
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d00b      	beq.n	8001e34 <HAL_DMA_IRQHandler+0xd8>
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001e20:	2204      	movs	r2, #4
 8001e22:	409a      	lsls	r2, r3
 8001e24:	693b      	ldr	r3, [r7, #16]
 8001e26:	609a      	str	r2, [r3, #8]
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001e2c:	f043 0204 	orr.w	r2, r3, #4
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	655a      	str	r2, [r3, #84]	; 0x54
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001e38:	2210      	movs	r2, #16
 8001e3a:	409a      	lsls	r2, r3
 8001e3c:	68fb      	ldr	r3, [r7, #12]
 8001e3e:	4013      	ands	r3, r2
 8001e40:	2b00      	cmp	r3, #0
 8001e42:	d043      	beq.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	f003 0308 	and.w	r3, r3, #8
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	d03c      	beq.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001e56:	2210      	movs	r2, #16
 8001e58:	409a      	lsls	r2, r3
 8001e5a:	693b      	ldr	r3, [r7, #16]
 8001e5c:	609a      	str	r2, [r3, #8]
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d018      	beq.n	8001e9e <HAL_DMA_IRQHandler+0x142>
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d108      	bne.n	8001e8c <HAL_DMA_IRQHandler+0x130>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d024      	beq.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e86:	6878      	ldr	r0, [r7, #4]
 8001e88:	4798      	blx	r3
 8001e8a:	e01f      	b.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d01b      	beq.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001e98:	6878      	ldr	r0, [r7, #4]
 8001e9a:	4798      	blx	r3
 8001e9c:	e016      	b.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d107      	bne.n	8001ebc <HAL_DMA_IRQHandler+0x160>
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	681a      	ldr	r2, [r3, #0]
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	f022 0208 	bic.w	r2, r2, #8
 8001eba:	601a      	str	r2, [r3, #0]
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d003      	beq.n	8001ecc <HAL_DMA_IRQHandler+0x170>
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec8:	6878      	ldr	r0, [r7, #4]
 8001eca:	4798      	blx	r3
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001ed0:	2220      	movs	r2, #32
 8001ed2:	409a      	lsls	r2, r3
 8001ed4:	68fb      	ldr	r3, [r7, #12]
 8001ed6:	4013      	ands	r3, r2
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	f000 808e 	beq.w	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	f003 0310 	and.w	r3, r3, #16
 8001ee8:	2b00      	cmp	r3, #0
 8001eea:	f000 8086 	beq.w	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001ef2:	2220      	movs	r2, #32
 8001ef4:	409a      	lsls	r2, r3
 8001ef6:	693b      	ldr	r3, [r7, #16]
 8001ef8:	609a      	str	r2, [r3, #8]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001f00:	b2db      	uxtb	r3, r3
 8001f02:	2b05      	cmp	r3, #5
 8001f04:	d136      	bne.n	8001f74 <HAL_DMA_IRQHandler+0x218>
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	681a      	ldr	r2, [r3, #0]
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	f022 0216 	bic.w	r2, r2, #22
 8001f14:	601a      	str	r2, [r3, #0]
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	695a      	ldr	r2, [r3, #20]
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001f24:	615a      	str	r2, [r3, #20]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f2a:	2b00      	cmp	r3, #0
 8001f2c:	d103      	bne.n	8001f36 <HAL_DMA_IRQHandler+0x1da>
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d007      	beq.n	8001f46 <HAL_DMA_IRQHandler+0x1ea>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	681a      	ldr	r2, [r3, #0]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	f022 0208 	bic.w	r2, r2, #8
 8001f44:	601a      	str	r2, [r3, #0]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f4a:	223f      	movs	r2, #63	; 0x3f
 8001f4c:	409a      	lsls	r2, r3
 8001f4e:	693b      	ldr	r3, [r7, #16]
 8001f50:	609a      	str	r2, [r3, #8]
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	2200      	movs	r2, #0
 8001f56:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	2201      	movs	r2, #1
 8001f5e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d07d      	beq.n	8002066 <HAL_DMA_IRQHandler+0x30a>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001f6e:	6878      	ldr	r0, [r7, #4]
 8001f70:	4798      	blx	r3
 8001f72:	e078      	b.n	8002066 <HAL_DMA_IRQHandler+0x30a>
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d01c      	beq.n	8001fbc <HAL_DMA_IRQHandler+0x260>
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d108      	bne.n	8001fa2 <HAL_DMA_IRQHandler+0x246>
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d030      	beq.n	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f9c:	6878      	ldr	r0, [r7, #4]
 8001f9e:	4798      	blx	r3
 8001fa0:	e02b      	b.n	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d027      	beq.n	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001fae:	6878      	ldr	r0, [r7, #4]
 8001fb0:	4798      	blx	r3
 8001fb2:	e022      	b.n	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001fb4:	20000000 	.word	0x20000000
 8001fb8:	1b4e81b5 	.word	0x1b4e81b5
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d10f      	bne.n	8001fea <HAL_DMA_IRQHandler+0x28e>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	681a      	ldr	r2, [r3, #0]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	f022 0210 	bic.w	r2, r2, #16
 8001fd8:	601a      	str	r2, [r3, #0]
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	2200      	movs	r2, #0
 8001fde:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	2201      	movs	r2, #1
 8001fe6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d003      	beq.n	8001ffa <HAL_DMA_IRQHandler+0x29e>
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001ff6:	6878      	ldr	r0, [r7, #4]
 8001ff8:	4798      	blx	r3
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d032      	beq.n	8002068 <HAL_DMA_IRQHandler+0x30c>
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002006:	f003 0301 	and.w	r3, r3, #1
 800200a:	2b00      	cmp	r3, #0
 800200c:	d022      	beq.n	8002054 <HAL_DMA_IRQHandler+0x2f8>
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	2205      	movs	r2, #5
 8002012:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	681a      	ldr	r2, [r3, #0]
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	f022 0201 	bic.w	r2, r2, #1
 8002024:	601a      	str	r2, [r3, #0]
 8002026:	68bb      	ldr	r3, [r7, #8]
 8002028:	3301      	adds	r3, #1
 800202a:	60bb      	str	r3, [r7, #8]
 800202c:	697a      	ldr	r2, [r7, #20]
 800202e:	429a      	cmp	r2, r3
 8002030:	d307      	bcc.n	8002042 <HAL_DMA_IRQHandler+0x2e6>
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	f003 0301 	and.w	r3, r3, #1
 800203c:	2b00      	cmp	r3, #0
 800203e:	d1f2      	bne.n	8002026 <HAL_DMA_IRQHandler+0x2ca>
 8002040:	e000      	b.n	8002044 <HAL_DMA_IRQHandler+0x2e8>
 8002042:	bf00      	nop
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	2200      	movs	r2, #0
 8002048:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	2201      	movs	r2, #1
 8002050:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002058:	2b00      	cmp	r3, #0
 800205a:	d005      	beq.n	8002068 <HAL_DMA_IRQHandler+0x30c>
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002060:	6878      	ldr	r0, [r7, #4]
 8002062:	4798      	blx	r3
 8002064:	e000      	b.n	8002068 <HAL_DMA_IRQHandler+0x30c>
 8002066:	bf00      	nop
 8002068:	3718      	adds	r7, #24
 800206a:	46bd      	mov	sp, r7
 800206c:	bd80      	pop	{r7, pc}
 800206e:	bf00      	nop

08002070 <DMA_CalcBaseAndBitshift>:
 8002070:	b480      	push	{r7}
 8002072:	b085      	sub	sp, #20
 8002074:	af00      	add	r7, sp, #0
 8002076:	6078      	str	r0, [r7, #4]
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	b2db      	uxtb	r3, r3
 800207e:	3b10      	subs	r3, #16
 8002080:	4a14      	ldr	r2, [pc, #80]	; (80020d4 <DMA_CalcBaseAndBitshift+0x64>)
 8002082:	fba2 2303 	umull	r2, r3, r2, r3
 8002086:	091b      	lsrs	r3, r3, #4
 8002088:	60fb      	str	r3, [r7, #12]
 800208a:	4a13      	ldr	r2, [pc, #76]	; (80020d8 <DMA_CalcBaseAndBitshift+0x68>)
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	4413      	add	r3, r2
 8002090:	781b      	ldrb	r3, [r3, #0]
 8002092:	461a      	mov	r2, r3
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	65da      	str	r2, [r3, #92]	; 0x5c
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	2b03      	cmp	r3, #3
 800209c:	d909      	bls.n	80020b2 <DMA_CalcBaseAndBitshift+0x42>
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80020a6:	f023 0303 	bic.w	r3, r3, #3
 80020aa:	1d1a      	adds	r2, r3, #4
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	659a      	str	r2, [r3, #88]	; 0x58
 80020b0:	e007      	b.n	80020c2 <DMA_CalcBaseAndBitshift+0x52>
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80020ba:	f023 0303 	bic.w	r3, r3, #3
 80020be:	687a      	ldr	r2, [r7, #4]
 80020c0:	6593      	str	r3, [r2, #88]	; 0x58
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80020c6:	4618      	mov	r0, r3
 80020c8:	3714      	adds	r7, #20
 80020ca:	46bd      	mov	sp, r7
 80020cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	aaaaaaab 	.word	0xaaaaaaab
 80020d8:	08003bec 	.word	0x08003bec

080020dc <DMA_CheckFifoParam>:
 80020dc:	b480      	push	{r7}
 80020de:	b085      	sub	sp, #20
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	6078      	str	r0, [r7, #4]
 80020e4:	2300      	movs	r3, #0
 80020e6:	73fb      	strb	r3, [r7, #15]
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020ec:	60bb      	str	r3, [r7, #8]
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	699b      	ldr	r3, [r3, #24]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d11f      	bne.n	8002136 <DMA_CheckFifoParam+0x5a>
 80020f6:	68bb      	ldr	r3, [r7, #8]
 80020f8:	2b03      	cmp	r3, #3
 80020fa:	d855      	bhi.n	80021a8 <DMA_CheckFifoParam+0xcc>
 80020fc:	a201      	add	r2, pc, #4	; (adr r2, 8002104 <DMA_CheckFifoParam+0x28>)
 80020fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002102:	bf00      	nop
 8002104:	08002115 	.word	0x08002115
 8002108:	08002127 	.word	0x08002127
 800210c:	08002115 	.word	0x08002115
 8002110:	080021a9 	.word	0x080021a9
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002118:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800211c:	2b00      	cmp	r3, #0
 800211e:	d045      	beq.n	80021ac <DMA_CheckFifoParam+0xd0>
 8002120:	2301      	movs	r3, #1
 8002122:	73fb      	strb	r3, [r7, #15]
 8002124:	e042      	b.n	80021ac <DMA_CheckFifoParam+0xd0>
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800212a:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800212e:	d13f      	bne.n	80021b0 <DMA_CheckFifoParam+0xd4>
 8002130:	2301      	movs	r3, #1
 8002132:	73fb      	strb	r3, [r7, #15]
 8002134:	e03c      	b.n	80021b0 <DMA_CheckFifoParam+0xd4>
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	699b      	ldr	r3, [r3, #24]
 800213a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800213e:	d121      	bne.n	8002184 <DMA_CheckFifoParam+0xa8>
 8002140:	68bb      	ldr	r3, [r7, #8]
 8002142:	2b03      	cmp	r3, #3
 8002144:	d836      	bhi.n	80021b4 <DMA_CheckFifoParam+0xd8>
 8002146:	a201      	add	r2, pc, #4	; (adr r2, 800214c <DMA_CheckFifoParam+0x70>)
 8002148:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800214c:	0800215d 	.word	0x0800215d
 8002150:	08002163 	.word	0x08002163
 8002154:	0800215d 	.word	0x0800215d
 8002158:	08002175 	.word	0x08002175
 800215c:	2301      	movs	r3, #1
 800215e:	73fb      	strb	r3, [r7, #15]
 8002160:	e02f      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002166:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800216a:	2b00      	cmp	r3, #0
 800216c:	d024      	beq.n	80021b8 <DMA_CheckFifoParam+0xdc>
 800216e:	2301      	movs	r3, #1
 8002170:	73fb      	strb	r3, [r7, #15]
 8002172:	e021      	b.n	80021b8 <DMA_CheckFifoParam+0xdc>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002178:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800217c:	d11e      	bne.n	80021bc <DMA_CheckFifoParam+0xe0>
 800217e:	2301      	movs	r3, #1
 8002180:	73fb      	strb	r3, [r7, #15]
 8002182:	e01b      	b.n	80021bc <DMA_CheckFifoParam+0xe0>
 8002184:	68bb      	ldr	r3, [r7, #8]
 8002186:	2b02      	cmp	r3, #2
 8002188:	d902      	bls.n	8002190 <DMA_CheckFifoParam+0xb4>
 800218a:	2b03      	cmp	r3, #3
 800218c:	d003      	beq.n	8002196 <DMA_CheckFifoParam+0xba>
 800218e:	e018      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 8002190:	2301      	movs	r3, #1
 8002192:	73fb      	strb	r3, [r7, #15]
 8002194:	e015      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800219a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800219e:	2b00      	cmp	r3, #0
 80021a0:	d00e      	beq.n	80021c0 <DMA_CheckFifoParam+0xe4>
 80021a2:	2301      	movs	r3, #1
 80021a4:	73fb      	strb	r3, [r7, #15]
 80021a6:	e00b      	b.n	80021c0 <DMA_CheckFifoParam+0xe4>
 80021a8:	bf00      	nop
 80021aa:	e00a      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021ac:	bf00      	nop
 80021ae:	e008      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021b0:	bf00      	nop
 80021b2:	e006      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021b4:	bf00      	nop
 80021b6:	e004      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021b8:	bf00      	nop
 80021ba:	e002      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021bc:	bf00      	nop
 80021be:	e000      	b.n	80021c2 <DMA_CheckFifoParam+0xe6>
 80021c0:	bf00      	nop
 80021c2:	7bfb      	ldrb	r3, [r7, #15]
 80021c4:	4618      	mov	r0, r3
 80021c6:	3714      	adds	r7, #20
 80021c8:	46bd      	mov	sp, r7
 80021ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ce:	4770      	bx	lr

080021d0 <HAL_GPIO_Init>:
 80021d0:	b480      	push	{r7}
 80021d2:	b089      	sub	sp, #36	; 0x24
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	6078      	str	r0, [r7, #4]
 80021d8:	6039      	str	r1, [r7, #0]
 80021da:	2300      	movs	r3, #0
 80021dc:	617b      	str	r3, [r7, #20]
 80021de:	2300      	movs	r3, #0
 80021e0:	613b      	str	r3, [r7, #16]
 80021e2:	2300      	movs	r3, #0
 80021e4:	61bb      	str	r3, [r7, #24]
 80021e6:	2300      	movs	r3, #0
 80021e8:	61fb      	str	r3, [r7, #28]
 80021ea:	e16b      	b.n	80024c4 <HAL_GPIO_Init+0x2f4>
 80021ec:	2201      	movs	r2, #1
 80021ee:	69fb      	ldr	r3, [r7, #28]
 80021f0:	fa02 f303 	lsl.w	r3, r2, r3
 80021f4:	617b      	str	r3, [r7, #20]
 80021f6:	683b      	ldr	r3, [r7, #0]
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	697a      	ldr	r2, [r7, #20]
 80021fc:	4013      	ands	r3, r2
 80021fe:	613b      	str	r3, [r7, #16]
 8002200:	693a      	ldr	r2, [r7, #16]
 8002202:	697b      	ldr	r3, [r7, #20]
 8002204:	429a      	cmp	r2, r3
 8002206:	f040 815a 	bne.w	80024be <HAL_GPIO_Init+0x2ee>
 800220a:	683b      	ldr	r3, [r7, #0]
 800220c:	685b      	ldr	r3, [r3, #4]
 800220e:	2b01      	cmp	r3, #1
 8002210:	d00b      	beq.n	800222a <HAL_GPIO_Init+0x5a>
 8002212:	683b      	ldr	r3, [r7, #0]
 8002214:	685b      	ldr	r3, [r3, #4]
 8002216:	2b02      	cmp	r3, #2
 8002218:	d007      	beq.n	800222a <HAL_GPIO_Init+0x5a>
 800221a:	683b      	ldr	r3, [r7, #0]
 800221c:	685b      	ldr	r3, [r3, #4]
 800221e:	2b11      	cmp	r3, #17
 8002220:	d003      	beq.n	800222a <HAL_GPIO_Init+0x5a>
 8002222:	683b      	ldr	r3, [r7, #0]
 8002224:	685b      	ldr	r3, [r3, #4]
 8002226:	2b12      	cmp	r3, #18
 8002228:	d130      	bne.n	800228c <HAL_GPIO_Init+0xbc>
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	689b      	ldr	r3, [r3, #8]
 800222e:	61bb      	str	r3, [r7, #24]
 8002230:	69fb      	ldr	r3, [r7, #28]
 8002232:	005b      	lsls	r3, r3, #1
 8002234:	2203      	movs	r2, #3
 8002236:	fa02 f303 	lsl.w	r3, r2, r3
 800223a:	43db      	mvns	r3, r3
 800223c:	69ba      	ldr	r2, [r7, #24]
 800223e:	4013      	ands	r3, r2
 8002240:	61bb      	str	r3, [r7, #24]
 8002242:	683b      	ldr	r3, [r7, #0]
 8002244:	68da      	ldr	r2, [r3, #12]
 8002246:	69fb      	ldr	r3, [r7, #28]
 8002248:	005b      	lsls	r3, r3, #1
 800224a:	fa02 f303 	lsl.w	r3, r2, r3
 800224e:	69ba      	ldr	r2, [r7, #24]
 8002250:	4313      	orrs	r3, r2
 8002252:	61bb      	str	r3, [r7, #24]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	69ba      	ldr	r2, [r7, #24]
 8002258:	609a      	str	r2, [r3, #8]
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	685b      	ldr	r3, [r3, #4]
 800225e:	61bb      	str	r3, [r7, #24]
 8002260:	2201      	movs	r2, #1
 8002262:	69fb      	ldr	r3, [r7, #28]
 8002264:	fa02 f303 	lsl.w	r3, r2, r3
 8002268:	43db      	mvns	r3, r3
 800226a:	69ba      	ldr	r2, [r7, #24]
 800226c:	4013      	ands	r3, r2
 800226e:	61bb      	str	r3, [r7, #24]
 8002270:	683b      	ldr	r3, [r7, #0]
 8002272:	685b      	ldr	r3, [r3, #4]
 8002274:	091b      	lsrs	r3, r3, #4
 8002276:	f003 0201 	and.w	r2, r3, #1
 800227a:	69fb      	ldr	r3, [r7, #28]
 800227c:	fa02 f303 	lsl.w	r3, r2, r3
 8002280:	69ba      	ldr	r2, [r7, #24]
 8002282:	4313      	orrs	r3, r2
 8002284:	61bb      	str	r3, [r7, #24]
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	69ba      	ldr	r2, [r7, #24]
 800228a:	605a      	str	r2, [r3, #4]
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	68db      	ldr	r3, [r3, #12]
 8002290:	61bb      	str	r3, [r7, #24]
 8002292:	69fb      	ldr	r3, [r7, #28]
 8002294:	005b      	lsls	r3, r3, #1
 8002296:	2203      	movs	r2, #3
 8002298:	fa02 f303 	lsl.w	r3, r2, r3
 800229c:	43db      	mvns	r3, r3
 800229e:	69ba      	ldr	r2, [r7, #24]
 80022a0:	4013      	ands	r3, r2
 80022a2:	61bb      	str	r3, [r7, #24]
 80022a4:	683b      	ldr	r3, [r7, #0]
 80022a6:	689a      	ldr	r2, [r3, #8]
 80022a8:	69fb      	ldr	r3, [r7, #28]
 80022aa:	005b      	lsls	r3, r3, #1
 80022ac:	fa02 f303 	lsl.w	r3, r2, r3
 80022b0:	69ba      	ldr	r2, [r7, #24]
 80022b2:	4313      	orrs	r3, r2
 80022b4:	61bb      	str	r3, [r7, #24]
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	69ba      	ldr	r2, [r7, #24]
 80022ba:	60da      	str	r2, [r3, #12]
 80022bc:	683b      	ldr	r3, [r7, #0]
 80022be:	685b      	ldr	r3, [r3, #4]
 80022c0:	2b02      	cmp	r3, #2
 80022c2:	d003      	beq.n	80022cc <HAL_GPIO_Init+0xfc>
 80022c4:	683b      	ldr	r3, [r7, #0]
 80022c6:	685b      	ldr	r3, [r3, #4]
 80022c8:	2b12      	cmp	r3, #18
 80022ca:	d123      	bne.n	8002314 <HAL_GPIO_Init+0x144>
 80022cc:	69fb      	ldr	r3, [r7, #28]
 80022ce:	08da      	lsrs	r2, r3, #3
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	3208      	adds	r2, #8
 80022d4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022d8:	61bb      	str	r3, [r7, #24]
 80022da:	69fb      	ldr	r3, [r7, #28]
 80022dc:	f003 0307 	and.w	r3, r3, #7
 80022e0:	009b      	lsls	r3, r3, #2
 80022e2:	220f      	movs	r2, #15
 80022e4:	fa02 f303 	lsl.w	r3, r2, r3
 80022e8:	43db      	mvns	r3, r3
 80022ea:	69ba      	ldr	r2, [r7, #24]
 80022ec:	4013      	ands	r3, r2
 80022ee:	61bb      	str	r3, [r7, #24]
 80022f0:	683b      	ldr	r3, [r7, #0]
 80022f2:	691a      	ldr	r2, [r3, #16]
 80022f4:	69fb      	ldr	r3, [r7, #28]
 80022f6:	f003 0307 	and.w	r3, r3, #7
 80022fa:	009b      	lsls	r3, r3, #2
 80022fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002300:	69ba      	ldr	r2, [r7, #24]
 8002302:	4313      	orrs	r3, r2
 8002304:	61bb      	str	r3, [r7, #24]
 8002306:	69fb      	ldr	r3, [r7, #28]
 8002308:	08da      	lsrs	r2, r3, #3
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	3208      	adds	r2, #8
 800230e:	69b9      	ldr	r1, [r7, #24]
 8002310:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	61bb      	str	r3, [r7, #24]
 800231a:	69fb      	ldr	r3, [r7, #28]
 800231c:	005b      	lsls	r3, r3, #1
 800231e:	2203      	movs	r2, #3
 8002320:	fa02 f303 	lsl.w	r3, r2, r3
 8002324:	43db      	mvns	r3, r3
 8002326:	69ba      	ldr	r2, [r7, #24]
 8002328:	4013      	ands	r3, r2
 800232a:	61bb      	str	r3, [r7, #24]
 800232c:	683b      	ldr	r3, [r7, #0]
 800232e:	685b      	ldr	r3, [r3, #4]
 8002330:	f003 0203 	and.w	r2, r3, #3
 8002334:	69fb      	ldr	r3, [r7, #28]
 8002336:	005b      	lsls	r3, r3, #1
 8002338:	fa02 f303 	lsl.w	r3, r2, r3
 800233c:	69ba      	ldr	r2, [r7, #24]
 800233e:	4313      	orrs	r3, r2
 8002340:	61bb      	str	r3, [r7, #24]
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	69ba      	ldr	r2, [r7, #24]
 8002346:	601a      	str	r2, [r3, #0]
 8002348:	683b      	ldr	r3, [r7, #0]
 800234a:	685b      	ldr	r3, [r3, #4]
 800234c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002350:	2b00      	cmp	r3, #0
 8002352:	f000 80b4 	beq.w	80024be <HAL_GPIO_Init+0x2ee>
 8002356:	2300      	movs	r3, #0
 8002358:	60fb      	str	r3, [r7, #12]
 800235a:	4b5f      	ldr	r3, [pc, #380]	; (80024d8 <HAL_GPIO_Init+0x308>)
 800235c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800235e:	4a5e      	ldr	r2, [pc, #376]	; (80024d8 <HAL_GPIO_Init+0x308>)
 8002360:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002364:	6453      	str	r3, [r2, #68]	; 0x44
 8002366:	4b5c      	ldr	r3, [pc, #368]	; (80024d8 <HAL_GPIO_Init+0x308>)
 8002368:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800236a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800236e:	60fb      	str	r3, [r7, #12]
 8002370:	68fb      	ldr	r3, [r7, #12]
 8002372:	4a5a      	ldr	r2, [pc, #360]	; (80024dc <HAL_GPIO_Init+0x30c>)
 8002374:	69fb      	ldr	r3, [r7, #28]
 8002376:	089b      	lsrs	r3, r3, #2
 8002378:	3302      	adds	r3, #2
 800237a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800237e:	61bb      	str	r3, [r7, #24]
 8002380:	69fb      	ldr	r3, [r7, #28]
 8002382:	f003 0303 	and.w	r3, r3, #3
 8002386:	009b      	lsls	r3, r3, #2
 8002388:	220f      	movs	r2, #15
 800238a:	fa02 f303 	lsl.w	r3, r2, r3
 800238e:	43db      	mvns	r3, r3
 8002390:	69ba      	ldr	r2, [r7, #24]
 8002392:	4013      	ands	r3, r2
 8002394:	61bb      	str	r3, [r7, #24]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	4a51      	ldr	r2, [pc, #324]	; (80024e0 <HAL_GPIO_Init+0x310>)
 800239a:	4293      	cmp	r3, r2
 800239c:	d02b      	beq.n	80023f6 <HAL_GPIO_Init+0x226>
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	4a50      	ldr	r2, [pc, #320]	; (80024e4 <HAL_GPIO_Init+0x314>)
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d025      	beq.n	80023f2 <HAL_GPIO_Init+0x222>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	4a4f      	ldr	r2, [pc, #316]	; (80024e8 <HAL_GPIO_Init+0x318>)
 80023aa:	4293      	cmp	r3, r2
 80023ac:	d01f      	beq.n	80023ee <HAL_GPIO_Init+0x21e>
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	4a4e      	ldr	r2, [pc, #312]	; (80024ec <HAL_GPIO_Init+0x31c>)
 80023b2:	4293      	cmp	r3, r2
 80023b4:	d019      	beq.n	80023ea <HAL_GPIO_Init+0x21a>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	4a4d      	ldr	r2, [pc, #308]	; (80024f0 <HAL_GPIO_Init+0x320>)
 80023ba:	4293      	cmp	r3, r2
 80023bc:	d013      	beq.n	80023e6 <HAL_GPIO_Init+0x216>
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	4a4c      	ldr	r2, [pc, #304]	; (80024f4 <HAL_GPIO_Init+0x324>)
 80023c2:	4293      	cmp	r3, r2
 80023c4:	d00d      	beq.n	80023e2 <HAL_GPIO_Init+0x212>
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	4a4b      	ldr	r2, [pc, #300]	; (80024f8 <HAL_GPIO_Init+0x328>)
 80023ca:	4293      	cmp	r3, r2
 80023cc:	d007      	beq.n	80023de <HAL_GPIO_Init+0x20e>
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	4a4a      	ldr	r2, [pc, #296]	; (80024fc <HAL_GPIO_Init+0x32c>)
 80023d2:	4293      	cmp	r3, r2
 80023d4:	d101      	bne.n	80023da <HAL_GPIO_Init+0x20a>
 80023d6:	2307      	movs	r3, #7
 80023d8:	e00e      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023da:	2308      	movs	r3, #8
 80023dc:	e00c      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023de:	2306      	movs	r3, #6
 80023e0:	e00a      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023e2:	2305      	movs	r3, #5
 80023e4:	e008      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023e6:	2304      	movs	r3, #4
 80023e8:	e006      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023ea:	2303      	movs	r3, #3
 80023ec:	e004      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023ee:	2302      	movs	r3, #2
 80023f0:	e002      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023f2:	2301      	movs	r3, #1
 80023f4:	e000      	b.n	80023f8 <HAL_GPIO_Init+0x228>
 80023f6:	2300      	movs	r3, #0
 80023f8:	69fa      	ldr	r2, [r7, #28]
 80023fa:	f002 0203 	and.w	r2, r2, #3
 80023fe:	0092      	lsls	r2, r2, #2
 8002400:	4093      	lsls	r3, r2
 8002402:	69ba      	ldr	r2, [r7, #24]
 8002404:	4313      	orrs	r3, r2
 8002406:	61bb      	str	r3, [r7, #24]
 8002408:	4934      	ldr	r1, [pc, #208]	; (80024dc <HAL_GPIO_Init+0x30c>)
 800240a:	69fb      	ldr	r3, [r7, #28]
 800240c:	089b      	lsrs	r3, r3, #2
 800240e:	3302      	adds	r3, #2
 8002410:	69ba      	ldr	r2, [r7, #24]
 8002412:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002416:	4b3a      	ldr	r3, [pc, #232]	; (8002500 <HAL_GPIO_Init+0x330>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	61bb      	str	r3, [r7, #24]
 800241c:	693b      	ldr	r3, [r7, #16]
 800241e:	43db      	mvns	r3, r3
 8002420:	69ba      	ldr	r2, [r7, #24]
 8002422:	4013      	ands	r3, r2
 8002424:	61bb      	str	r3, [r7, #24]
 8002426:	683b      	ldr	r3, [r7, #0]
 8002428:	685b      	ldr	r3, [r3, #4]
 800242a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800242e:	2b00      	cmp	r3, #0
 8002430:	d003      	beq.n	800243a <HAL_GPIO_Init+0x26a>
 8002432:	69ba      	ldr	r2, [r7, #24]
 8002434:	693b      	ldr	r3, [r7, #16]
 8002436:	4313      	orrs	r3, r2
 8002438:	61bb      	str	r3, [r7, #24]
 800243a:	4a31      	ldr	r2, [pc, #196]	; (8002500 <HAL_GPIO_Init+0x330>)
 800243c:	69bb      	ldr	r3, [r7, #24]
 800243e:	6013      	str	r3, [r2, #0]
 8002440:	4b2f      	ldr	r3, [pc, #188]	; (8002500 <HAL_GPIO_Init+0x330>)
 8002442:	685b      	ldr	r3, [r3, #4]
 8002444:	61bb      	str	r3, [r7, #24]
 8002446:	693b      	ldr	r3, [r7, #16]
 8002448:	43db      	mvns	r3, r3
 800244a:	69ba      	ldr	r2, [r7, #24]
 800244c:	4013      	ands	r3, r2
 800244e:	61bb      	str	r3, [r7, #24]
 8002450:	683b      	ldr	r3, [r7, #0]
 8002452:	685b      	ldr	r3, [r3, #4]
 8002454:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002458:	2b00      	cmp	r3, #0
 800245a:	d003      	beq.n	8002464 <HAL_GPIO_Init+0x294>
 800245c:	69ba      	ldr	r2, [r7, #24]
 800245e:	693b      	ldr	r3, [r7, #16]
 8002460:	4313      	orrs	r3, r2
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	4a26      	ldr	r2, [pc, #152]	; (8002500 <HAL_GPIO_Init+0x330>)
 8002466:	69bb      	ldr	r3, [r7, #24]
 8002468:	6053      	str	r3, [r2, #4]
 800246a:	4b25      	ldr	r3, [pc, #148]	; (8002500 <HAL_GPIO_Init+0x330>)
 800246c:	689b      	ldr	r3, [r3, #8]
 800246e:	61bb      	str	r3, [r7, #24]
 8002470:	693b      	ldr	r3, [r7, #16]
 8002472:	43db      	mvns	r3, r3
 8002474:	69ba      	ldr	r2, [r7, #24]
 8002476:	4013      	ands	r3, r2
 8002478:	61bb      	str	r3, [r7, #24]
 800247a:	683b      	ldr	r3, [r7, #0]
 800247c:	685b      	ldr	r3, [r3, #4]
 800247e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002482:	2b00      	cmp	r3, #0
 8002484:	d003      	beq.n	800248e <HAL_GPIO_Init+0x2be>
 8002486:	69ba      	ldr	r2, [r7, #24]
 8002488:	693b      	ldr	r3, [r7, #16]
 800248a:	4313      	orrs	r3, r2
 800248c:	61bb      	str	r3, [r7, #24]
 800248e:	4a1c      	ldr	r2, [pc, #112]	; (8002500 <HAL_GPIO_Init+0x330>)
 8002490:	69bb      	ldr	r3, [r7, #24]
 8002492:	6093      	str	r3, [r2, #8]
 8002494:	4b1a      	ldr	r3, [pc, #104]	; (8002500 <HAL_GPIO_Init+0x330>)
 8002496:	68db      	ldr	r3, [r3, #12]
 8002498:	61bb      	str	r3, [r7, #24]
 800249a:	693b      	ldr	r3, [r7, #16]
 800249c:	43db      	mvns	r3, r3
 800249e:	69ba      	ldr	r2, [r7, #24]
 80024a0:	4013      	ands	r3, r2
 80024a2:	61bb      	str	r3, [r7, #24]
 80024a4:	683b      	ldr	r3, [r7, #0]
 80024a6:	685b      	ldr	r3, [r3, #4]
 80024a8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d003      	beq.n	80024b8 <HAL_GPIO_Init+0x2e8>
 80024b0:	69ba      	ldr	r2, [r7, #24]
 80024b2:	693b      	ldr	r3, [r7, #16]
 80024b4:	4313      	orrs	r3, r2
 80024b6:	61bb      	str	r3, [r7, #24]
 80024b8:	4a11      	ldr	r2, [pc, #68]	; (8002500 <HAL_GPIO_Init+0x330>)
 80024ba:	69bb      	ldr	r3, [r7, #24]
 80024bc:	60d3      	str	r3, [r2, #12]
 80024be:	69fb      	ldr	r3, [r7, #28]
 80024c0:	3301      	adds	r3, #1
 80024c2:	61fb      	str	r3, [r7, #28]
 80024c4:	69fb      	ldr	r3, [r7, #28]
 80024c6:	2b0f      	cmp	r3, #15
 80024c8:	f67f ae90 	bls.w	80021ec <HAL_GPIO_Init+0x1c>
 80024cc:	bf00      	nop
 80024ce:	3724      	adds	r7, #36	; 0x24
 80024d0:	46bd      	mov	sp, r7
 80024d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024d6:	4770      	bx	lr
 80024d8:	40023800 	.word	0x40023800
 80024dc:	40013800 	.word	0x40013800
 80024e0:	40020000 	.word	0x40020000
 80024e4:	40020400 	.word	0x40020400
 80024e8:	40020800 	.word	0x40020800
 80024ec:	40020c00 	.word	0x40020c00
 80024f0:	40021000 	.word	0x40021000
 80024f4:	40021400 	.word	0x40021400
 80024f8:	40021800 	.word	0x40021800
 80024fc:	40021c00 	.word	0x40021c00
 8002500:	40013c00 	.word	0x40013c00

08002504 <HAL_GPIO_WritePin>:
 8002504:	b480      	push	{r7}
 8002506:	b083      	sub	sp, #12
 8002508:	af00      	add	r7, sp, #0
 800250a:	6078      	str	r0, [r7, #4]
 800250c:	460b      	mov	r3, r1
 800250e:	807b      	strh	r3, [r7, #2]
 8002510:	4613      	mov	r3, r2
 8002512:	707b      	strb	r3, [r7, #1]
 8002514:	787b      	ldrb	r3, [r7, #1]
 8002516:	2b00      	cmp	r3, #0
 8002518:	d003      	beq.n	8002522 <HAL_GPIO_WritePin+0x1e>
 800251a:	887a      	ldrh	r2, [r7, #2]
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	619a      	str	r2, [r3, #24]
 8002520:	e003      	b.n	800252a <HAL_GPIO_WritePin+0x26>
 8002522:	887b      	ldrh	r3, [r7, #2]
 8002524:	041a      	lsls	r2, r3, #16
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	619a      	str	r2, [r3, #24]
 800252a:	bf00      	nop
 800252c:	370c      	adds	r7, #12
 800252e:	46bd      	mov	sp, r7
 8002530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002534:	4770      	bx	lr
	...

08002538 <HAL_RCC_OscConfig>:
 8002538:	b580      	push	{r7, lr}
 800253a:	b086      	sub	sp, #24
 800253c:	af00      	add	r7, sp, #0
 800253e:	6078      	str	r0, [r7, #4]
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	2b00      	cmp	r3, #0
 8002544:	d101      	bne.n	800254a <HAL_RCC_OscConfig+0x12>
 8002546:	2301      	movs	r3, #1
 8002548:	e25b      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	f003 0301 	and.w	r3, r3, #1
 8002552:	2b00      	cmp	r3, #0
 8002554:	d075      	beq.n	8002642 <HAL_RCC_OscConfig+0x10a>
 8002556:	4ba3      	ldr	r3, [pc, #652]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002558:	689b      	ldr	r3, [r3, #8]
 800255a:	f003 030c 	and.w	r3, r3, #12
 800255e:	2b04      	cmp	r3, #4
 8002560:	d00c      	beq.n	800257c <HAL_RCC_OscConfig+0x44>
 8002562:	4ba0      	ldr	r3, [pc, #640]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002564:	689b      	ldr	r3, [r3, #8]
 8002566:	f003 030c 	and.w	r3, r3, #12
 800256a:	2b08      	cmp	r3, #8
 800256c:	d112      	bne.n	8002594 <HAL_RCC_OscConfig+0x5c>
 800256e:	4b9d      	ldr	r3, [pc, #628]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002570:	685b      	ldr	r3, [r3, #4]
 8002572:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002576:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800257a:	d10b      	bne.n	8002594 <HAL_RCC_OscConfig+0x5c>
 800257c:	4b99      	ldr	r3, [pc, #612]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002584:	2b00      	cmp	r3, #0
 8002586:	d05b      	beq.n	8002640 <HAL_RCC_OscConfig+0x108>
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	685b      	ldr	r3, [r3, #4]
 800258c:	2b00      	cmp	r3, #0
 800258e:	d157      	bne.n	8002640 <HAL_RCC_OscConfig+0x108>
 8002590:	2301      	movs	r3, #1
 8002592:	e236      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	685b      	ldr	r3, [r3, #4]
 8002598:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800259c:	d106      	bne.n	80025ac <HAL_RCC_OscConfig+0x74>
 800259e:	4b91      	ldr	r3, [pc, #580]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	4a90      	ldr	r2, [pc, #576]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80025a8:	6013      	str	r3, [r2, #0]
 80025aa:	e01d      	b.n	80025e8 <HAL_RCC_OscConfig+0xb0>
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	685b      	ldr	r3, [r3, #4]
 80025b0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80025b4:	d10c      	bne.n	80025d0 <HAL_RCC_OscConfig+0x98>
 80025b6:	4b8b      	ldr	r3, [pc, #556]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	4a8a      	ldr	r2, [pc, #552]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025bc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80025c0:	6013      	str	r3, [r2, #0]
 80025c2:	4b88      	ldr	r3, [pc, #544]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	4a87      	ldr	r2, [pc, #540]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80025cc:	6013      	str	r3, [r2, #0]
 80025ce:	e00b      	b.n	80025e8 <HAL_RCC_OscConfig+0xb0>
 80025d0:	4b84      	ldr	r3, [pc, #528]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	4a83      	ldr	r2, [pc, #524]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80025da:	6013      	str	r3, [r2, #0]
 80025dc:	4b81      	ldr	r3, [pc, #516]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	4a80      	ldr	r2, [pc, #512]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80025e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80025e6:	6013      	str	r3, [r2, #0]
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	685b      	ldr	r3, [r3, #4]
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d013      	beq.n	8002618 <HAL_RCC_OscConfig+0xe0>
 80025f0:	f7ff f9e8 	bl	80019c4 <HAL_GetTick>
 80025f4:	6138      	str	r0, [r7, #16]
 80025f6:	e008      	b.n	800260a <HAL_RCC_OscConfig+0xd2>
 80025f8:	f7ff f9e4 	bl	80019c4 <HAL_GetTick>
 80025fc:	4602      	mov	r2, r0
 80025fe:	693b      	ldr	r3, [r7, #16]
 8002600:	1ad3      	subs	r3, r2, r3
 8002602:	2b64      	cmp	r3, #100	; 0x64
 8002604:	d901      	bls.n	800260a <HAL_RCC_OscConfig+0xd2>
 8002606:	2303      	movs	r3, #3
 8002608:	e1fb      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 800260a:	4b76      	ldr	r3, [pc, #472]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002612:	2b00      	cmp	r3, #0
 8002614:	d0f0      	beq.n	80025f8 <HAL_RCC_OscConfig+0xc0>
 8002616:	e014      	b.n	8002642 <HAL_RCC_OscConfig+0x10a>
 8002618:	f7ff f9d4 	bl	80019c4 <HAL_GetTick>
 800261c:	6138      	str	r0, [r7, #16]
 800261e:	e008      	b.n	8002632 <HAL_RCC_OscConfig+0xfa>
 8002620:	f7ff f9d0 	bl	80019c4 <HAL_GetTick>
 8002624:	4602      	mov	r2, r0
 8002626:	693b      	ldr	r3, [r7, #16]
 8002628:	1ad3      	subs	r3, r2, r3
 800262a:	2b64      	cmp	r3, #100	; 0x64
 800262c:	d901      	bls.n	8002632 <HAL_RCC_OscConfig+0xfa>
 800262e:	2303      	movs	r3, #3
 8002630:	e1e7      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002632:	4b6c      	ldr	r3, [pc, #432]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800263a:	2b00      	cmp	r3, #0
 800263c:	d1f0      	bne.n	8002620 <HAL_RCC_OscConfig+0xe8>
 800263e:	e000      	b.n	8002642 <HAL_RCC_OscConfig+0x10a>
 8002640:	bf00      	nop
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	681b      	ldr	r3, [r3, #0]
 8002646:	f003 0302 	and.w	r3, r3, #2
 800264a:	2b00      	cmp	r3, #0
 800264c:	d063      	beq.n	8002716 <HAL_RCC_OscConfig+0x1de>
 800264e:	4b65      	ldr	r3, [pc, #404]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002650:	689b      	ldr	r3, [r3, #8]
 8002652:	f003 030c 	and.w	r3, r3, #12
 8002656:	2b00      	cmp	r3, #0
 8002658:	d00b      	beq.n	8002672 <HAL_RCC_OscConfig+0x13a>
 800265a:	4b62      	ldr	r3, [pc, #392]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800265c:	689b      	ldr	r3, [r3, #8]
 800265e:	f003 030c 	and.w	r3, r3, #12
 8002662:	2b08      	cmp	r3, #8
 8002664:	d11c      	bne.n	80026a0 <HAL_RCC_OscConfig+0x168>
 8002666:	4b5f      	ldr	r3, [pc, #380]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002668:	685b      	ldr	r3, [r3, #4]
 800266a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800266e:	2b00      	cmp	r3, #0
 8002670:	d116      	bne.n	80026a0 <HAL_RCC_OscConfig+0x168>
 8002672:	4b5c      	ldr	r3, [pc, #368]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002674:	681b      	ldr	r3, [r3, #0]
 8002676:	f003 0302 	and.w	r3, r3, #2
 800267a:	2b00      	cmp	r3, #0
 800267c:	d005      	beq.n	800268a <HAL_RCC_OscConfig+0x152>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	68db      	ldr	r3, [r3, #12]
 8002682:	2b01      	cmp	r3, #1
 8002684:	d001      	beq.n	800268a <HAL_RCC_OscConfig+0x152>
 8002686:	2301      	movs	r3, #1
 8002688:	e1bb      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 800268a:	4b56      	ldr	r3, [pc, #344]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	691b      	ldr	r3, [r3, #16]
 8002696:	00db      	lsls	r3, r3, #3
 8002698:	4952      	ldr	r1, [pc, #328]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800269a:	4313      	orrs	r3, r2
 800269c:	600b      	str	r3, [r1, #0]
 800269e:	e03a      	b.n	8002716 <HAL_RCC_OscConfig+0x1de>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	68db      	ldr	r3, [r3, #12]
 80026a4:	2b00      	cmp	r3, #0
 80026a6:	d020      	beq.n	80026ea <HAL_RCC_OscConfig+0x1b2>
 80026a8:	4b4f      	ldr	r3, [pc, #316]	; (80027e8 <HAL_RCC_OscConfig+0x2b0>)
 80026aa:	2201      	movs	r2, #1
 80026ac:	601a      	str	r2, [r3, #0]
 80026ae:	f7ff f989 	bl	80019c4 <HAL_GetTick>
 80026b2:	6138      	str	r0, [r7, #16]
 80026b4:	e008      	b.n	80026c8 <HAL_RCC_OscConfig+0x190>
 80026b6:	f7ff f985 	bl	80019c4 <HAL_GetTick>
 80026ba:	4602      	mov	r2, r0
 80026bc:	693b      	ldr	r3, [r7, #16]
 80026be:	1ad3      	subs	r3, r2, r3
 80026c0:	2b02      	cmp	r3, #2
 80026c2:	d901      	bls.n	80026c8 <HAL_RCC_OscConfig+0x190>
 80026c4:	2303      	movs	r3, #3
 80026c6:	e19c      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 80026c8:	4b46      	ldr	r3, [pc, #280]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	f003 0302 	and.w	r3, r3, #2
 80026d0:	2b00      	cmp	r3, #0
 80026d2:	d0f0      	beq.n	80026b6 <HAL_RCC_OscConfig+0x17e>
 80026d4:	4b43      	ldr	r3, [pc, #268]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	691b      	ldr	r3, [r3, #16]
 80026e0:	00db      	lsls	r3, r3, #3
 80026e2:	4940      	ldr	r1, [pc, #256]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80026e4:	4313      	orrs	r3, r2
 80026e6:	600b      	str	r3, [r1, #0]
 80026e8:	e015      	b.n	8002716 <HAL_RCC_OscConfig+0x1de>
 80026ea:	4b3f      	ldr	r3, [pc, #252]	; (80027e8 <HAL_RCC_OscConfig+0x2b0>)
 80026ec:	2200      	movs	r2, #0
 80026ee:	601a      	str	r2, [r3, #0]
 80026f0:	f7ff f968 	bl	80019c4 <HAL_GetTick>
 80026f4:	6138      	str	r0, [r7, #16]
 80026f6:	e008      	b.n	800270a <HAL_RCC_OscConfig+0x1d2>
 80026f8:	f7ff f964 	bl	80019c4 <HAL_GetTick>
 80026fc:	4602      	mov	r2, r0
 80026fe:	693b      	ldr	r3, [r7, #16]
 8002700:	1ad3      	subs	r3, r2, r3
 8002702:	2b02      	cmp	r3, #2
 8002704:	d901      	bls.n	800270a <HAL_RCC_OscConfig+0x1d2>
 8002706:	2303      	movs	r3, #3
 8002708:	e17b      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 800270a:	4b36      	ldr	r3, [pc, #216]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f003 0302 	and.w	r3, r3, #2
 8002712:	2b00      	cmp	r3, #0
 8002714:	d1f0      	bne.n	80026f8 <HAL_RCC_OscConfig+0x1c0>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	f003 0308 	and.w	r3, r3, #8
 800271e:	2b00      	cmp	r3, #0
 8002720:	d030      	beq.n	8002784 <HAL_RCC_OscConfig+0x24c>
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	695b      	ldr	r3, [r3, #20]
 8002726:	2b00      	cmp	r3, #0
 8002728:	d016      	beq.n	8002758 <HAL_RCC_OscConfig+0x220>
 800272a:	4b30      	ldr	r3, [pc, #192]	; (80027ec <HAL_RCC_OscConfig+0x2b4>)
 800272c:	2201      	movs	r2, #1
 800272e:	601a      	str	r2, [r3, #0]
 8002730:	f7ff f948 	bl	80019c4 <HAL_GetTick>
 8002734:	6138      	str	r0, [r7, #16]
 8002736:	e008      	b.n	800274a <HAL_RCC_OscConfig+0x212>
 8002738:	f7ff f944 	bl	80019c4 <HAL_GetTick>
 800273c:	4602      	mov	r2, r0
 800273e:	693b      	ldr	r3, [r7, #16]
 8002740:	1ad3      	subs	r3, r2, r3
 8002742:	2b02      	cmp	r3, #2
 8002744:	d901      	bls.n	800274a <HAL_RCC_OscConfig+0x212>
 8002746:	2303      	movs	r3, #3
 8002748:	e15b      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 800274a:	4b26      	ldr	r3, [pc, #152]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800274c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800274e:	f003 0302 	and.w	r3, r3, #2
 8002752:	2b00      	cmp	r3, #0
 8002754:	d0f0      	beq.n	8002738 <HAL_RCC_OscConfig+0x200>
 8002756:	e015      	b.n	8002784 <HAL_RCC_OscConfig+0x24c>
 8002758:	4b24      	ldr	r3, [pc, #144]	; (80027ec <HAL_RCC_OscConfig+0x2b4>)
 800275a:	2200      	movs	r2, #0
 800275c:	601a      	str	r2, [r3, #0]
 800275e:	f7ff f931 	bl	80019c4 <HAL_GetTick>
 8002762:	6138      	str	r0, [r7, #16]
 8002764:	e008      	b.n	8002778 <HAL_RCC_OscConfig+0x240>
 8002766:	f7ff f92d 	bl	80019c4 <HAL_GetTick>
 800276a:	4602      	mov	r2, r0
 800276c:	693b      	ldr	r3, [r7, #16]
 800276e:	1ad3      	subs	r3, r2, r3
 8002770:	2b02      	cmp	r3, #2
 8002772:	d901      	bls.n	8002778 <HAL_RCC_OscConfig+0x240>
 8002774:	2303      	movs	r3, #3
 8002776:	e144      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002778:	4b1a      	ldr	r3, [pc, #104]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 800277a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800277c:	f003 0302 	and.w	r3, r3, #2
 8002780:	2b00      	cmp	r3, #0
 8002782:	d1f0      	bne.n	8002766 <HAL_RCC_OscConfig+0x22e>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	f003 0304 	and.w	r3, r3, #4
 800278c:	2b00      	cmp	r3, #0
 800278e:	f000 80a0 	beq.w	80028d2 <HAL_RCC_OscConfig+0x39a>
 8002792:	2300      	movs	r3, #0
 8002794:	75fb      	strb	r3, [r7, #23]
 8002796:	4b13      	ldr	r3, [pc, #76]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 8002798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800279a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d10f      	bne.n	80027c2 <HAL_RCC_OscConfig+0x28a>
 80027a2:	2300      	movs	r3, #0
 80027a4:	60bb      	str	r3, [r7, #8]
 80027a6:	4b0f      	ldr	r3, [pc, #60]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80027a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027aa:	4a0e      	ldr	r2, [pc, #56]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80027ac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80027b0:	6413      	str	r3, [r2, #64]	; 0x40
 80027b2:	4b0c      	ldr	r3, [pc, #48]	; (80027e4 <HAL_RCC_OscConfig+0x2ac>)
 80027b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80027ba:	60bb      	str	r3, [r7, #8]
 80027bc:	68bb      	ldr	r3, [r7, #8]
 80027be:	2301      	movs	r3, #1
 80027c0:	75fb      	strb	r3, [r7, #23]
 80027c2:	4b0b      	ldr	r3, [pc, #44]	; (80027f0 <HAL_RCC_OscConfig+0x2b8>)
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	d121      	bne.n	8002812 <HAL_RCC_OscConfig+0x2da>
 80027ce:	4b08      	ldr	r3, [pc, #32]	; (80027f0 <HAL_RCC_OscConfig+0x2b8>)
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	4a07      	ldr	r2, [pc, #28]	; (80027f0 <HAL_RCC_OscConfig+0x2b8>)
 80027d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80027d8:	6013      	str	r3, [r2, #0]
 80027da:	f7ff f8f3 	bl	80019c4 <HAL_GetTick>
 80027de:	6138      	str	r0, [r7, #16]
 80027e0:	e011      	b.n	8002806 <HAL_RCC_OscConfig+0x2ce>
 80027e2:	bf00      	nop
 80027e4:	40023800 	.word	0x40023800
 80027e8:	42470000 	.word	0x42470000
 80027ec:	42470e80 	.word	0x42470e80
 80027f0:	40007000 	.word	0x40007000
 80027f4:	f7ff f8e6 	bl	80019c4 <HAL_GetTick>
 80027f8:	4602      	mov	r2, r0
 80027fa:	693b      	ldr	r3, [r7, #16]
 80027fc:	1ad3      	subs	r3, r2, r3
 80027fe:	2b02      	cmp	r3, #2
 8002800:	d901      	bls.n	8002806 <HAL_RCC_OscConfig+0x2ce>
 8002802:	2303      	movs	r3, #3
 8002804:	e0fd      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002806:	4b81      	ldr	r3, [pc, #516]	; (8002a0c <HAL_RCC_OscConfig+0x4d4>)
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800280e:	2b00      	cmp	r3, #0
 8002810:	d0f0      	beq.n	80027f4 <HAL_RCC_OscConfig+0x2bc>
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	689b      	ldr	r3, [r3, #8]
 8002816:	2b01      	cmp	r3, #1
 8002818:	d106      	bne.n	8002828 <HAL_RCC_OscConfig+0x2f0>
 800281a:	4b7d      	ldr	r3, [pc, #500]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 800281c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800281e:	4a7c      	ldr	r2, [pc, #496]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002820:	f043 0301 	orr.w	r3, r3, #1
 8002824:	6713      	str	r3, [r2, #112]	; 0x70
 8002826:	e01c      	b.n	8002862 <HAL_RCC_OscConfig+0x32a>
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	689b      	ldr	r3, [r3, #8]
 800282c:	2b05      	cmp	r3, #5
 800282e:	d10c      	bne.n	800284a <HAL_RCC_OscConfig+0x312>
 8002830:	4b77      	ldr	r3, [pc, #476]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002832:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002834:	4a76      	ldr	r2, [pc, #472]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002836:	f043 0304 	orr.w	r3, r3, #4
 800283a:	6713      	str	r3, [r2, #112]	; 0x70
 800283c:	4b74      	ldr	r3, [pc, #464]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 800283e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002840:	4a73      	ldr	r2, [pc, #460]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002842:	f043 0301 	orr.w	r3, r3, #1
 8002846:	6713      	str	r3, [r2, #112]	; 0x70
 8002848:	e00b      	b.n	8002862 <HAL_RCC_OscConfig+0x32a>
 800284a:	4b71      	ldr	r3, [pc, #452]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 800284c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800284e:	4a70      	ldr	r2, [pc, #448]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002850:	f023 0301 	bic.w	r3, r3, #1
 8002854:	6713      	str	r3, [r2, #112]	; 0x70
 8002856:	4b6e      	ldr	r3, [pc, #440]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002858:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800285a:	4a6d      	ldr	r2, [pc, #436]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 800285c:	f023 0304 	bic.w	r3, r3, #4
 8002860:	6713      	str	r3, [r2, #112]	; 0x70
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	689b      	ldr	r3, [r3, #8]
 8002866:	2b00      	cmp	r3, #0
 8002868:	d015      	beq.n	8002896 <HAL_RCC_OscConfig+0x35e>
 800286a:	f7ff f8ab 	bl	80019c4 <HAL_GetTick>
 800286e:	6138      	str	r0, [r7, #16]
 8002870:	e00a      	b.n	8002888 <HAL_RCC_OscConfig+0x350>
 8002872:	f7ff f8a7 	bl	80019c4 <HAL_GetTick>
 8002876:	4602      	mov	r2, r0
 8002878:	693b      	ldr	r3, [r7, #16]
 800287a:	1ad3      	subs	r3, r2, r3
 800287c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002880:	4293      	cmp	r3, r2
 8002882:	d901      	bls.n	8002888 <HAL_RCC_OscConfig+0x350>
 8002884:	2303      	movs	r3, #3
 8002886:	e0bc      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002888:	4b61      	ldr	r3, [pc, #388]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 800288a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800288c:	f003 0302 	and.w	r3, r3, #2
 8002890:	2b00      	cmp	r3, #0
 8002892:	d0ee      	beq.n	8002872 <HAL_RCC_OscConfig+0x33a>
 8002894:	e014      	b.n	80028c0 <HAL_RCC_OscConfig+0x388>
 8002896:	f7ff f895 	bl	80019c4 <HAL_GetTick>
 800289a:	6138      	str	r0, [r7, #16]
 800289c:	e00a      	b.n	80028b4 <HAL_RCC_OscConfig+0x37c>
 800289e:	f7ff f891 	bl	80019c4 <HAL_GetTick>
 80028a2:	4602      	mov	r2, r0
 80028a4:	693b      	ldr	r3, [r7, #16]
 80028a6:	1ad3      	subs	r3, r2, r3
 80028a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80028ac:	4293      	cmp	r3, r2
 80028ae:	d901      	bls.n	80028b4 <HAL_RCC_OscConfig+0x37c>
 80028b0:	2303      	movs	r3, #3
 80028b2:	e0a6      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 80028b4:	4b56      	ldr	r3, [pc, #344]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 80028b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80028b8:	f003 0302 	and.w	r3, r3, #2
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d1ee      	bne.n	800289e <HAL_RCC_OscConfig+0x366>
 80028c0:	7dfb      	ldrb	r3, [r7, #23]
 80028c2:	2b01      	cmp	r3, #1
 80028c4:	d105      	bne.n	80028d2 <HAL_RCC_OscConfig+0x39a>
 80028c6:	4b52      	ldr	r3, [pc, #328]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 80028c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028ca:	4a51      	ldr	r2, [pc, #324]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 80028cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80028d0:	6413      	str	r3, [r2, #64]	; 0x40
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	699b      	ldr	r3, [r3, #24]
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	f000 8092 	beq.w	8002a00 <HAL_RCC_OscConfig+0x4c8>
 80028dc:	4b4c      	ldr	r3, [pc, #304]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 80028de:	689b      	ldr	r3, [r3, #8]
 80028e0:	f003 030c 	and.w	r3, r3, #12
 80028e4:	2b08      	cmp	r3, #8
 80028e6:	d05c      	beq.n	80029a2 <HAL_RCC_OscConfig+0x46a>
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	699b      	ldr	r3, [r3, #24]
 80028ec:	2b02      	cmp	r3, #2
 80028ee:	d141      	bne.n	8002974 <HAL_RCC_OscConfig+0x43c>
 80028f0:	4b48      	ldr	r3, [pc, #288]	; (8002a14 <HAL_RCC_OscConfig+0x4dc>)
 80028f2:	2200      	movs	r2, #0
 80028f4:	601a      	str	r2, [r3, #0]
 80028f6:	f7ff f865 	bl	80019c4 <HAL_GetTick>
 80028fa:	6138      	str	r0, [r7, #16]
 80028fc:	e008      	b.n	8002910 <HAL_RCC_OscConfig+0x3d8>
 80028fe:	f7ff f861 	bl	80019c4 <HAL_GetTick>
 8002902:	4602      	mov	r2, r0
 8002904:	693b      	ldr	r3, [r7, #16]
 8002906:	1ad3      	subs	r3, r2, r3
 8002908:	2b02      	cmp	r3, #2
 800290a:	d901      	bls.n	8002910 <HAL_RCC_OscConfig+0x3d8>
 800290c:	2303      	movs	r3, #3
 800290e:	e078      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002910:	4b3f      	ldr	r3, [pc, #252]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002918:	2b00      	cmp	r3, #0
 800291a:	d1f0      	bne.n	80028fe <HAL_RCC_OscConfig+0x3c6>
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	69da      	ldr	r2, [r3, #28]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	6a1b      	ldr	r3, [r3, #32]
 8002924:	431a      	orrs	r2, r3
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800292a:	019b      	lsls	r3, r3, #6
 800292c:	431a      	orrs	r2, r3
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002932:	085b      	lsrs	r3, r3, #1
 8002934:	3b01      	subs	r3, #1
 8002936:	041b      	lsls	r3, r3, #16
 8002938:	431a      	orrs	r2, r3
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800293e:	061b      	lsls	r3, r3, #24
 8002940:	4933      	ldr	r1, [pc, #204]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002942:	4313      	orrs	r3, r2
 8002944:	604b      	str	r3, [r1, #4]
 8002946:	4b33      	ldr	r3, [pc, #204]	; (8002a14 <HAL_RCC_OscConfig+0x4dc>)
 8002948:	2201      	movs	r2, #1
 800294a:	601a      	str	r2, [r3, #0]
 800294c:	f7ff f83a 	bl	80019c4 <HAL_GetTick>
 8002950:	6138      	str	r0, [r7, #16]
 8002952:	e008      	b.n	8002966 <HAL_RCC_OscConfig+0x42e>
 8002954:	f7ff f836 	bl	80019c4 <HAL_GetTick>
 8002958:	4602      	mov	r2, r0
 800295a:	693b      	ldr	r3, [r7, #16]
 800295c:	1ad3      	subs	r3, r2, r3
 800295e:	2b02      	cmp	r3, #2
 8002960:	d901      	bls.n	8002966 <HAL_RCC_OscConfig+0x42e>
 8002962:	2303      	movs	r3, #3
 8002964:	e04d      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002966:	4b2a      	ldr	r3, [pc, #168]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800296e:	2b00      	cmp	r3, #0
 8002970:	d0f0      	beq.n	8002954 <HAL_RCC_OscConfig+0x41c>
 8002972:	e045      	b.n	8002a00 <HAL_RCC_OscConfig+0x4c8>
 8002974:	4b27      	ldr	r3, [pc, #156]	; (8002a14 <HAL_RCC_OscConfig+0x4dc>)
 8002976:	2200      	movs	r2, #0
 8002978:	601a      	str	r2, [r3, #0]
 800297a:	f7ff f823 	bl	80019c4 <HAL_GetTick>
 800297e:	6138      	str	r0, [r7, #16]
 8002980:	e008      	b.n	8002994 <HAL_RCC_OscConfig+0x45c>
 8002982:	f7ff f81f 	bl	80019c4 <HAL_GetTick>
 8002986:	4602      	mov	r2, r0
 8002988:	693b      	ldr	r3, [r7, #16]
 800298a:	1ad3      	subs	r3, r2, r3
 800298c:	2b02      	cmp	r3, #2
 800298e:	d901      	bls.n	8002994 <HAL_RCC_OscConfig+0x45c>
 8002990:	2303      	movs	r3, #3
 8002992:	e036      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002994:	4b1e      	ldr	r3, [pc, #120]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 8002996:	681b      	ldr	r3, [r3, #0]
 8002998:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800299c:	2b00      	cmp	r3, #0
 800299e:	d1f0      	bne.n	8002982 <HAL_RCC_OscConfig+0x44a>
 80029a0:	e02e      	b.n	8002a00 <HAL_RCC_OscConfig+0x4c8>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	699b      	ldr	r3, [r3, #24]
 80029a6:	2b01      	cmp	r3, #1
 80029a8:	d101      	bne.n	80029ae <HAL_RCC_OscConfig+0x476>
 80029aa:	2301      	movs	r3, #1
 80029ac:	e029      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 80029ae:	4b18      	ldr	r3, [pc, #96]	; (8002a10 <HAL_RCC_OscConfig+0x4d8>)
 80029b0:	685b      	ldr	r3, [r3, #4]
 80029b2:	60fb      	str	r3, [r7, #12]
 80029b4:	68fb      	ldr	r3, [r7, #12]
 80029b6:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	69db      	ldr	r3, [r3, #28]
 80029be:	429a      	cmp	r2, r3
 80029c0:	d11c      	bne.n	80029fc <HAL_RCC_OscConfig+0x4c4>
 80029c2:	68fb      	ldr	r3, [r7, #12]
 80029c4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	6a1b      	ldr	r3, [r3, #32]
 80029cc:	429a      	cmp	r2, r3
 80029ce:	d115      	bne.n	80029fc <HAL_RCC_OscConfig+0x4c4>
 80029d0:	68fa      	ldr	r2, [r7, #12]
 80029d2:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80029d6:	4013      	ands	r3, r2
 80029d8:	687a      	ldr	r2, [r7, #4]
 80029da:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80029dc:	4293      	cmp	r3, r2
 80029de:	d10d      	bne.n	80029fc <HAL_RCC_OscConfig+0x4c4>
 80029e0:	68fb      	ldr	r3, [r7, #12]
 80029e2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80029ea:	429a      	cmp	r2, r3
 80029ec:	d106      	bne.n	80029fc <HAL_RCC_OscConfig+0x4c4>
 80029ee:	68fb      	ldr	r3, [r7, #12]
 80029f0:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80029f8:	429a      	cmp	r2, r3
 80029fa:	d001      	beq.n	8002a00 <HAL_RCC_OscConfig+0x4c8>
 80029fc:	2301      	movs	r3, #1
 80029fe:	e000      	b.n	8002a02 <HAL_RCC_OscConfig+0x4ca>
 8002a00:	2300      	movs	r3, #0
 8002a02:	4618      	mov	r0, r3
 8002a04:	3718      	adds	r7, #24
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bd80      	pop	{r7, pc}
 8002a0a:	bf00      	nop
 8002a0c:	40007000 	.word	0x40007000
 8002a10:	40023800 	.word	0x40023800
 8002a14:	42470060 	.word	0x42470060

08002a18 <HAL_RCC_ClockConfig>:
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	b084      	sub	sp, #16
 8002a1c:	af00      	add	r7, sp, #0
 8002a1e:	6078      	str	r0, [r7, #4]
 8002a20:	6039      	str	r1, [r7, #0]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d101      	bne.n	8002a2c <HAL_RCC_ClockConfig+0x14>
 8002a28:	2301      	movs	r3, #1
 8002a2a:	e0cc      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002a2c:	4b68      	ldr	r3, [pc, #416]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	f003 030f 	and.w	r3, r3, #15
 8002a34:	683a      	ldr	r2, [r7, #0]
 8002a36:	429a      	cmp	r2, r3
 8002a38:	d90c      	bls.n	8002a54 <HAL_RCC_ClockConfig+0x3c>
 8002a3a:	4b65      	ldr	r3, [pc, #404]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a3c:	683a      	ldr	r2, [r7, #0]
 8002a3e:	b2d2      	uxtb	r2, r2
 8002a40:	701a      	strb	r2, [r3, #0]
 8002a42:	4b63      	ldr	r3, [pc, #396]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	f003 030f 	and.w	r3, r3, #15
 8002a4a:	683a      	ldr	r2, [r7, #0]
 8002a4c:	429a      	cmp	r2, r3
 8002a4e:	d001      	beq.n	8002a54 <HAL_RCC_ClockConfig+0x3c>
 8002a50:	2301      	movs	r3, #1
 8002a52:	e0b8      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f003 0302 	and.w	r3, r3, #2
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d020      	beq.n	8002aa2 <HAL_RCC_ClockConfig+0x8a>
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	f003 0304 	and.w	r3, r3, #4
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d005      	beq.n	8002a78 <HAL_RCC_ClockConfig+0x60>
 8002a6c:	4b59      	ldr	r3, [pc, #356]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	4a58      	ldr	r2, [pc, #352]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a72:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002a76:	6093      	str	r3, [r2, #8]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	f003 0308 	and.w	r3, r3, #8
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d005      	beq.n	8002a90 <HAL_RCC_ClockConfig+0x78>
 8002a84:	4b53      	ldr	r3, [pc, #332]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a86:	689b      	ldr	r3, [r3, #8]
 8002a88:	4a52      	ldr	r2, [pc, #328]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a8a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002a8e:	6093      	str	r3, [r2, #8]
 8002a90:	4b50      	ldr	r3, [pc, #320]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a92:	689b      	ldr	r3, [r3, #8]
 8002a94:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	689b      	ldr	r3, [r3, #8]
 8002a9c:	494d      	ldr	r1, [pc, #308]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a9e:	4313      	orrs	r3, r2
 8002aa0:	608b      	str	r3, [r1, #8]
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	f003 0301 	and.w	r3, r3, #1
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d044      	beq.n	8002b38 <HAL_RCC_ClockConfig+0x120>
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	685b      	ldr	r3, [r3, #4]
 8002ab2:	2b01      	cmp	r3, #1
 8002ab4:	d107      	bne.n	8002ac6 <HAL_RCC_ClockConfig+0xae>
 8002ab6:	4b47      	ldr	r3, [pc, #284]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002abe:	2b00      	cmp	r3, #0
 8002ac0:	d119      	bne.n	8002af6 <HAL_RCC_ClockConfig+0xde>
 8002ac2:	2301      	movs	r3, #1
 8002ac4:	e07f      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	685b      	ldr	r3, [r3, #4]
 8002aca:	2b02      	cmp	r3, #2
 8002acc:	d003      	beq.n	8002ad6 <HAL_RCC_ClockConfig+0xbe>
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	685b      	ldr	r3, [r3, #4]
 8002ad2:	2b03      	cmp	r3, #3
 8002ad4:	d107      	bne.n	8002ae6 <HAL_RCC_ClockConfig+0xce>
 8002ad6:	4b3f      	ldr	r3, [pc, #252]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d109      	bne.n	8002af6 <HAL_RCC_ClockConfig+0xde>
 8002ae2:	2301      	movs	r3, #1
 8002ae4:	e06f      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002ae6:	4b3b      	ldr	r3, [pc, #236]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	f003 0302 	and.w	r3, r3, #2
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d101      	bne.n	8002af6 <HAL_RCC_ClockConfig+0xde>
 8002af2:	2301      	movs	r3, #1
 8002af4:	e067      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002af6:	4b37      	ldr	r3, [pc, #220]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002af8:	689b      	ldr	r3, [r3, #8]
 8002afa:	f023 0203 	bic.w	r2, r3, #3
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	685b      	ldr	r3, [r3, #4]
 8002b02:	4934      	ldr	r1, [pc, #208]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b04:	4313      	orrs	r3, r2
 8002b06:	608b      	str	r3, [r1, #8]
 8002b08:	f7fe ff5c 	bl	80019c4 <HAL_GetTick>
 8002b0c:	60f8      	str	r0, [r7, #12]
 8002b0e:	e00a      	b.n	8002b26 <HAL_RCC_ClockConfig+0x10e>
 8002b10:	f7fe ff58 	bl	80019c4 <HAL_GetTick>
 8002b14:	4602      	mov	r2, r0
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	1ad3      	subs	r3, r2, r3
 8002b1a:	f241 3288 	movw	r2, #5000	; 0x1388
 8002b1e:	4293      	cmp	r3, r2
 8002b20:	d901      	bls.n	8002b26 <HAL_RCC_ClockConfig+0x10e>
 8002b22:	2303      	movs	r3, #3
 8002b24:	e04f      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002b26:	4b2b      	ldr	r3, [pc, #172]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b28:	689b      	ldr	r3, [r3, #8]
 8002b2a:	f003 020c 	and.w	r2, r3, #12
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	685b      	ldr	r3, [r3, #4]
 8002b32:	009b      	lsls	r3, r3, #2
 8002b34:	429a      	cmp	r2, r3
 8002b36:	d1eb      	bne.n	8002b10 <HAL_RCC_ClockConfig+0xf8>
 8002b38:	4b25      	ldr	r3, [pc, #148]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	f003 030f 	and.w	r3, r3, #15
 8002b40:	683a      	ldr	r2, [r7, #0]
 8002b42:	429a      	cmp	r2, r3
 8002b44:	d20c      	bcs.n	8002b60 <HAL_RCC_ClockConfig+0x148>
 8002b46:	4b22      	ldr	r3, [pc, #136]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002b48:	683a      	ldr	r2, [r7, #0]
 8002b4a:	b2d2      	uxtb	r2, r2
 8002b4c:	701a      	strb	r2, [r3, #0]
 8002b4e:	4b20      	ldr	r3, [pc, #128]	; (8002bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	f003 030f 	and.w	r3, r3, #15
 8002b56:	683a      	ldr	r2, [r7, #0]
 8002b58:	429a      	cmp	r2, r3
 8002b5a:	d001      	beq.n	8002b60 <HAL_RCC_ClockConfig+0x148>
 8002b5c:	2301      	movs	r3, #1
 8002b5e:	e032      	b.n	8002bc6 <HAL_RCC_ClockConfig+0x1ae>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	f003 0304 	and.w	r3, r3, #4
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d008      	beq.n	8002b7e <HAL_RCC_ClockConfig+0x166>
 8002b6c:	4b19      	ldr	r3, [pc, #100]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b6e:	689b      	ldr	r3, [r3, #8]
 8002b70:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	68db      	ldr	r3, [r3, #12]
 8002b78:	4916      	ldr	r1, [pc, #88]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b7a:	4313      	orrs	r3, r2
 8002b7c:	608b      	str	r3, [r1, #8]
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	f003 0308 	and.w	r3, r3, #8
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d009      	beq.n	8002b9e <HAL_RCC_ClockConfig+0x186>
 8002b8a:	4b12      	ldr	r3, [pc, #72]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b8c:	689b      	ldr	r3, [r3, #8]
 8002b8e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	691b      	ldr	r3, [r3, #16]
 8002b96:	00db      	lsls	r3, r3, #3
 8002b98:	490e      	ldr	r1, [pc, #56]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002b9a:	4313      	orrs	r3, r2
 8002b9c:	608b      	str	r3, [r1, #8]
 8002b9e:	f000 f821 	bl	8002be4 <HAL_RCC_GetSysClockFreq>
 8002ba2:	4601      	mov	r1, r0
 8002ba4:	4b0b      	ldr	r3, [pc, #44]	; (8002bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ba6:	689b      	ldr	r3, [r3, #8]
 8002ba8:	091b      	lsrs	r3, r3, #4
 8002baa:	f003 030f 	and.w	r3, r3, #15
 8002bae:	4a0a      	ldr	r2, [pc, #40]	; (8002bd8 <HAL_RCC_ClockConfig+0x1c0>)
 8002bb0:	5cd3      	ldrb	r3, [r2, r3]
 8002bb2:	fa21 f303 	lsr.w	r3, r1, r3
 8002bb6:	4a09      	ldr	r2, [pc, #36]	; (8002bdc <HAL_RCC_ClockConfig+0x1c4>)
 8002bb8:	6013      	str	r3, [r2, #0]
 8002bba:	4b09      	ldr	r3, [pc, #36]	; (8002be0 <HAL_RCC_ClockConfig+0x1c8>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	f7fe febc 	bl	800193c <HAL_InitTick>
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	3710      	adds	r7, #16
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	bd80      	pop	{r7, pc}
 8002bce:	bf00      	nop
 8002bd0:	40023c00 	.word	0x40023c00
 8002bd4:	40023800 	.word	0x40023800
 8002bd8:	08003bd4 	.word	0x08003bd4
 8002bdc:	20000000 	.word	0x20000000
 8002be0:	20000004 	.word	0x20000004

08002be4 <HAL_RCC_GetSysClockFreq>:
 8002be4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002be6:	b085      	sub	sp, #20
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	2300      	movs	r3, #0
 8002bec:	607b      	str	r3, [r7, #4]
 8002bee:	2300      	movs	r3, #0
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	603b      	str	r3, [r7, #0]
 8002bf6:	2300      	movs	r3, #0
 8002bf8:	60bb      	str	r3, [r7, #8]
 8002bfa:	4b63      	ldr	r3, [pc, #396]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002bfc:	689b      	ldr	r3, [r3, #8]
 8002bfe:	f003 030c 	and.w	r3, r3, #12
 8002c02:	2b04      	cmp	r3, #4
 8002c04:	d007      	beq.n	8002c16 <HAL_RCC_GetSysClockFreq+0x32>
 8002c06:	2b08      	cmp	r3, #8
 8002c08:	d008      	beq.n	8002c1c <HAL_RCC_GetSysClockFreq+0x38>
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	f040 80b4 	bne.w	8002d78 <HAL_RCC_GetSysClockFreq+0x194>
 8002c10:	4b5e      	ldr	r3, [pc, #376]	; (8002d8c <HAL_RCC_GetSysClockFreq+0x1a8>)
 8002c12:	60bb      	str	r3, [r7, #8]
 8002c14:	e0b3      	b.n	8002d7e <HAL_RCC_GetSysClockFreq+0x19a>
 8002c16:	4b5e      	ldr	r3, [pc, #376]	; (8002d90 <HAL_RCC_GetSysClockFreq+0x1ac>)
 8002c18:	60bb      	str	r3, [r7, #8]
 8002c1a:	e0b0      	b.n	8002d7e <HAL_RCC_GetSysClockFreq+0x19a>
 8002c1c:	4b5a      	ldr	r3, [pc, #360]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002c1e:	685b      	ldr	r3, [r3, #4]
 8002c20:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002c24:	607b      	str	r3, [r7, #4]
 8002c26:	4b58      	ldr	r3, [pc, #352]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002c28:	685b      	ldr	r3, [r3, #4]
 8002c2a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d04a      	beq.n	8002cc8 <HAL_RCC_GetSysClockFreq+0xe4>
 8002c32:	4b55      	ldr	r3, [pc, #340]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002c34:	685b      	ldr	r3, [r3, #4]
 8002c36:	099b      	lsrs	r3, r3, #6
 8002c38:	f04f 0400 	mov.w	r4, #0
 8002c3c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8002c40:	f04f 0200 	mov.w	r2, #0
 8002c44:	ea03 0501 	and.w	r5, r3, r1
 8002c48:	ea04 0602 	and.w	r6, r4, r2
 8002c4c:	4629      	mov	r1, r5
 8002c4e:	4632      	mov	r2, r6
 8002c50:	f04f 0300 	mov.w	r3, #0
 8002c54:	f04f 0400 	mov.w	r4, #0
 8002c58:	0154      	lsls	r4, r2, #5
 8002c5a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8002c5e:	014b      	lsls	r3, r1, #5
 8002c60:	4619      	mov	r1, r3
 8002c62:	4622      	mov	r2, r4
 8002c64:	1b49      	subs	r1, r1, r5
 8002c66:	eb62 0206 	sbc.w	r2, r2, r6
 8002c6a:	f04f 0300 	mov.w	r3, #0
 8002c6e:	f04f 0400 	mov.w	r4, #0
 8002c72:	0194      	lsls	r4, r2, #6
 8002c74:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8002c78:	018b      	lsls	r3, r1, #6
 8002c7a:	1a5b      	subs	r3, r3, r1
 8002c7c:	eb64 0402 	sbc.w	r4, r4, r2
 8002c80:	f04f 0100 	mov.w	r1, #0
 8002c84:	f04f 0200 	mov.w	r2, #0
 8002c88:	00e2      	lsls	r2, r4, #3
 8002c8a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8002c8e:	00d9      	lsls	r1, r3, #3
 8002c90:	460b      	mov	r3, r1
 8002c92:	4614      	mov	r4, r2
 8002c94:	195b      	adds	r3, r3, r5
 8002c96:	eb44 0406 	adc.w	r4, r4, r6
 8002c9a:	f04f 0100 	mov.w	r1, #0
 8002c9e:	f04f 0200 	mov.w	r2, #0
 8002ca2:	0262      	lsls	r2, r4, #9
 8002ca4:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8002ca8:	0259      	lsls	r1, r3, #9
 8002caa:	460b      	mov	r3, r1
 8002cac:	4614      	mov	r4, r2
 8002cae:	4618      	mov	r0, r3
 8002cb0:	4621      	mov	r1, r4
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	f04f 0400 	mov.w	r4, #0
 8002cb8:	461a      	mov	r2, r3
 8002cba:	4623      	mov	r3, r4
 8002cbc:	f7fd fa84 	bl	80001c8 <__aeabi_uldivmod>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	460c      	mov	r4, r1
 8002cc4:	60fb      	str	r3, [r7, #12]
 8002cc6:	e049      	b.n	8002d5c <HAL_RCC_GetSysClockFreq+0x178>
 8002cc8:	4b2f      	ldr	r3, [pc, #188]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002cca:	685b      	ldr	r3, [r3, #4]
 8002ccc:	099b      	lsrs	r3, r3, #6
 8002cce:	f04f 0400 	mov.w	r4, #0
 8002cd2:	f240 11ff 	movw	r1, #511	; 0x1ff
 8002cd6:	f04f 0200 	mov.w	r2, #0
 8002cda:	ea03 0501 	and.w	r5, r3, r1
 8002cde:	ea04 0602 	and.w	r6, r4, r2
 8002ce2:	4629      	mov	r1, r5
 8002ce4:	4632      	mov	r2, r6
 8002ce6:	f04f 0300 	mov.w	r3, #0
 8002cea:	f04f 0400 	mov.w	r4, #0
 8002cee:	0154      	lsls	r4, r2, #5
 8002cf0:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8002cf4:	014b      	lsls	r3, r1, #5
 8002cf6:	4619      	mov	r1, r3
 8002cf8:	4622      	mov	r2, r4
 8002cfa:	1b49      	subs	r1, r1, r5
 8002cfc:	eb62 0206 	sbc.w	r2, r2, r6
 8002d00:	f04f 0300 	mov.w	r3, #0
 8002d04:	f04f 0400 	mov.w	r4, #0
 8002d08:	0194      	lsls	r4, r2, #6
 8002d0a:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8002d0e:	018b      	lsls	r3, r1, #6
 8002d10:	1a5b      	subs	r3, r3, r1
 8002d12:	eb64 0402 	sbc.w	r4, r4, r2
 8002d16:	f04f 0100 	mov.w	r1, #0
 8002d1a:	f04f 0200 	mov.w	r2, #0
 8002d1e:	00e2      	lsls	r2, r4, #3
 8002d20:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8002d24:	00d9      	lsls	r1, r3, #3
 8002d26:	460b      	mov	r3, r1
 8002d28:	4614      	mov	r4, r2
 8002d2a:	195b      	adds	r3, r3, r5
 8002d2c:	eb44 0406 	adc.w	r4, r4, r6
 8002d30:	f04f 0100 	mov.w	r1, #0
 8002d34:	f04f 0200 	mov.w	r2, #0
 8002d38:	02a2      	lsls	r2, r4, #10
 8002d3a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8002d3e:	0299      	lsls	r1, r3, #10
 8002d40:	460b      	mov	r3, r1
 8002d42:	4614      	mov	r4, r2
 8002d44:	4618      	mov	r0, r3
 8002d46:	4621      	mov	r1, r4
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	f04f 0400 	mov.w	r4, #0
 8002d4e:	461a      	mov	r2, r3
 8002d50:	4623      	mov	r3, r4
 8002d52:	f7fd fa39 	bl	80001c8 <__aeabi_uldivmod>
 8002d56:	4603      	mov	r3, r0
 8002d58:	460c      	mov	r4, r1
 8002d5a:	60fb      	str	r3, [r7, #12]
 8002d5c:	4b0a      	ldr	r3, [pc, #40]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002d5e:	685b      	ldr	r3, [r3, #4]
 8002d60:	0c1b      	lsrs	r3, r3, #16
 8002d62:	f003 0303 	and.w	r3, r3, #3
 8002d66:	3301      	adds	r3, #1
 8002d68:	005b      	lsls	r3, r3, #1
 8002d6a:	603b      	str	r3, [r7, #0]
 8002d6c:	68fa      	ldr	r2, [r7, #12]
 8002d6e:	683b      	ldr	r3, [r7, #0]
 8002d70:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d74:	60bb      	str	r3, [r7, #8]
 8002d76:	e002      	b.n	8002d7e <HAL_RCC_GetSysClockFreq+0x19a>
 8002d78:	4b04      	ldr	r3, [pc, #16]	; (8002d8c <HAL_RCC_GetSysClockFreq+0x1a8>)
 8002d7a:	60bb      	str	r3, [r7, #8]
 8002d7c:	bf00      	nop
 8002d7e:	68bb      	ldr	r3, [r7, #8]
 8002d80:	4618      	mov	r0, r3
 8002d82:	3714      	adds	r7, #20
 8002d84:	46bd      	mov	sp, r7
 8002d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002d88:	40023800 	.word	0x40023800
 8002d8c:	00f42400 	.word	0x00f42400
 8002d90:	007a1200 	.word	0x007a1200

08002d94 <HAL_RCC_GetHCLKFreq>:
 8002d94:	b480      	push	{r7}
 8002d96:	af00      	add	r7, sp, #0
 8002d98:	4b03      	ldr	r3, [pc, #12]	; (8002da8 <HAL_RCC_GetHCLKFreq+0x14>)
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	4618      	mov	r0, r3
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002da4:	4770      	bx	lr
 8002da6:	bf00      	nop
 8002da8:	20000000 	.word	0x20000000

08002dac <HAL_RCC_GetPCLK1Freq>:
 8002dac:	b580      	push	{r7, lr}
 8002dae:	af00      	add	r7, sp, #0
 8002db0:	f7ff fff0 	bl	8002d94 <HAL_RCC_GetHCLKFreq>
 8002db4:	4601      	mov	r1, r0
 8002db6:	4b05      	ldr	r3, [pc, #20]	; (8002dcc <HAL_RCC_GetPCLK1Freq+0x20>)
 8002db8:	689b      	ldr	r3, [r3, #8]
 8002dba:	0a9b      	lsrs	r3, r3, #10
 8002dbc:	f003 0307 	and.w	r3, r3, #7
 8002dc0:	4a03      	ldr	r2, [pc, #12]	; (8002dd0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002dc2:	5cd3      	ldrb	r3, [r2, r3]
 8002dc4:	fa21 f303 	lsr.w	r3, r1, r3
 8002dc8:	4618      	mov	r0, r3
 8002dca:	bd80      	pop	{r7, pc}
 8002dcc:	40023800 	.word	0x40023800
 8002dd0:	08003be4 	.word	0x08003be4

08002dd4 <HAL_RCC_GetPCLK2Freq>:
 8002dd4:	b580      	push	{r7, lr}
 8002dd6:	af00      	add	r7, sp, #0
 8002dd8:	f7ff ffdc 	bl	8002d94 <HAL_RCC_GetHCLKFreq>
 8002ddc:	4601      	mov	r1, r0
 8002dde:	4b05      	ldr	r3, [pc, #20]	; (8002df4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002de0:	689b      	ldr	r3, [r3, #8]
 8002de2:	0b5b      	lsrs	r3, r3, #13
 8002de4:	f003 0307 	and.w	r3, r3, #7
 8002de8:	4a03      	ldr	r2, [pc, #12]	; (8002df8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002dea:	5cd3      	ldrb	r3, [r2, r3]
 8002dec:	fa21 f303 	lsr.w	r3, r1, r3
 8002df0:	4618      	mov	r0, r3
 8002df2:	bd80      	pop	{r7, pc}
 8002df4:	40023800 	.word	0x40023800
 8002df8:	08003be4 	.word	0x08003be4

08002dfc <HAL_TIM_Base_Init>:
 8002dfc:	b580      	push	{r7, lr}
 8002dfe:	b082      	sub	sp, #8
 8002e00:	af00      	add	r7, sp, #0
 8002e02:	6078      	str	r0, [r7, #4]
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d101      	bne.n	8002e0e <HAL_TIM_Base_Init+0x12>
 8002e0a:	2301      	movs	r3, #1
 8002e0c:	e01d      	b.n	8002e4a <HAL_TIM_Base_Init+0x4e>
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002e14:	b2db      	uxtb	r3, r3
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d106      	bne.n	8002e28 <HAL_TIM_Base_Init+0x2c>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	2200      	movs	r2, #0
 8002e1e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e22:	6878      	ldr	r0, [r7, #4]
 8002e24:	f7fe fb06 	bl	8001434 <HAL_TIM_Base_MspInit>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	2202      	movs	r2, #2
 8002e2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681a      	ldr	r2, [r3, #0]
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	3304      	adds	r3, #4
 8002e38:	4619      	mov	r1, r3
 8002e3a:	4610      	mov	r0, r2
 8002e3c:	f000 f906 	bl	800304c <TIM_Base_SetConfig>
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2201      	movs	r2, #1
 8002e44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e48:	2300      	movs	r3, #0
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	3708      	adds	r7, #8
 8002e4e:	46bd      	mov	sp, r7
 8002e50:	bd80      	pop	{r7, pc}

08002e52 <HAL_TIM_OnePulse_Init>:
 8002e52:	b580      	push	{r7, lr}
 8002e54:	b082      	sub	sp, #8
 8002e56:	af00      	add	r7, sp, #0
 8002e58:	6078      	str	r0, [r7, #4]
 8002e5a:	6039      	str	r1, [r7, #0]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d101      	bne.n	8002e66 <HAL_TIM_OnePulse_Init+0x14>
 8002e62:	2301      	movs	r3, #1
 8002e64:	e02d      	b.n	8002ec2 <HAL_TIM_OnePulse_Init+0x70>
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002e6c:	b2db      	uxtb	r3, r3
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	d106      	bne.n	8002e80 <HAL_TIM_OnePulse_Init+0x2e>
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	2200      	movs	r2, #0
 8002e76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e7a:	6878      	ldr	r0, [r7, #4]
 8002e7c:	f000 f825 	bl	8002eca <HAL_TIM_OnePulse_MspInit>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	2202      	movs	r2, #2
 8002e84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681a      	ldr	r2, [r3, #0]
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	3304      	adds	r3, #4
 8002e90:	4619      	mov	r1, r3
 8002e92:	4610      	mov	r0, r2
 8002e94:	f000 f8da 	bl	800304c <TIM_Base_SetConfig>
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	681a      	ldr	r2, [r3, #0]
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	f022 0208 	bic.w	r2, r2, #8
 8002ea6:	601a      	str	r2, [r3, #0]
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	6819      	ldr	r1, [r3, #0]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	683a      	ldr	r2, [r7, #0]
 8002eb4:	430a      	orrs	r2, r1
 8002eb6:	601a      	str	r2, [r3, #0]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	2201      	movs	r2, #1
 8002ebc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ec0:	2300      	movs	r3, #0
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	3708      	adds	r7, #8
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	bd80      	pop	{r7, pc}

08002eca <HAL_TIM_OnePulse_MspInit>:
 8002eca:	b480      	push	{r7}
 8002ecc:	b083      	sub	sp, #12
 8002ece:	af00      	add	r7, sp, #0
 8002ed0:	6078      	str	r0, [r7, #4]
 8002ed2:	bf00      	nop
 8002ed4:	370c      	adds	r7, #12
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002edc:	4770      	bx	lr

08002ede <HAL_TIM_ConfigClockSource>:
 8002ede:	b580      	push	{r7, lr}
 8002ee0:	b084      	sub	sp, #16
 8002ee2:	af00      	add	r7, sp, #0
 8002ee4:	6078      	str	r0, [r7, #4]
 8002ee6:	6039      	str	r1, [r7, #0]
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002eee:	2b01      	cmp	r3, #1
 8002ef0:	d101      	bne.n	8002ef6 <HAL_TIM_ConfigClockSource+0x18>
 8002ef2:	2302      	movs	r3, #2
 8002ef4:	e0a6      	b.n	8003044 <HAL_TIM_ConfigClockSource+0x166>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	2201      	movs	r2, #1
 8002efa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	2202      	movs	r2, #2
 8002f02:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	689b      	ldr	r3, [r3, #8]
 8002f0c:	60fb      	str	r3, [r7, #12]
 8002f0e:	68fb      	ldr	r3, [r7, #12]
 8002f10:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002f14:	60fb      	str	r3, [r7, #12]
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	68fa      	ldr	r2, [r7, #12]
 8002f24:	609a      	str	r2, [r3, #8]
 8002f26:	683b      	ldr	r3, [r7, #0]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	2b40      	cmp	r3, #64	; 0x40
 8002f2c:	d067      	beq.n	8002ffe <HAL_TIM_ConfigClockSource+0x120>
 8002f2e:	2b40      	cmp	r3, #64	; 0x40
 8002f30:	d80b      	bhi.n	8002f4a <HAL_TIM_ConfigClockSource+0x6c>
 8002f32:	2b10      	cmp	r3, #16
 8002f34:	d073      	beq.n	800301e <HAL_TIM_ConfigClockSource+0x140>
 8002f36:	2b10      	cmp	r3, #16
 8002f38:	d802      	bhi.n	8002f40 <HAL_TIM_ConfigClockSource+0x62>
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d06f      	beq.n	800301e <HAL_TIM_ConfigClockSource+0x140>
 8002f3e:	e078      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002f40:	2b20      	cmp	r3, #32
 8002f42:	d06c      	beq.n	800301e <HAL_TIM_ConfigClockSource+0x140>
 8002f44:	2b30      	cmp	r3, #48	; 0x30
 8002f46:	d06a      	beq.n	800301e <HAL_TIM_ConfigClockSource+0x140>
 8002f48:	e073      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002f4a:	2b70      	cmp	r3, #112	; 0x70
 8002f4c:	d00d      	beq.n	8002f6a <HAL_TIM_ConfigClockSource+0x8c>
 8002f4e:	2b70      	cmp	r3, #112	; 0x70
 8002f50:	d804      	bhi.n	8002f5c <HAL_TIM_ConfigClockSource+0x7e>
 8002f52:	2b50      	cmp	r3, #80	; 0x50
 8002f54:	d033      	beq.n	8002fbe <HAL_TIM_ConfigClockSource+0xe0>
 8002f56:	2b60      	cmp	r3, #96	; 0x60
 8002f58:	d041      	beq.n	8002fde <HAL_TIM_ConfigClockSource+0x100>
 8002f5a:	e06a      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002f5c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002f60:	d066      	beq.n	8003030 <HAL_TIM_ConfigClockSource+0x152>
 8002f62:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002f66:	d017      	beq.n	8002f98 <HAL_TIM_ConfigClockSource+0xba>
 8002f68:	e063      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	6818      	ldr	r0, [r3, #0]
 8002f6e:	683b      	ldr	r3, [r7, #0]
 8002f70:	6899      	ldr	r1, [r3, #8]
 8002f72:	683b      	ldr	r3, [r7, #0]
 8002f74:	685a      	ldr	r2, [r3, #4]
 8002f76:	683b      	ldr	r3, [r7, #0]
 8002f78:	68db      	ldr	r3, [r3, #12]
 8002f7a:	f000 f981 	bl	8003280 <TIM_ETR_SetConfig>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	689b      	ldr	r3, [r3, #8]
 8002f84:	60fb      	str	r3, [r7, #12]
 8002f86:	68fb      	ldr	r3, [r7, #12]
 8002f88:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002f8c:	60fb      	str	r3, [r7, #12]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	68fa      	ldr	r2, [r7, #12]
 8002f94:	609a      	str	r2, [r3, #8]
 8002f96:	e04c      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	6818      	ldr	r0, [r3, #0]
 8002f9c:	683b      	ldr	r3, [r7, #0]
 8002f9e:	6899      	ldr	r1, [r3, #8]
 8002fa0:	683b      	ldr	r3, [r7, #0]
 8002fa2:	685a      	ldr	r2, [r3, #4]
 8002fa4:	683b      	ldr	r3, [r7, #0]
 8002fa6:	68db      	ldr	r3, [r3, #12]
 8002fa8:	f000 f96a 	bl	8003280 <TIM_ETR_SetConfig>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	689a      	ldr	r2, [r3, #8]
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002fba:	609a      	str	r2, [r3, #8]
 8002fbc:	e039      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	6818      	ldr	r0, [r3, #0]
 8002fc2:	683b      	ldr	r3, [r7, #0]
 8002fc4:	6859      	ldr	r1, [r3, #4]
 8002fc6:	683b      	ldr	r3, [r7, #0]
 8002fc8:	68db      	ldr	r3, [r3, #12]
 8002fca:	461a      	mov	r2, r3
 8002fcc:	f000 f8de 	bl	800318c <TIM_TI1_ConfigInputStage>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	2150      	movs	r1, #80	; 0x50
 8002fd6:	4618      	mov	r0, r3
 8002fd8:	f000 f937 	bl	800324a <TIM_ITRx_SetConfig>
 8002fdc:	e029      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	6818      	ldr	r0, [r3, #0]
 8002fe2:	683b      	ldr	r3, [r7, #0]
 8002fe4:	6859      	ldr	r1, [r3, #4]
 8002fe6:	683b      	ldr	r3, [r7, #0]
 8002fe8:	68db      	ldr	r3, [r3, #12]
 8002fea:	461a      	mov	r2, r3
 8002fec:	f000 f8fd 	bl	80031ea <TIM_TI2_ConfigInputStage>
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	2160      	movs	r1, #96	; 0x60
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f000 f927 	bl	800324a <TIM_ITRx_SetConfig>
 8002ffc:	e019      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6818      	ldr	r0, [r3, #0]
 8003002:	683b      	ldr	r3, [r7, #0]
 8003004:	6859      	ldr	r1, [r3, #4]
 8003006:	683b      	ldr	r3, [r7, #0]
 8003008:	68db      	ldr	r3, [r3, #12]
 800300a:	461a      	mov	r2, r3
 800300c:	f000 f8be 	bl	800318c <TIM_TI1_ConfigInputStage>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	2140      	movs	r1, #64	; 0x40
 8003016:	4618      	mov	r0, r3
 8003018:	f000 f917 	bl	800324a <TIM_ITRx_SetConfig>
 800301c:	e009      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	681a      	ldr	r2, [r3, #0]
 8003022:	683b      	ldr	r3, [r7, #0]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	4619      	mov	r1, r3
 8003028:	4610      	mov	r0, r2
 800302a:	f000 f90e 	bl	800324a <TIM_ITRx_SetConfig>
 800302e:	e000      	b.n	8003032 <HAL_TIM_ConfigClockSource+0x154>
 8003030:	bf00      	nop
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	2201      	movs	r2, #1
 8003036:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	2200      	movs	r2, #0
 800303e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003042:	2300      	movs	r3, #0
 8003044:	4618      	mov	r0, r3
 8003046:	3710      	adds	r7, #16
 8003048:	46bd      	mov	sp, r7
 800304a:	bd80      	pop	{r7, pc}

0800304c <TIM_Base_SetConfig>:
 800304c:	b480      	push	{r7}
 800304e:	b085      	sub	sp, #20
 8003050:	af00      	add	r7, sp, #0
 8003052:	6078      	str	r0, [r7, #4]
 8003054:	6039      	str	r1, [r7, #0]
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	60fb      	str	r3, [r7, #12]
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	4a40      	ldr	r2, [pc, #256]	; (8003160 <TIM_Base_SetConfig+0x114>)
 8003060:	4293      	cmp	r3, r2
 8003062:	d013      	beq.n	800308c <TIM_Base_SetConfig+0x40>
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800306a:	d00f      	beq.n	800308c <TIM_Base_SetConfig+0x40>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	4a3d      	ldr	r2, [pc, #244]	; (8003164 <TIM_Base_SetConfig+0x118>)
 8003070:	4293      	cmp	r3, r2
 8003072:	d00b      	beq.n	800308c <TIM_Base_SetConfig+0x40>
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	4a3c      	ldr	r2, [pc, #240]	; (8003168 <TIM_Base_SetConfig+0x11c>)
 8003078:	4293      	cmp	r3, r2
 800307a:	d007      	beq.n	800308c <TIM_Base_SetConfig+0x40>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	4a3b      	ldr	r2, [pc, #236]	; (800316c <TIM_Base_SetConfig+0x120>)
 8003080:	4293      	cmp	r3, r2
 8003082:	d003      	beq.n	800308c <TIM_Base_SetConfig+0x40>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	4a3a      	ldr	r2, [pc, #232]	; (8003170 <TIM_Base_SetConfig+0x124>)
 8003088:	4293      	cmp	r3, r2
 800308a:	d108      	bne.n	800309e <TIM_Base_SetConfig+0x52>
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003092:	60fb      	str	r3, [r7, #12]
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	685b      	ldr	r3, [r3, #4]
 8003098:	68fa      	ldr	r2, [r7, #12]
 800309a:	4313      	orrs	r3, r2
 800309c:	60fb      	str	r3, [r7, #12]
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	4a2f      	ldr	r2, [pc, #188]	; (8003160 <TIM_Base_SetConfig+0x114>)
 80030a2:	4293      	cmp	r3, r2
 80030a4:	d02b      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80030ac:	d027      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	4a2c      	ldr	r2, [pc, #176]	; (8003164 <TIM_Base_SetConfig+0x118>)
 80030b2:	4293      	cmp	r3, r2
 80030b4:	d023      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	4a2b      	ldr	r2, [pc, #172]	; (8003168 <TIM_Base_SetConfig+0x11c>)
 80030ba:	4293      	cmp	r3, r2
 80030bc:	d01f      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	4a2a      	ldr	r2, [pc, #168]	; (800316c <TIM_Base_SetConfig+0x120>)
 80030c2:	4293      	cmp	r3, r2
 80030c4:	d01b      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	4a29      	ldr	r2, [pc, #164]	; (8003170 <TIM_Base_SetConfig+0x124>)
 80030ca:	4293      	cmp	r3, r2
 80030cc:	d017      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	4a28      	ldr	r2, [pc, #160]	; (8003174 <TIM_Base_SetConfig+0x128>)
 80030d2:	4293      	cmp	r3, r2
 80030d4:	d013      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	4a27      	ldr	r2, [pc, #156]	; (8003178 <TIM_Base_SetConfig+0x12c>)
 80030da:	4293      	cmp	r3, r2
 80030dc:	d00f      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	4a26      	ldr	r2, [pc, #152]	; (800317c <TIM_Base_SetConfig+0x130>)
 80030e2:	4293      	cmp	r3, r2
 80030e4:	d00b      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	4a25      	ldr	r2, [pc, #148]	; (8003180 <TIM_Base_SetConfig+0x134>)
 80030ea:	4293      	cmp	r3, r2
 80030ec:	d007      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	4a24      	ldr	r2, [pc, #144]	; (8003184 <TIM_Base_SetConfig+0x138>)
 80030f2:	4293      	cmp	r3, r2
 80030f4:	d003      	beq.n	80030fe <TIM_Base_SetConfig+0xb2>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	4a23      	ldr	r2, [pc, #140]	; (8003188 <TIM_Base_SetConfig+0x13c>)
 80030fa:	4293      	cmp	r3, r2
 80030fc:	d108      	bne.n	8003110 <TIM_Base_SetConfig+0xc4>
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003104:	60fb      	str	r3, [r7, #12]
 8003106:	683b      	ldr	r3, [r7, #0]
 8003108:	68db      	ldr	r3, [r3, #12]
 800310a:	68fa      	ldr	r2, [r7, #12]
 800310c:	4313      	orrs	r3, r2
 800310e:	60fb      	str	r3, [r7, #12]
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003116:	683b      	ldr	r3, [r7, #0]
 8003118:	695b      	ldr	r3, [r3, #20]
 800311a:	4313      	orrs	r3, r2
 800311c:	60fb      	str	r3, [r7, #12]
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	68fa      	ldr	r2, [r7, #12]
 8003122:	601a      	str	r2, [r3, #0]
 8003124:	683b      	ldr	r3, [r7, #0]
 8003126:	689a      	ldr	r2, [r3, #8]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	62da      	str	r2, [r3, #44]	; 0x2c
 800312c:	683b      	ldr	r3, [r7, #0]
 800312e:	681a      	ldr	r2, [r3, #0]
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	629a      	str	r2, [r3, #40]	; 0x28
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	4a0a      	ldr	r2, [pc, #40]	; (8003160 <TIM_Base_SetConfig+0x114>)
 8003138:	4293      	cmp	r3, r2
 800313a:	d003      	beq.n	8003144 <TIM_Base_SetConfig+0xf8>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	4a0c      	ldr	r2, [pc, #48]	; (8003170 <TIM_Base_SetConfig+0x124>)
 8003140:	4293      	cmp	r3, r2
 8003142:	d103      	bne.n	800314c <TIM_Base_SetConfig+0x100>
 8003144:	683b      	ldr	r3, [r7, #0]
 8003146:	691a      	ldr	r2, [r3, #16]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	631a      	str	r2, [r3, #48]	; 0x30
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	2201      	movs	r2, #1
 8003150:	615a      	str	r2, [r3, #20]
 8003152:	bf00      	nop
 8003154:	3714      	adds	r7, #20
 8003156:	46bd      	mov	sp, r7
 8003158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800315c:	4770      	bx	lr
 800315e:	bf00      	nop
 8003160:	40010000 	.word	0x40010000
 8003164:	40000400 	.word	0x40000400
 8003168:	40000800 	.word	0x40000800
 800316c:	40000c00 	.word	0x40000c00
 8003170:	40010400 	.word	0x40010400
 8003174:	40014000 	.word	0x40014000
 8003178:	40014400 	.word	0x40014400
 800317c:	40014800 	.word	0x40014800
 8003180:	40001800 	.word	0x40001800
 8003184:	40001c00 	.word	0x40001c00
 8003188:	40002000 	.word	0x40002000

0800318c <TIM_TI1_ConfigInputStage>:
 800318c:	b480      	push	{r7}
 800318e:	b087      	sub	sp, #28
 8003190:	af00      	add	r7, sp, #0
 8003192:	60f8      	str	r0, [r7, #12]
 8003194:	60b9      	str	r1, [r7, #8]
 8003196:	607a      	str	r2, [r7, #4]
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	6a1b      	ldr	r3, [r3, #32]
 800319c:	617b      	str	r3, [r7, #20]
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	6a1b      	ldr	r3, [r3, #32]
 80031a2:	f023 0201 	bic.w	r2, r3, #1
 80031a6:	68fb      	ldr	r3, [r7, #12]
 80031a8:	621a      	str	r2, [r3, #32]
 80031aa:	68fb      	ldr	r3, [r7, #12]
 80031ac:	699b      	ldr	r3, [r3, #24]
 80031ae:	613b      	str	r3, [r7, #16]
 80031b0:	693b      	ldr	r3, [r7, #16]
 80031b2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80031b6:	613b      	str	r3, [r7, #16]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	011b      	lsls	r3, r3, #4
 80031bc:	693a      	ldr	r2, [r7, #16]
 80031be:	4313      	orrs	r3, r2
 80031c0:	613b      	str	r3, [r7, #16]
 80031c2:	697b      	ldr	r3, [r7, #20]
 80031c4:	f023 030a 	bic.w	r3, r3, #10
 80031c8:	617b      	str	r3, [r7, #20]
 80031ca:	697a      	ldr	r2, [r7, #20]
 80031cc:	68bb      	ldr	r3, [r7, #8]
 80031ce:	4313      	orrs	r3, r2
 80031d0:	617b      	str	r3, [r7, #20]
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	693a      	ldr	r2, [r7, #16]
 80031d6:	619a      	str	r2, [r3, #24]
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	697a      	ldr	r2, [r7, #20]
 80031dc:	621a      	str	r2, [r3, #32]
 80031de:	bf00      	nop
 80031e0:	371c      	adds	r7, #28
 80031e2:	46bd      	mov	sp, r7
 80031e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e8:	4770      	bx	lr

080031ea <TIM_TI2_ConfigInputStage>:
 80031ea:	b480      	push	{r7}
 80031ec:	b087      	sub	sp, #28
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	60f8      	str	r0, [r7, #12]
 80031f2:	60b9      	str	r1, [r7, #8]
 80031f4:	607a      	str	r2, [r7, #4]
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	6a1b      	ldr	r3, [r3, #32]
 80031fa:	f023 0210 	bic.w	r2, r3, #16
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	621a      	str	r2, [r3, #32]
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	699b      	ldr	r3, [r3, #24]
 8003206:	617b      	str	r3, [r7, #20]
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	6a1b      	ldr	r3, [r3, #32]
 800320c:	613b      	str	r3, [r7, #16]
 800320e:	697b      	ldr	r3, [r7, #20]
 8003210:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003214:	617b      	str	r3, [r7, #20]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	031b      	lsls	r3, r3, #12
 800321a:	697a      	ldr	r2, [r7, #20]
 800321c:	4313      	orrs	r3, r2
 800321e:	617b      	str	r3, [r7, #20]
 8003220:	693b      	ldr	r3, [r7, #16]
 8003222:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003226:	613b      	str	r3, [r7, #16]
 8003228:	68bb      	ldr	r3, [r7, #8]
 800322a:	011b      	lsls	r3, r3, #4
 800322c:	693a      	ldr	r2, [r7, #16]
 800322e:	4313      	orrs	r3, r2
 8003230:	613b      	str	r3, [r7, #16]
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	697a      	ldr	r2, [r7, #20]
 8003236:	619a      	str	r2, [r3, #24]
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	693a      	ldr	r2, [r7, #16]
 800323c:	621a      	str	r2, [r3, #32]
 800323e:	bf00      	nop
 8003240:	371c      	adds	r7, #28
 8003242:	46bd      	mov	sp, r7
 8003244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003248:	4770      	bx	lr

0800324a <TIM_ITRx_SetConfig>:
 800324a:	b480      	push	{r7}
 800324c:	b085      	sub	sp, #20
 800324e:	af00      	add	r7, sp, #0
 8003250:	6078      	str	r0, [r7, #4]
 8003252:	6039      	str	r1, [r7, #0]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	689b      	ldr	r3, [r3, #8]
 8003258:	60fb      	str	r3, [r7, #12]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003260:	60fb      	str	r3, [r7, #12]
 8003262:	683a      	ldr	r2, [r7, #0]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	4313      	orrs	r3, r2
 8003268:	f043 0307 	orr.w	r3, r3, #7
 800326c:	60fb      	str	r3, [r7, #12]
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	68fa      	ldr	r2, [r7, #12]
 8003272:	609a      	str	r2, [r3, #8]
 8003274:	bf00      	nop
 8003276:	3714      	adds	r7, #20
 8003278:	46bd      	mov	sp, r7
 800327a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800327e:	4770      	bx	lr

08003280 <TIM_ETR_SetConfig>:
 8003280:	b480      	push	{r7}
 8003282:	b087      	sub	sp, #28
 8003284:	af00      	add	r7, sp, #0
 8003286:	60f8      	str	r0, [r7, #12]
 8003288:	60b9      	str	r1, [r7, #8]
 800328a:	607a      	str	r2, [r7, #4]
 800328c:	603b      	str	r3, [r7, #0]
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	689b      	ldr	r3, [r3, #8]
 8003292:	617b      	str	r3, [r7, #20]
 8003294:	697b      	ldr	r3, [r7, #20]
 8003296:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800329a:	617b      	str	r3, [r7, #20]
 800329c:	683b      	ldr	r3, [r7, #0]
 800329e:	021a      	lsls	r2, r3, #8
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	431a      	orrs	r2, r3
 80032a4:	68bb      	ldr	r3, [r7, #8]
 80032a6:	4313      	orrs	r3, r2
 80032a8:	697a      	ldr	r2, [r7, #20]
 80032aa:	4313      	orrs	r3, r2
 80032ac:	617b      	str	r3, [r7, #20]
 80032ae:	68fb      	ldr	r3, [r7, #12]
 80032b0:	697a      	ldr	r2, [r7, #20]
 80032b2:	609a      	str	r2, [r3, #8]
 80032b4:	bf00      	nop
 80032b6:	371c      	adds	r7, #28
 80032b8:	46bd      	mov	sp, r7
 80032ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032be:	4770      	bx	lr

080032c0 <HAL_TIMEx_MasterConfigSynchronization>:
 80032c0:	b480      	push	{r7}
 80032c2:	b085      	sub	sp, #20
 80032c4:	af00      	add	r7, sp, #0
 80032c6:	6078      	str	r0, [r7, #4]
 80032c8:	6039      	str	r1, [r7, #0]
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80032d0:	2b01      	cmp	r3, #1
 80032d2:	d101      	bne.n	80032d8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80032d4:	2302      	movs	r3, #2
 80032d6:	e05a      	b.n	800338e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	2201      	movs	r2, #1
 80032dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2202      	movs	r2, #2
 80032e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	685b      	ldr	r3, [r3, #4]
 80032ee:	60fb      	str	r3, [r7, #12]
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	689b      	ldr	r3, [r3, #8]
 80032f6:	60bb      	str	r3, [r7, #8]
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032fe:	60fb      	str	r3, [r7, #12]
 8003300:	683b      	ldr	r3, [r7, #0]
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	68fa      	ldr	r2, [r7, #12]
 8003306:	4313      	orrs	r3, r2
 8003308:	60fb      	str	r3, [r7, #12]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	68fa      	ldr	r2, [r7, #12]
 8003310:	605a      	str	r2, [r3, #4]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	4a21      	ldr	r2, [pc, #132]	; (800339c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8003318:	4293      	cmp	r3, r2
 800331a:	d022      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003324:	d01d      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	4a1d      	ldr	r2, [pc, #116]	; (80033a0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800332c:	4293      	cmp	r3, r2
 800332e:	d018      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	4a1b      	ldr	r2, [pc, #108]	; (80033a4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8003336:	4293      	cmp	r3, r2
 8003338:	d013      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	4a1a      	ldr	r2, [pc, #104]	; (80033a8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8003340:	4293      	cmp	r3, r2
 8003342:	d00e      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	4a18      	ldr	r2, [pc, #96]	; (80033ac <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800334a:	4293      	cmp	r3, r2
 800334c:	d009      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	4a17      	ldr	r2, [pc, #92]	; (80033b0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8003354:	4293      	cmp	r3, r2
 8003356:	d004      	beq.n	8003362 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	4a15      	ldr	r2, [pc, #84]	; (80033b4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800335e:	4293      	cmp	r3, r2
 8003360:	d10c      	bne.n	800337c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8003362:	68bb      	ldr	r3, [r7, #8]
 8003364:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003368:	60bb      	str	r3, [r7, #8]
 800336a:	683b      	ldr	r3, [r7, #0]
 800336c:	685b      	ldr	r3, [r3, #4]
 800336e:	68ba      	ldr	r2, [r7, #8]
 8003370:	4313      	orrs	r3, r2
 8003372:	60bb      	str	r3, [r7, #8]
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	68ba      	ldr	r2, [r7, #8]
 800337a:	609a      	str	r2, [r3, #8]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	2201      	movs	r2, #1
 8003380:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	2200      	movs	r2, #0
 8003388:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800338c:	2300      	movs	r3, #0
 800338e:	4618      	mov	r0, r3
 8003390:	3714      	adds	r7, #20
 8003392:	46bd      	mov	sp, r7
 8003394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003398:	4770      	bx	lr
 800339a:	bf00      	nop
 800339c:	40010000 	.word	0x40010000
 80033a0:	40000400 	.word	0x40000400
 80033a4:	40000800 	.word	0x40000800
 80033a8:	40000c00 	.word	0x40000c00
 80033ac:	40010400 	.word	0x40010400
 80033b0:	40014000 	.word	0x40014000
 80033b4:	40001800 	.word	0x40001800

080033b8 <HAL_UART_Init>:
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b082      	sub	sp, #8
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d101      	bne.n	80033ca <HAL_UART_Init+0x12>
 80033c6:	2301      	movs	r3, #1
 80033c8:	e03f      	b.n	800344a <HAL_UART_Init+0x92>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80033d0:	b2db      	uxtb	r3, r3
 80033d2:	2b00      	cmp	r3, #0
 80033d4:	d106      	bne.n	80033e4 <HAL_UART_Init+0x2c>
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	2200      	movs	r2, #0
 80033da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80033de:	6878      	ldr	r0, [r7, #4]
 80033e0:	f7fe f864 	bl	80014ac <HAL_UART_MspInit>
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	2224      	movs	r2, #36	; 0x24
 80033e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	68da      	ldr	r2, [r3, #12]
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80033fa:	60da      	str	r2, [r3, #12]
 80033fc:	6878      	ldr	r0, [r7, #4]
 80033fe:	f000 f829 	bl	8003454 <UART_SetConfig>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	691a      	ldr	r2, [r3, #16]
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003410:	611a      	str	r2, [r3, #16]
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	695a      	ldr	r2, [r3, #20]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003420:	615a      	str	r2, [r3, #20]
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	68da      	ldr	r2, [r3, #12]
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003430:	60da      	str	r2, [r3, #12]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	2200      	movs	r2, #0
 8003436:	63da      	str	r2, [r3, #60]	; 0x3c
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	2220      	movs	r2, #32
 800343c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	2220      	movs	r2, #32
 8003444:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8003448:	2300      	movs	r3, #0
 800344a:	4618      	mov	r0, r3
 800344c:	3708      	adds	r7, #8
 800344e:	46bd      	mov	sp, r7
 8003450:	bd80      	pop	{r7, pc}
	...

08003454 <UART_SetConfig>:
 8003454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003458:	b085      	sub	sp, #20
 800345a:	af00      	add	r7, sp, #0
 800345c:	6078      	str	r0, [r7, #4]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	681b      	ldr	r3, [r3, #0]
 8003462:	691b      	ldr	r3, [r3, #16]
 8003464:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	68da      	ldr	r2, [r3, #12]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	430a      	orrs	r2, r1
 8003472:	611a      	str	r2, [r3, #16]
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	689a      	ldr	r2, [r3, #8]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	691b      	ldr	r3, [r3, #16]
 800347c:	431a      	orrs	r2, r3
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	695b      	ldr	r3, [r3, #20]
 8003482:	431a      	orrs	r2, r3
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	69db      	ldr	r3, [r3, #28]
 8003488:	4313      	orrs	r3, r2
 800348a:	60fb      	str	r3, [r7, #12]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	68db      	ldr	r3, [r3, #12]
 8003492:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8003496:	f023 030c 	bic.w	r3, r3, #12
 800349a:	687a      	ldr	r2, [r7, #4]
 800349c:	6812      	ldr	r2, [r2, #0]
 800349e:	68f9      	ldr	r1, [r7, #12]
 80034a0:	430b      	orrs	r3, r1
 80034a2:	60d3      	str	r3, [r2, #12]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	695b      	ldr	r3, [r3, #20]
 80034aa:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	699a      	ldr	r2, [r3, #24]
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	430a      	orrs	r2, r1
 80034b8:	615a      	str	r2, [r3, #20]
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	69db      	ldr	r3, [r3, #28]
 80034be:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80034c2:	f040 818b 	bne.w	80037dc <UART_SetConfig+0x388>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4ac1      	ldr	r2, [pc, #772]	; (80037d0 <UART_SetConfig+0x37c>)
 80034cc:	4293      	cmp	r3, r2
 80034ce:	d005      	beq.n	80034dc <UART_SetConfig+0x88>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	4abf      	ldr	r2, [pc, #764]	; (80037d4 <UART_SetConfig+0x380>)
 80034d6:	4293      	cmp	r3, r2
 80034d8:	f040 80bd 	bne.w	8003656 <UART_SetConfig+0x202>
 80034dc:	f7ff fc7a 	bl	8002dd4 <HAL_RCC_GetPCLK2Freq>
 80034e0:	60b8      	str	r0, [r7, #8]
 80034e2:	68bb      	ldr	r3, [r7, #8]
 80034e4:	461d      	mov	r5, r3
 80034e6:	f04f 0600 	mov.w	r6, #0
 80034ea:	46a8      	mov	r8, r5
 80034ec:	46b1      	mov	r9, r6
 80034ee:	eb18 0308 	adds.w	r3, r8, r8
 80034f2:	eb49 0409 	adc.w	r4, r9, r9
 80034f6:	4698      	mov	r8, r3
 80034f8:	46a1      	mov	r9, r4
 80034fa:	eb18 0805 	adds.w	r8, r8, r5
 80034fe:	eb49 0906 	adc.w	r9, r9, r6
 8003502:	f04f 0100 	mov.w	r1, #0
 8003506:	f04f 0200 	mov.w	r2, #0
 800350a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800350e:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8003512:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8003516:	4688      	mov	r8, r1
 8003518:	4691      	mov	r9, r2
 800351a:	eb18 0005 	adds.w	r0, r8, r5
 800351e:	eb49 0106 	adc.w	r1, r9, r6
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	685b      	ldr	r3, [r3, #4]
 8003526:	461d      	mov	r5, r3
 8003528:	f04f 0600 	mov.w	r6, #0
 800352c:	196b      	adds	r3, r5, r5
 800352e:	eb46 0406 	adc.w	r4, r6, r6
 8003532:	461a      	mov	r2, r3
 8003534:	4623      	mov	r3, r4
 8003536:	f7fc fe47 	bl	80001c8 <__aeabi_uldivmod>
 800353a:	4603      	mov	r3, r0
 800353c:	460c      	mov	r4, r1
 800353e:	461a      	mov	r2, r3
 8003540:	4ba5      	ldr	r3, [pc, #660]	; (80037d8 <UART_SetConfig+0x384>)
 8003542:	fba3 2302 	umull	r2, r3, r3, r2
 8003546:	095b      	lsrs	r3, r3, #5
 8003548:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800354c:	68bb      	ldr	r3, [r7, #8]
 800354e:	461d      	mov	r5, r3
 8003550:	f04f 0600 	mov.w	r6, #0
 8003554:	46a9      	mov	r9, r5
 8003556:	46b2      	mov	sl, r6
 8003558:	eb19 0309 	adds.w	r3, r9, r9
 800355c:	eb4a 040a 	adc.w	r4, sl, sl
 8003560:	4699      	mov	r9, r3
 8003562:	46a2      	mov	sl, r4
 8003564:	eb19 0905 	adds.w	r9, r9, r5
 8003568:	eb4a 0a06 	adc.w	sl, sl, r6
 800356c:	f04f 0100 	mov.w	r1, #0
 8003570:	f04f 0200 	mov.w	r2, #0
 8003574:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003578:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800357c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8003580:	4689      	mov	r9, r1
 8003582:	4692      	mov	sl, r2
 8003584:	eb19 0005 	adds.w	r0, r9, r5
 8003588:	eb4a 0106 	adc.w	r1, sl, r6
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	685b      	ldr	r3, [r3, #4]
 8003590:	461d      	mov	r5, r3
 8003592:	f04f 0600 	mov.w	r6, #0
 8003596:	196b      	adds	r3, r5, r5
 8003598:	eb46 0406 	adc.w	r4, r6, r6
 800359c:	461a      	mov	r2, r3
 800359e:	4623      	mov	r3, r4
 80035a0:	f7fc fe12 	bl	80001c8 <__aeabi_uldivmod>
 80035a4:	4603      	mov	r3, r0
 80035a6:	460c      	mov	r4, r1
 80035a8:	461a      	mov	r2, r3
 80035aa:	4b8b      	ldr	r3, [pc, #556]	; (80037d8 <UART_SetConfig+0x384>)
 80035ac:	fba3 1302 	umull	r1, r3, r3, r2
 80035b0:	095b      	lsrs	r3, r3, #5
 80035b2:	2164      	movs	r1, #100	; 0x64
 80035b4:	fb01 f303 	mul.w	r3, r1, r3
 80035b8:	1ad3      	subs	r3, r2, r3
 80035ba:	00db      	lsls	r3, r3, #3
 80035bc:	3332      	adds	r3, #50	; 0x32
 80035be:	4a86      	ldr	r2, [pc, #536]	; (80037d8 <UART_SetConfig+0x384>)
 80035c0:	fba2 2303 	umull	r2, r3, r2, r3
 80035c4:	095b      	lsrs	r3, r3, #5
 80035c6:	005b      	lsls	r3, r3, #1
 80035c8:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80035cc:	4498      	add	r8, r3
 80035ce:	68bb      	ldr	r3, [r7, #8]
 80035d0:	461d      	mov	r5, r3
 80035d2:	f04f 0600 	mov.w	r6, #0
 80035d6:	46a9      	mov	r9, r5
 80035d8:	46b2      	mov	sl, r6
 80035da:	eb19 0309 	adds.w	r3, r9, r9
 80035de:	eb4a 040a 	adc.w	r4, sl, sl
 80035e2:	4699      	mov	r9, r3
 80035e4:	46a2      	mov	sl, r4
 80035e6:	eb19 0905 	adds.w	r9, r9, r5
 80035ea:	eb4a 0a06 	adc.w	sl, sl, r6
 80035ee:	f04f 0100 	mov.w	r1, #0
 80035f2:	f04f 0200 	mov.w	r2, #0
 80035f6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80035fa:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80035fe:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8003602:	4689      	mov	r9, r1
 8003604:	4692      	mov	sl, r2
 8003606:	eb19 0005 	adds.w	r0, r9, r5
 800360a:	eb4a 0106 	adc.w	r1, sl, r6
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	685b      	ldr	r3, [r3, #4]
 8003612:	461d      	mov	r5, r3
 8003614:	f04f 0600 	mov.w	r6, #0
 8003618:	196b      	adds	r3, r5, r5
 800361a:	eb46 0406 	adc.w	r4, r6, r6
 800361e:	461a      	mov	r2, r3
 8003620:	4623      	mov	r3, r4
 8003622:	f7fc fdd1 	bl	80001c8 <__aeabi_uldivmod>
 8003626:	4603      	mov	r3, r0
 8003628:	460c      	mov	r4, r1
 800362a:	461a      	mov	r2, r3
 800362c:	4b6a      	ldr	r3, [pc, #424]	; (80037d8 <UART_SetConfig+0x384>)
 800362e:	fba3 1302 	umull	r1, r3, r3, r2
 8003632:	095b      	lsrs	r3, r3, #5
 8003634:	2164      	movs	r1, #100	; 0x64
 8003636:	fb01 f303 	mul.w	r3, r1, r3
 800363a:	1ad3      	subs	r3, r2, r3
 800363c:	00db      	lsls	r3, r3, #3
 800363e:	3332      	adds	r3, #50	; 0x32
 8003640:	4a65      	ldr	r2, [pc, #404]	; (80037d8 <UART_SetConfig+0x384>)
 8003642:	fba2 2303 	umull	r2, r3, r2, r3
 8003646:	095b      	lsrs	r3, r3, #5
 8003648:	f003 0207 	and.w	r2, r3, #7
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	4442      	add	r2, r8
 8003652:	609a      	str	r2, [r3, #8]
 8003654:	e26f      	b.n	8003b36 <UART_SetConfig+0x6e2>
 8003656:	f7ff fba9 	bl	8002dac <HAL_RCC_GetPCLK1Freq>
 800365a:	60b8      	str	r0, [r7, #8]
 800365c:	68bb      	ldr	r3, [r7, #8]
 800365e:	461d      	mov	r5, r3
 8003660:	f04f 0600 	mov.w	r6, #0
 8003664:	46a8      	mov	r8, r5
 8003666:	46b1      	mov	r9, r6
 8003668:	eb18 0308 	adds.w	r3, r8, r8
 800366c:	eb49 0409 	adc.w	r4, r9, r9
 8003670:	4698      	mov	r8, r3
 8003672:	46a1      	mov	r9, r4
 8003674:	eb18 0805 	adds.w	r8, r8, r5
 8003678:	eb49 0906 	adc.w	r9, r9, r6
 800367c:	f04f 0100 	mov.w	r1, #0
 8003680:	f04f 0200 	mov.w	r2, #0
 8003684:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8003688:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800368c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8003690:	4688      	mov	r8, r1
 8003692:	4691      	mov	r9, r2
 8003694:	eb18 0005 	adds.w	r0, r8, r5
 8003698:	eb49 0106 	adc.w	r1, r9, r6
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	685b      	ldr	r3, [r3, #4]
 80036a0:	461d      	mov	r5, r3
 80036a2:	f04f 0600 	mov.w	r6, #0
 80036a6:	196b      	adds	r3, r5, r5
 80036a8:	eb46 0406 	adc.w	r4, r6, r6
 80036ac:	461a      	mov	r2, r3
 80036ae:	4623      	mov	r3, r4
 80036b0:	f7fc fd8a 	bl	80001c8 <__aeabi_uldivmod>
 80036b4:	4603      	mov	r3, r0
 80036b6:	460c      	mov	r4, r1
 80036b8:	461a      	mov	r2, r3
 80036ba:	4b47      	ldr	r3, [pc, #284]	; (80037d8 <UART_SetConfig+0x384>)
 80036bc:	fba3 2302 	umull	r2, r3, r3, r2
 80036c0:	095b      	lsrs	r3, r3, #5
 80036c2:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80036c6:	68bb      	ldr	r3, [r7, #8]
 80036c8:	461d      	mov	r5, r3
 80036ca:	f04f 0600 	mov.w	r6, #0
 80036ce:	46a9      	mov	r9, r5
 80036d0:	46b2      	mov	sl, r6
 80036d2:	eb19 0309 	adds.w	r3, r9, r9
 80036d6:	eb4a 040a 	adc.w	r4, sl, sl
 80036da:	4699      	mov	r9, r3
 80036dc:	46a2      	mov	sl, r4
 80036de:	eb19 0905 	adds.w	r9, r9, r5
 80036e2:	eb4a 0a06 	adc.w	sl, sl, r6
 80036e6:	f04f 0100 	mov.w	r1, #0
 80036ea:	f04f 0200 	mov.w	r2, #0
 80036ee:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80036f2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80036f6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80036fa:	4689      	mov	r9, r1
 80036fc:	4692      	mov	sl, r2
 80036fe:	eb19 0005 	adds.w	r0, r9, r5
 8003702:	eb4a 0106 	adc.w	r1, sl, r6
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	685b      	ldr	r3, [r3, #4]
 800370a:	461d      	mov	r5, r3
 800370c:	f04f 0600 	mov.w	r6, #0
 8003710:	196b      	adds	r3, r5, r5
 8003712:	eb46 0406 	adc.w	r4, r6, r6
 8003716:	461a      	mov	r2, r3
 8003718:	4623      	mov	r3, r4
 800371a:	f7fc fd55 	bl	80001c8 <__aeabi_uldivmod>
 800371e:	4603      	mov	r3, r0
 8003720:	460c      	mov	r4, r1
 8003722:	461a      	mov	r2, r3
 8003724:	4b2c      	ldr	r3, [pc, #176]	; (80037d8 <UART_SetConfig+0x384>)
 8003726:	fba3 1302 	umull	r1, r3, r3, r2
 800372a:	095b      	lsrs	r3, r3, #5
 800372c:	2164      	movs	r1, #100	; 0x64
 800372e:	fb01 f303 	mul.w	r3, r1, r3
 8003732:	1ad3      	subs	r3, r2, r3
 8003734:	00db      	lsls	r3, r3, #3
 8003736:	3332      	adds	r3, #50	; 0x32
 8003738:	4a27      	ldr	r2, [pc, #156]	; (80037d8 <UART_SetConfig+0x384>)
 800373a:	fba2 2303 	umull	r2, r3, r2, r3
 800373e:	095b      	lsrs	r3, r3, #5
 8003740:	005b      	lsls	r3, r3, #1
 8003742:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003746:	4498      	add	r8, r3
 8003748:	68bb      	ldr	r3, [r7, #8]
 800374a:	461d      	mov	r5, r3
 800374c:	f04f 0600 	mov.w	r6, #0
 8003750:	46a9      	mov	r9, r5
 8003752:	46b2      	mov	sl, r6
 8003754:	eb19 0309 	adds.w	r3, r9, r9
 8003758:	eb4a 040a 	adc.w	r4, sl, sl
 800375c:	4699      	mov	r9, r3
 800375e:	46a2      	mov	sl, r4
 8003760:	eb19 0905 	adds.w	r9, r9, r5
 8003764:	eb4a 0a06 	adc.w	sl, sl, r6
 8003768:	f04f 0100 	mov.w	r1, #0
 800376c:	f04f 0200 	mov.w	r2, #0
 8003770:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003774:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8003778:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800377c:	4689      	mov	r9, r1
 800377e:	4692      	mov	sl, r2
 8003780:	eb19 0005 	adds.w	r0, r9, r5
 8003784:	eb4a 0106 	adc.w	r1, sl, r6
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	685b      	ldr	r3, [r3, #4]
 800378c:	461d      	mov	r5, r3
 800378e:	f04f 0600 	mov.w	r6, #0
 8003792:	196b      	adds	r3, r5, r5
 8003794:	eb46 0406 	adc.w	r4, r6, r6
 8003798:	461a      	mov	r2, r3
 800379a:	4623      	mov	r3, r4
 800379c:	f7fc fd14 	bl	80001c8 <__aeabi_uldivmod>
 80037a0:	4603      	mov	r3, r0
 80037a2:	460c      	mov	r4, r1
 80037a4:	461a      	mov	r2, r3
 80037a6:	4b0c      	ldr	r3, [pc, #48]	; (80037d8 <UART_SetConfig+0x384>)
 80037a8:	fba3 1302 	umull	r1, r3, r3, r2
 80037ac:	095b      	lsrs	r3, r3, #5
 80037ae:	2164      	movs	r1, #100	; 0x64
 80037b0:	fb01 f303 	mul.w	r3, r1, r3
 80037b4:	1ad3      	subs	r3, r2, r3
 80037b6:	00db      	lsls	r3, r3, #3
 80037b8:	3332      	adds	r3, #50	; 0x32
 80037ba:	4a07      	ldr	r2, [pc, #28]	; (80037d8 <UART_SetConfig+0x384>)
 80037bc:	fba2 2303 	umull	r2, r3, r2, r3
 80037c0:	095b      	lsrs	r3, r3, #5
 80037c2:	f003 0207 	and.w	r2, r3, #7
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	4442      	add	r2, r8
 80037cc:	609a      	str	r2, [r3, #8]
 80037ce:	e1b2      	b.n	8003b36 <UART_SetConfig+0x6e2>
 80037d0:	40011000 	.word	0x40011000
 80037d4:	40011400 	.word	0x40011400
 80037d8:	51eb851f 	.word	0x51eb851f
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	4ad7      	ldr	r2, [pc, #860]	; (8003b40 <UART_SetConfig+0x6ec>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d005      	beq.n	80037f2 <UART_SetConfig+0x39e>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	681b      	ldr	r3, [r3, #0]
 80037ea:	4ad6      	ldr	r2, [pc, #856]	; (8003b44 <UART_SetConfig+0x6f0>)
 80037ec:	4293      	cmp	r3, r2
 80037ee:	f040 80d1 	bne.w	8003994 <UART_SetConfig+0x540>
 80037f2:	f7ff faef 	bl	8002dd4 <HAL_RCC_GetPCLK2Freq>
 80037f6:	60b8      	str	r0, [r7, #8]
 80037f8:	68bb      	ldr	r3, [r7, #8]
 80037fa:	469a      	mov	sl, r3
 80037fc:	f04f 0b00 	mov.w	fp, #0
 8003800:	46d0      	mov	r8, sl
 8003802:	46d9      	mov	r9, fp
 8003804:	eb18 0308 	adds.w	r3, r8, r8
 8003808:	eb49 0409 	adc.w	r4, r9, r9
 800380c:	4698      	mov	r8, r3
 800380e:	46a1      	mov	r9, r4
 8003810:	eb18 080a 	adds.w	r8, r8, sl
 8003814:	eb49 090b 	adc.w	r9, r9, fp
 8003818:	f04f 0100 	mov.w	r1, #0
 800381c:	f04f 0200 	mov.w	r2, #0
 8003820:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8003824:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8003828:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800382c:	4688      	mov	r8, r1
 800382e:	4691      	mov	r9, r2
 8003830:	eb1a 0508 	adds.w	r5, sl, r8
 8003834:	eb4b 0609 	adc.w	r6, fp, r9
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	685b      	ldr	r3, [r3, #4]
 800383c:	4619      	mov	r1, r3
 800383e:	f04f 0200 	mov.w	r2, #0
 8003842:	f04f 0300 	mov.w	r3, #0
 8003846:	f04f 0400 	mov.w	r4, #0
 800384a:	0094      	lsls	r4, r2, #2
 800384c:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8003850:	008b      	lsls	r3, r1, #2
 8003852:	461a      	mov	r2, r3
 8003854:	4623      	mov	r3, r4
 8003856:	4628      	mov	r0, r5
 8003858:	4631      	mov	r1, r6
 800385a:	f7fc fcb5 	bl	80001c8 <__aeabi_uldivmod>
 800385e:	4603      	mov	r3, r0
 8003860:	460c      	mov	r4, r1
 8003862:	461a      	mov	r2, r3
 8003864:	4bb8      	ldr	r3, [pc, #736]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003866:	fba3 2302 	umull	r2, r3, r3, r2
 800386a:	095b      	lsrs	r3, r3, #5
 800386c:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003870:	68bb      	ldr	r3, [r7, #8]
 8003872:	469b      	mov	fp, r3
 8003874:	f04f 0c00 	mov.w	ip, #0
 8003878:	46d9      	mov	r9, fp
 800387a:	46e2      	mov	sl, ip
 800387c:	eb19 0309 	adds.w	r3, r9, r9
 8003880:	eb4a 040a 	adc.w	r4, sl, sl
 8003884:	4699      	mov	r9, r3
 8003886:	46a2      	mov	sl, r4
 8003888:	eb19 090b 	adds.w	r9, r9, fp
 800388c:	eb4a 0a0c 	adc.w	sl, sl, ip
 8003890:	f04f 0100 	mov.w	r1, #0
 8003894:	f04f 0200 	mov.w	r2, #0
 8003898:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800389c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80038a0:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80038a4:	4689      	mov	r9, r1
 80038a6:	4692      	mov	sl, r2
 80038a8:	eb1b 0509 	adds.w	r5, fp, r9
 80038ac:	eb4c 060a 	adc.w	r6, ip, sl
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	685b      	ldr	r3, [r3, #4]
 80038b4:	4619      	mov	r1, r3
 80038b6:	f04f 0200 	mov.w	r2, #0
 80038ba:	f04f 0300 	mov.w	r3, #0
 80038be:	f04f 0400 	mov.w	r4, #0
 80038c2:	0094      	lsls	r4, r2, #2
 80038c4:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80038c8:	008b      	lsls	r3, r1, #2
 80038ca:	461a      	mov	r2, r3
 80038cc:	4623      	mov	r3, r4
 80038ce:	4628      	mov	r0, r5
 80038d0:	4631      	mov	r1, r6
 80038d2:	f7fc fc79 	bl	80001c8 <__aeabi_uldivmod>
 80038d6:	4603      	mov	r3, r0
 80038d8:	460c      	mov	r4, r1
 80038da:	461a      	mov	r2, r3
 80038dc:	4b9a      	ldr	r3, [pc, #616]	; (8003b48 <UART_SetConfig+0x6f4>)
 80038de:	fba3 1302 	umull	r1, r3, r3, r2
 80038e2:	095b      	lsrs	r3, r3, #5
 80038e4:	2164      	movs	r1, #100	; 0x64
 80038e6:	fb01 f303 	mul.w	r3, r1, r3
 80038ea:	1ad3      	subs	r3, r2, r3
 80038ec:	011b      	lsls	r3, r3, #4
 80038ee:	3332      	adds	r3, #50	; 0x32
 80038f0:	4a95      	ldr	r2, [pc, #596]	; (8003b48 <UART_SetConfig+0x6f4>)
 80038f2:	fba2 2303 	umull	r2, r3, r2, r3
 80038f6:	095b      	lsrs	r3, r3, #5
 80038f8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80038fc:	4498      	add	r8, r3
 80038fe:	68bb      	ldr	r3, [r7, #8]
 8003900:	469b      	mov	fp, r3
 8003902:	f04f 0c00 	mov.w	ip, #0
 8003906:	46d9      	mov	r9, fp
 8003908:	46e2      	mov	sl, ip
 800390a:	eb19 0309 	adds.w	r3, r9, r9
 800390e:	eb4a 040a 	adc.w	r4, sl, sl
 8003912:	4699      	mov	r9, r3
 8003914:	46a2      	mov	sl, r4
 8003916:	eb19 090b 	adds.w	r9, r9, fp
 800391a:	eb4a 0a0c 	adc.w	sl, sl, ip
 800391e:	f04f 0100 	mov.w	r1, #0
 8003922:	f04f 0200 	mov.w	r2, #0
 8003926:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800392a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800392e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8003932:	4689      	mov	r9, r1
 8003934:	4692      	mov	sl, r2
 8003936:	eb1b 0509 	adds.w	r5, fp, r9
 800393a:	eb4c 060a 	adc.w	r6, ip, sl
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	685b      	ldr	r3, [r3, #4]
 8003942:	4619      	mov	r1, r3
 8003944:	f04f 0200 	mov.w	r2, #0
 8003948:	f04f 0300 	mov.w	r3, #0
 800394c:	f04f 0400 	mov.w	r4, #0
 8003950:	0094      	lsls	r4, r2, #2
 8003952:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8003956:	008b      	lsls	r3, r1, #2
 8003958:	461a      	mov	r2, r3
 800395a:	4623      	mov	r3, r4
 800395c:	4628      	mov	r0, r5
 800395e:	4631      	mov	r1, r6
 8003960:	f7fc fc32 	bl	80001c8 <__aeabi_uldivmod>
 8003964:	4603      	mov	r3, r0
 8003966:	460c      	mov	r4, r1
 8003968:	461a      	mov	r2, r3
 800396a:	4b77      	ldr	r3, [pc, #476]	; (8003b48 <UART_SetConfig+0x6f4>)
 800396c:	fba3 1302 	umull	r1, r3, r3, r2
 8003970:	095b      	lsrs	r3, r3, #5
 8003972:	2164      	movs	r1, #100	; 0x64
 8003974:	fb01 f303 	mul.w	r3, r1, r3
 8003978:	1ad3      	subs	r3, r2, r3
 800397a:	011b      	lsls	r3, r3, #4
 800397c:	3332      	adds	r3, #50	; 0x32
 800397e:	4a72      	ldr	r2, [pc, #456]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003980:	fba2 2303 	umull	r2, r3, r2, r3
 8003984:	095b      	lsrs	r3, r3, #5
 8003986:	f003 020f 	and.w	r2, r3, #15
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	4442      	add	r2, r8
 8003990:	609a      	str	r2, [r3, #8]
 8003992:	e0d0      	b.n	8003b36 <UART_SetConfig+0x6e2>
 8003994:	f7ff fa0a 	bl	8002dac <HAL_RCC_GetPCLK1Freq>
 8003998:	60b8      	str	r0, [r7, #8]
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	469a      	mov	sl, r3
 800399e:	f04f 0b00 	mov.w	fp, #0
 80039a2:	46d0      	mov	r8, sl
 80039a4:	46d9      	mov	r9, fp
 80039a6:	eb18 0308 	adds.w	r3, r8, r8
 80039aa:	eb49 0409 	adc.w	r4, r9, r9
 80039ae:	4698      	mov	r8, r3
 80039b0:	46a1      	mov	r9, r4
 80039b2:	eb18 080a 	adds.w	r8, r8, sl
 80039b6:	eb49 090b 	adc.w	r9, r9, fp
 80039ba:	f04f 0100 	mov.w	r1, #0
 80039be:	f04f 0200 	mov.w	r2, #0
 80039c2:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80039c6:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80039ca:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80039ce:	4688      	mov	r8, r1
 80039d0:	4691      	mov	r9, r2
 80039d2:	eb1a 0508 	adds.w	r5, sl, r8
 80039d6:	eb4b 0609 	adc.w	r6, fp, r9
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	685b      	ldr	r3, [r3, #4]
 80039de:	4619      	mov	r1, r3
 80039e0:	f04f 0200 	mov.w	r2, #0
 80039e4:	f04f 0300 	mov.w	r3, #0
 80039e8:	f04f 0400 	mov.w	r4, #0
 80039ec:	0094      	lsls	r4, r2, #2
 80039ee:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80039f2:	008b      	lsls	r3, r1, #2
 80039f4:	461a      	mov	r2, r3
 80039f6:	4623      	mov	r3, r4
 80039f8:	4628      	mov	r0, r5
 80039fa:	4631      	mov	r1, r6
 80039fc:	f7fc fbe4 	bl	80001c8 <__aeabi_uldivmod>
 8003a00:	4603      	mov	r3, r0
 8003a02:	460c      	mov	r4, r1
 8003a04:	461a      	mov	r2, r3
 8003a06:	4b50      	ldr	r3, [pc, #320]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003a08:	fba3 2302 	umull	r2, r3, r3, r2
 8003a0c:	095b      	lsrs	r3, r3, #5
 8003a0e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003a12:	68bb      	ldr	r3, [r7, #8]
 8003a14:	469b      	mov	fp, r3
 8003a16:	f04f 0c00 	mov.w	ip, #0
 8003a1a:	46d9      	mov	r9, fp
 8003a1c:	46e2      	mov	sl, ip
 8003a1e:	eb19 0309 	adds.w	r3, r9, r9
 8003a22:	eb4a 040a 	adc.w	r4, sl, sl
 8003a26:	4699      	mov	r9, r3
 8003a28:	46a2      	mov	sl, r4
 8003a2a:	eb19 090b 	adds.w	r9, r9, fp
 8003a2e:	eb4a 0a0c 	adc.w	sl, sl, ip
 8003a32:	f04f 0100 	mov.w	r1, #0
 8003a36:	f04f 0200 	mov.w	r2, #0
 8003a3a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003a3e:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8003a42:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8003a46:	4689      	mov	r9, r1
 8003a48:	4692      	mov	sl, r2
 8003a4a:	eb1b 0509 	adds.w	r5, fp, r9
 8003a4e:	eb4c 060a 	adc.w	r6, ip, sl
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	685b      	ldr	r3, [r3, #4]
 8003a56:	4619      	mov	r1, r3
 8003a58:	f04f 0200 	mov.w	r2, #0
 8003a5c:	f04f 0300 	mov.w	r3, #0
 8003a60:	f04f 0400 	mov.w	r4, #0
 8003a64:	0094      	lsls	r4, r2, #2
 8003a66:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8003a6a:	008b      	lsls	r3, r1, #2
 8003a6c:	461a      	mov	r2, r3
 8003a6e:	4623      	mov	r3, r4
 8003a70:	4628      	mov	r0, r5
 8003a72:	4631      	mov	r1, r6
 8003a74:	f7fc fba8 	bl	80001c8 <__aeabi_uldivmod>
 8003a78:	4603      	mov	r3, r0
 8003a7a:	460c      	mov	r4, r1
 8003a7c:	461a      	mov	r2, r3
 8003a7e:	4b32      	ldr	r3, [pc, #200]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003a80:	fba3 1302 	umull	r1, r3, r3, r2
 8003a84:	095b      	lsrs	r3, r3, #5
 8003a86:	2164      	movs	r1, #100	; 0x64
 8003a88:	fb01 f303 	mul.w	r3, r1, r3
 8003a8c:	1ad3      	subs	r3, r2, r3
 8003a8e:	011b      	lsls	r3, r3, #4
 8003a90:	3332      	adds	r3, #50	; 0x32
 8003a92:	4a2d      	ldr	r2, [pc, #180]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003a94:	fba2 2303 	umull	r2, r3, r2, r3
 8003a98:	095b      	lsrs	r3, r3, #5
 8003a9a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003a9e:	4498      	add	r8, r3
 8003aa0:	68bb      	ldr	r3, [r7, #8]
 8003aa2:	469b      	mov	fp, r3
 8003aa4:	f04f 0c00 	mov.w	ip, #0
 8003aa8:	46d9      	mov	r9, fp
 8003aaa:	46e2      	mov	sl, ip
 8003aac:	eb19 0309 	adds.w	r3, r9, r9
 8003ab0:	eb4a 040a 	adc.w	r4, sl, sl
 8003ab4:	4699      	mov	r9, r3
 8003ab6:	46a2      	mov	sl, r4
 8003ab8:	eb19 090b 	adds.w	r9, r9, fp
 8003abc:	eb4a 0a0c 	adc.w	sl, sl, ip
 8003ac0:	f04f 0100 	mov.w	r1, #0
 8003ac4:	f04f 0200 	mov.w	r2, #0
 8003ac8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003acc:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8003ad0:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8003ad4:	4689      	mov	r9, r1
 8003ad6:	4692      	mov	sl, r2
 8003ad8:	eb1b 0509 	adds.w	r5, fp, r9
 8003adc:	eb4c 060a 	adc.w	r6, ip, sl
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	685b      	ldr	r3, [r3, #4]
 8003ae4:	4619      	mov	r1, r3
 8003ae6:	f04f 0200 	mov.w	r2, #0
 8003aea:	f04f 0300 	mov.w	r3, #0
 8003aee:	f04f 0400 	mov.w	r4, #0
 8003af2:	0094      	lsls	r4, r2, #2
 8003af4:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8003af8:	008b      	lsls	r3, r1, #2
 8003afa:	461a      	mov	r2, r3
 8003afc:	4623      	mov	r3, r4
 8003afe:	4628      	mov	r0, r5
 8003b00:	4631      	mov	r1, r6
 8003b02:	f7fc fb61 	bl	80001c8 <__aeabi_uldivmod>
 8003b06:	4603      	mov	r3, r0
 8003b08:	460c      	mov	r4, r1
 8003b0a:	461a      	mov	r2, r3
 8003b0c:	4b0e      	ldr	r3, [pc, #56]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003b0e:	fba3 1302 	umull	r1, r3, r3, r2
 8003b12:	095b      	lsrs	r3, r3, #5
 8003b14:	2164      	movs	r1, #100	; 0x64
 8003b16:	fb01 f303 	mul.w	r3, r1, r3
 8003b1a:	1ad3      	subs	r3, r2, r3
 8003b1c:	011b      	lsls	r3, r3, #4
 8003b1e:	3332      	adds	r3, #50	; 0x32
 8003b20:	4a09      	ldr	r2, [pc, #36]	; (8003b48 <UART_SetConfig+0x6f4>)
 8003b22:	fba2 2303 	umull	r2, r3, r2, r3
 8003b26:	095b      	lsrs	r3, r3, #5
 8003b28:	f003 020f 	and.w	r2, r3, #15
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	4442      	add	r2, r8
 8003b32:	609a      	str	r2, [r3, #8]
 8003b34:	e7ff      	b.n	8003b36 <UART_SetConfig+0x6e2>
 8003b36:	bf00      	nop
 8003b38:	3714      	adds	r7, #20
 8003b3a:	46bd      	mov	sp, r7
 8003b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b40:	40011000 	.word	0x40011000
 8003b44:	40011400 	.word	0x40011400
 8003b48:	51eb851f 	.word	0x51eb851f

08003b4c <__libc_init_array>:
 8003b4c:	b570      	push	{r4, r5, r6, lr}
 8003b4e:	4e0d      	ldr	r6, [pc, #52]	; (8003b84 <__libc_init_array+0x38>)
 8003b50:	4c0d      	ldr	r4, [pc, #52]	; (8003b88 <__libc_init_array+0x3c>)
 8003b52:	1ba4      	subs	r4, r4, r6
 8003b54:	10a4      	asrs	r4, r4, #2
 8003b56:	2500      	movs	r5, #0
 8003b58:	42a5      	cmp	r5, r4
 8003b5a:	d109      	bne.n	8003b70 <__libc_init_array+0x24>
 8003b5c:	4e0b      	ldr	r6, [pc, #44]	; (8003b8c <__libc_init_array+0x40>)
 8003b5e:	4c0c      	ldr	r4, [pc, #48]	; (8003b90 <__libc_init_array+0x44>)
 8003b60:	f000 f82c 	bl	8003bbc <_init>
 8003b64:	1ba4      	subs	r4, r4, r6
 8003b66:	10a4      	asrs	r4, r4, #2
 8003b68:	2500      	movs	r5, #0
 8003b6a:	42a5      	cmp	r5, r4
 8003b6c:	d105      	bne.n	8003b7a <__libc_init_array+0x2e>
 8003b6e:	bd70      	pop	{r4, r5, r6, pc}
 8003b70:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003b74:	4798      	blx	r3
 8003b76:	3501      	adds	r5, #1
 8003b78:	e7ee      	b.n	8003b58 <__libc_init_array+0xc>
 8003b7a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003b7e:	4798      	blx	r3
 8003b80:	3501      	adds	r5, #1
 8003b82:	e7f2      	b.n	8003b6a <__libc_init_array+0x1e>
 8003b84:	08003bfc 	.word	0x08003bfc
 8003b88:	08003bfc 	.word	0x08003bfc
 8003b8c:	08003bfc 	.word	0x08003bfc
 8003b90:	08003c00 	.word	0x08003c00

08003b94 <memcpy>:
 8003b94:	b510      	push	{r4, lr}
 8003b96:	1e43      	subs	r3, r0, #1
 8003b98:	440a      	add	r2, r1
 8003b9a:	4291      	cmp	r1, r2
 8003b9c:	d100      	bne.n	8003ba0 <memcpy+0xc>
 8003b9e:	bd10      	pop	{r4, pc}
 8003ba0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003ba4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003ba8:	e7f7      	b.n	8003b9a <memcpy+0x6>

08003baa <memset>:
 8003baa:	4402      	add	r2, r0
 8003bac:	4603      	mov	r3, r0
 8003bae:	4293      	cmp	r3, r2
 8003bb0:	d100      	bne.n	8003bb4 <memset+0xa>
 8003bb2:	4770      	bx	lr
 8003bb4:	f803 1b01 	strb.w	r1, [r3], #1
 8003bb8:	e7f9      	b.n	8003bae <memset+0x4>
	...

08003bbc <_init>:
 8003bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bbe:	bf00      	nop
 8003bc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003bc2:	bc08      	pop	{r3}
 8003bc4:	469e      	mov	lr, r3
 8003bc6:	4770      	bx	lr

08003bc8 <_fini>:
 8003bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bca:	bf00      	nop
 8003bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003bce:	bc08      	pop	{r3}
 8003bd0:	469e      	mov	lr, r3
 8003bd2:	4770      	bx	lr
